<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Ashwin Vishnu's Website</title><link href="https://ashwinvis.github.io/" rel="alternate"></link><link href="https://ashwinvis.github.io/feeds/all.atom.xml" rel="self"></link><id>https://ashwinvis.github.io/</id><updated>2021-06-10T23:49:40+02:00</updated><entry><title>GitHub - ashwinvis/ashwinvis-micropub</title><link href="https://ashwinvis.github.io/github-ashwinvis-ashwinvis-micropub.html" rel="alternate"></link><published>2021-06-10T23:49:40+02:00</published><updated>2021-06-10T23:49:40+02:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2021-06-10:/github-ashwinvis-ashwinvis-micropub.html</id><summary type="html"></summary><content type="html">&lt;p&gt;Compared to last time I tried it (a year or two ago), now the &lt;a href="https://getindiekit.com"&gt;IndieKit project&lt;/a&gt; has matured and is fairly well documented. I have deployed my &lt;a href="https://github.com/ashwinvis/ashwinvis-micropub"&gt;micropub server&lt;/a&gt; to allow for effortless micro blogging to my Pelican blog. &lt;/p&gt;
&lt;p&gt;Since Pelican style metadata was not available, I had to implement it. I learned a bit of NodeJS development in the process - it was not easy.&lt;/p&gt;</content><category term="Microblog"></category></entry><entry><title>Micropub - IndieWeb | https://indieweb.org/</title><link href="https://ashwinvis.github.io/micropub-indieweb-https-indieweb-org.html" rel="alternate"></link><published>2021-06-10T22:39:46+02:00</published><updated>2021-06-10T22:39:46+02:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2021-06-10:/micropub-indieweb-https-indieweb-org.html</id><summary type="html"></summary><content type="html">&lt;p&gt;Testing share function of my micropub server&lt;/p&gt;</content><category term="bookmarks"></category></entry><entry><title>Ternary operators</title><link href="https://ashwinvis.github.io/ternary-operators.html" rel="alternate"></link><published>2021-05-16T12:41:13+02:00</published><updated>2021-05-16T12:41:13+02:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2021-05-16:/ternary-operators.html</id><summary type="html">&lt;p&gt;Different ways to compose ternary operator to condense if-else statements into expressions in several programming languages&lt;/p&gt;</summary><content type="html">&lt;p&gt;Python has made a concious choice of promoting readability through its syntax.
A good example of this is the &lt;strong&gt;conditional expression&lt;/strong&gt; or &lt;strong&gt;ternary if-else
"operator"&lt;/strong&gt; in Python. What it means is instead of:&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;even_or_odd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Even or odd is defined for positive integers only!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;even&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;odd&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;you can write in a condensed yet easy to decipher:&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;even_or_odd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Even or odd is defined for positive integers only!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;even&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;odd&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you are new to this, I highly recommend that you use this. It would
reduce the indentation in nested if-else statements and need for intermediate
variables in more real-life codes.&lt;/p&gt;
&lt;h2 id="in-other-languages"&gt;&lt;a class="toclink" href="#in-other-languages"&gt;In other languages&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In C/C++, Java, ECMAScript (a.k.a JavaScript) and possibly more languages the
syntax is a bit more terse. It looks like this with ECMAScript:&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;even_or_odd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Even or odd is defined for positive integers only!&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mf"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mf"&gt;0&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;even&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;odd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;An advantage is that the syntax is more condensed; but as a downside, one
needs to remember which side of the colon &lt;code&gt;:&lt;/code&gt; assumes the value when the
condition is &lt;code&gt;True&lt;/code&gt; and &lt;em&gt;vice versa&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id="c-style-ternary-operators-using-logical-operators"&gt;&lt;a class="toclink" href="#c-style-ternary-operators-using-logical-operators"&gt;C-style ternary operators using logical operators&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I found a trick to create similar obfuscated ternary operators in Python. Here it goes:&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;even_or_odd_ugly&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Even or odd is defined for positive integers only!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;even&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;odd&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It looks nearly like the C-style ternary operator, but is not at all readable.
It works because &lt;a href="https://docs.python.org/3/library/stdtypes.html?#boolean-operations-and-or-not"&gt;how the logical boolean operators &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;
short-circuits&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In Bash-like shells such expressions can be used to achieve the same effect:&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;even_or_odd&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; x -le &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Even or odd is defined for positive integers only!&amp;quot;&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
  &lt;span class="k"&gt;fi&lt;/span&gt;

  &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="k"&gt;$((&lt;/span&gt;x &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="k"&gt;))&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;even&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;odd&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;While writing shell scripts such "ternary operators" are an idiom, because Bash
commands returns a non-zero value in case of failure. This would be
preferred over use of if-else constructs in Bash which, I think, are
complicated in getting the syntax right.&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p build
./build.sh &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Build successful!&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Build failed! Cleaning up ...&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -r build
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="bonus-when-to-avoid-if-else-statements-in-python"&gt;&lt;a class="toclink" href="#bonus-when-to-avoid-if-else-statements-in-python"&gt;Bonus: when to avoid if-else statements in Python&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We saw a good example of when to use conditional expressions in Python. Now we
go on a tangent to look at some features baked into Python which further allow
the need for if-else statements.&lt;/p&gt;
&lt;h3 id="dictionary-lookup"&gt;&lt;a class="toclink" href="#dictionary-lookup"&gt;Dictionary lookup&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Instead of:&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# assume the variable `color_of_fruits` is a dictionary&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;apple&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;color_of_fruits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;color_of_fruits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;apple&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;you could use the oneliner:&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;color_of_fruits&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;apple&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Environment variables of the system are accessed via a special dictionary-like
object &lt;code&gt;os.environ&lt;/code&gt;. However, for environment variables, there is a handy standard
library function &lt;code&gt;os.getenv&lt;/code&gt; which is useful. Instead of:&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;CC&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;c_compiler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CC&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;c_compiler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;gcc&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;use:&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="n"&gt;c_compiler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CC&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;gcc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For both the &lt;a href="https://docs.python.org/3/library/stdtypes.html#dict.get"&gt;&lt;code&gt;dict.get&lt;/code&gt;&lt;/a&gt; method and &lt;a href="https://docs.python.org/3.8/library/os.html?#os.getenv"&gt;&lt;code&gt;os.getenv&lt;/code&gt;&lt;/a&gt; function, if
you leave out the default value, you get &lt;code&gt;None&lt;/code&gt; and no &lt;code&gt;KeyError&lt;/code&gt; would
be raised.&lt;/p&gt;
&lt;h3 id="fall-back-values"&gt;&lt;a class="toclink" href="#fall-back-values"&gt;Fall-back values&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Whenever you read files, download text from the internet it is not a 100%
guarantee that the result would be what you expect. In that case you might need
a fall-back value to work with. Take this naive case of reading and printing a
file &lt;code&gt;config.cfg&lt;/code&gt; which is empty:&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;print_config&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;config.cfg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;contents&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;File is empty&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;From the previous discussion, we see that we can simplify it using
conditional expressions as:&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;print_config_conditional&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;config.cfg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;File is empty&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;contents&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However in this case a cleaner option would be to use the short-circuiting
property of the &lt;code&gt;or&lt;/code&gt; operator to assign a fall-back value.&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;print_config_fallback&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;config.cfg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;File is empty&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that in Python world, evaluating &lt;code&gt;False&lt;/code&gt;, &lt;code&gt;""&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt; as a part of
a boolean expression would mean the same.  Also in &lt;code&gt;print_config_fallback&lt;/code&gt;, the
variable &lt;code&gt;contents&lt;/code&gt; is for illustrative purposes and can be avoided.&lt;/p&gt;
&lt;h2 id="further-reading"&gt;&lt;a class="toclink" href="#further-reading"&gt;Further reading&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.python.org/dev/peps/pep-0308/"&gt;PEP 308&lt;/a&gt; which introduced conditional expressions to Python around
  18 years ago.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/stdtypes.html#dict.get"&gt;&lt;code&gt;dict.get&lt;/code&gt; method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3.8/library/os.html?#os.getenv"&gt;&lt;code&gt;os.getenv&lt;/code&gt; function&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tech Talk"></category><category term="software"></category><category term="python"></category><category term="bash"></category><category term="c"></category><category term="cpp"></category><category term="java"></category><category term="ecmascript"></category></entry><entry><title>Fixing 434 links in 111 files for pyenv</title><link href="https://ashwinvis.github.io/fixing-links-for-pyenv.html" rel="alternate"></link><published>2020-08-20T16:50:51+02:00</published><updated>2020-08-20T16:50:51+02:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2020-08-20:/fixing-links-for-pyenv.html</id><summary type="html">&lt;p&gt;A.K.A. shell scripting is awesome, and why don’t-repeat-yourself (DRY) matters. Context: PyPy moved its repositories to Heptapod (unrelated, but I have to mention it is an awesome source-code forge and a project) and binary builds to downloads.python.org. PyPy could no longer be installed using pyenv. Since I happened to try install PyPy the same day it stopped working, I was among the few it noticed it.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;The project pyenv has several small bash scripts, one for each version, both
binary and source builds. This totalled to a staggering 111 files with 434
lines of code containing the base URL &lt;a href="https://bitbucket.org/pypy/pypy/downloads"&gt;https://bitbucket.org/pypy/pypy/downloads&lt;/a&gt;
(which no longer works). On one hand, it makes it easier to understand, to
contribute to and to maintain pyenv. But at rare events such as this, when the
entire PyPy repository gets moved to &lt;a href="https://downloads.python.org/pypy"&gt;https://downloads.python.org/pypy&lt;/a&gt;, it
becomes unnecessarily painful to fix the code, because the &lt;strong&gt;same “value” gets
repeated&lt;/strong&gt; all over the code base. Here is &lt;code&gt;pypy3.5-6.0.0-src&lt;/code&gt; for example:&lt;/p&gt;
&lt;pre&gt;#require_gcc
prefer_openssl11
install_package &amp;quot;openssl-1.1.0j&amp;quot; &amp;quot;https://www.openssl.org/source/old/1.1.0/openssl-1.1.0j.tar.gz#31bec6c203ce1a8e93d5994f4ed304c63ccf07676118b6634edded12ad1b3246&amp;quot; mac_openssl --if has_broken_mac_openssl
install_package &amp;quot;pypy3-v6.0.0-src&amp;quot; &amp;quot;https://bitbucket.org/pypy/pypy/downloads/pypy3-v6.0.0-src.tar.bz2#ed8005202b46d6fc6831df1d13a4613bc40084bfa42f275068edadf8954034a3&amp;quot; &amp;quot;pypy_builder&amp;quot; verify_py35 ensurepip&lt;/pre&gt;
&lt;p&gt;One way to fix this would be to write a Python code parsing all the text. But
for some reason, it felt natural to apply shell scripting to this problem,
functionally.&lt;/p&gt;
&lt;section id="awk-curl-to-parse-and-check-links"&gt;
&lt;h2&gt;AWK + cURL: To parse and check links&lt;/h2&gt;
&lt;pre class="m-code"&gt;&lt;span class="c1"&gt;#!/bin/awk -f&lt;/span&gt;

&lt;span class="sr"&gt;/install_.*bitbucket.org.pypy/&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;new&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
  &lt;span class="kr"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/bitbucket.org\/pypy\/pypy\/downloads/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;downloads.python.org/pypy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;new&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;curl -s -o /dev/null -i -w &amp;#39;%{http_code}&amp;#39; &amp;quot;&lt;/span&gt;&lt;span class="nx"&gt;new&lt;/span&gt;
  &lt;span class="nx"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;getline&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;
  &lt;span class="kr"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;200&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;# print &amp;quot;Working&amp;quot;&lt;/span&gt;
    &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;new&lt;/span&gt;
    &lt;span class="kr"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;  &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;# print &amp;quot;Not Working&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="kr"&gt;print&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;AWK makes it effortless to match patterns and split fields based on arbitary
whitespace. Once the URL is detected, the AWK built-in &lt;code&gt;gsub&lt;/code&gt; is used, similar
to sed, to replace the link into a variable. The link is pinged using cURL and
only the header is retrieved, printing out 200 if the link works. The link is
then replaced with the new alternative if the link works. The last AWK block
&lt;code&gt;{print}&lt;/code&gt; spits out every line, modified or not.&lt;/p&gt;
&lt;p&gt;A downside of using AWK is it strips out any white space, which is a problem as
indentation gets broken. As a stop gap measure, I hard code an indentation of 2
spaces which seemed to be the most common occurrence.&lt;/p&gt;
&lt;p&gt;The AWK script (&lt;code&gt;links.awk&lt;/code&gt;) can be applied on a single file without any
edits as follows:&lt;/p&gt;
&lt;pre&gt;❯ awk -f links.awk pypy3.3-5.5-alpha&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="bash-gnu-parallel-to-parallelize-and-map-the-script-over-all-files"&gt;
&lt;h2&gt;Bash + GNU Parallel: To parallelize and map the script over all files&lt;/h2&gt;
&lt;pre class="m-code"&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; -e
awk -f links.awk &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;.new&amp;quot;&lt;/span&gt;
mv -f &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;.new&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;This nifty bash script takes one argument &lt;code&gt;$1&lt;/code&gt; which is a file we need to
change and outputs to a temporary file. If no error is encountered the original
file is replaced.&lt;/p&gt;
&lt;p&gt;The bash script (&lt;code&gt;links.sh&lt;/code&gt;) is parallelized on all files. An arbitrary
threshold of 4 processes are set in order to not spam the server:&lt;/p&gt;
&lt;pre&gt;ls pypy* -1 | parallel -j4 &amp;quot;./links.sh {}&amp;quot;&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="vim-auto-formatting-bash-code"&gt;
&lt;h2&gt;Vim: Auto-formatting bash code&lt;/h2&gt;
&lt;p&gt;I needed to format the bash code to counter the indentations stripped out by
the AWK code. However, I did not want to touch all lines, because the files in
pyenv uses a strange code-style, where case blocks are not indented as it
should be:&lt;/p&gt;
&lt;pre&gt;case &amp;quot;$(pypy_architecture 2&amp;gt;/dev/null || true)&amp;quot; in
&amp;quot;linux&amp;quot; )
  install_package &amp;quot;pypy-1.6&amp;quot; &amp;quot;https://downloads.python.org/pypy/pypy-1.6-linux.tar.bz2#1266c8b5918d84432b8649535fb5c84f6b977331c242bf45c5944033562ce0b2&amp;quot; &amp;quot;pypy&amp;quot; verify_py27 ensurepip
  ;;
...&lt;/pre&gt;
&lt;p&gt;To my delight, Vim can &lt;a href="https://vim.fandom.com/wiki/Format_a_code_block"&gt;format&lt;/a&gt; any code intelligently, for an entire buffer, or
a block or a line (which is what I needed). A simple normal-mode mapping
&lt;code&gt;==&lt;/code&gt; works like a charm. I came up with this Vim script to search
for a pattern in a file and indent them.&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:FixIndents&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;ft&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;bash &lt;span class="nb"&gt;smartindent&lt;/span&gt;

&lt;span class="c"&gt;  &amp;quot; start at the top&lt;/span&gt;
  normal gg

&lt;span class="c"&gt;  &amp;quot; search for a particular string till end of the file, do not wrap&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; search&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;^\\s*install_&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;W&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;    &amp;quot; auto indent&lt;/span&gt;
    normal &lt;span class="p"&gt;==&lt;/span&gt;
  &lt;span class="k"&gt;endwhile&lt;/span&gt;

&lt;span class="c"&gt;  &amp;quot; save and quit&lt;/span&gt;
  &lt;span class="nb"&gt;write&lt;/span&gt;
  quit
&lt;span class="k"&gt;endfunction&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;One way to execute this would be to open all files as buffers in Vim and use
the &lt;code&gt;:source&lt;/code&gt; (to source the above Vim script) and &lt;code&gt;:bufdo call
FixIndents()&lt;/code&gt; command (to apply the function on all buffers). However this
proved to be too slow. Thus, once again the Vim script (&lt;code&gt;fix_indents.vim&lt;/code&gt;) is
sourced and the function &lt;code&gt;FixIndents()&lt;/code&gt; is called on the all files as
follows:&lt;/p&gt;
&lt;pre&gt;ls -1 pypy* | parallel &amp;quot;vim --not-a-term -S fix_indents.vim +'call FixIndents()' {}&amp;quot;&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="epilogue"&gt;
&lt;h2&gt;Epilogue&lt;/h2&gt;
&lt;p&gt;It was a pleasing and learning experience to discover new bells and whistles of
tools that I often use. And all thanks to UNIX philosophy, disparate tools can
work together in harmony. The &lt;a href="https://github.com/pyenv/pyenv/pull/1682"&gt;end-result&lt;/a&gt; was merged into pyenv today.&lt;/p&gt;
&lt;/section&gt;
</content><category term="Tech Talk"></category><category term="software"></category><category term="python"></category><category term="open-source"></category></entry><entry><title>Power to the user (CSS)</title><link href="https://ashwinvis.github.io/power-to-the-usercss.html" rel="alternate"></link><published>2020-06-24T09:30:09+02:00</published><updated>2020-06-24T09:30:09+02:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2020-06-24:/power-to-the-usercss.html</id><summary type="html">&lt;p&gt;Tweaking the world wide web, one CSS stylesheet at a time&lt;/p&gt;</summary><content type="html">&lt;p&gt;You probably know that you can tweak appearance of websites with add-ons like
Stylus.  Ever since I figured out &lt;a href="https://developer.mozilla.org/en-US/docs/Tools/Page_Inspector"&gt;how to use
Inspector&lt;/a&gt; and
&lt;a href="https://github.com/openstyles/stylus/wiki/Writing-styles"&gt;how to write&lt;/a&gt;
"installable" CSS stylesheets myself, I cannot resist the urge to fix websites
with a uneasy appearance. I try to fix it with a few lines of CSS and share it
with others.&lt;/p&gt;
&lt;h2 id="github-retro"&gt;&lt;a class="toclink" href="#github-retro"&gt;&lt;a href="https://gist.github.com/ashwinvis/569e7814ff91f52807554789afa7f107"&gt;GitHub Retro&lt;/a&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;GitHub quickly rolled out a new wider interface, which could be done a bit better,
IMHO.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Before&lt;/th&gt;
&lt;th align="center"&gt;After&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;img src="https://user-images.githubusercontent.com/9155111/85446389-ac604900-b594-11ea-8a1f-1018031719e0.png" width="100%"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;img src="https://user-images.githubusercontent.com/9155111/85515309-42c85500-b5fd-11ea-94d1-057e972bdc8c.png" width="100%"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/ashwinvis/569e7814ff91f52807554789afa7f107"&gt;Get it here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="mastodon-relax"&gt;&lt;a class="toclink" href="#mastodon-relax"&gt;&lt;a href="https://github.com/ashwinvis/mastodon-relax"&gt;Mastodon Relax&lt;/a&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is more advanced as it uses &lt;a href="https://github.com/FirefoxBar/xStyle/wiki/Style-format#use-advanced-options-in-styles"&gt;configurable
parameters&lt;/a&gt;.
The CSS rules are also less hacky, thanks to identifiable CSS classes in
Mastodon's frontend.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Before&lt;/th&gt;
&lt;th align="center"&gt;After&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;img alt="mr-before" src="https://raw.githubusercontent.com/ashwinvis/mastodon-relax/master/images/before.png"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;img alt="mr-after" src="https://raw.githubusercontent.com/ashwinvis/mastodon-relax/master/images/after.png"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href="https://github.com/ashwinvis/mastodon-relax"&gt;Get it here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The stylesheets are CC-BY-SA licensed. Hope it is useful for you.&lt;/p&gt;</content><category term="Tech Talk"></category><category term="software"></category><category term="css"></category></entry><entry><title>Think before you monospace</title><link href="https://ashwinvis.github.io/ultimate-monospace.html" rel="alternate"></link><published>2020-06-15T17:23:27+02:00</published><updated>2020-06-15T17:23:27+02:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2020-06-15:/ultimate-monospace.html</id><summary type="html">&lt;p&gt;Put your programming font to the ultimate test case.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I conducted a &lt;a href="https://mastodon.acc.sunet.se/web/statuses/104329832337934635"&gt;poll&lt;/a&gt; on Mastodon to see if what fonts are used in programming
these days.&lt;/p&gt;
&lt;a href="https://mastodon.acc.sunet.se/web/statuses/104329832337934635"&gt;&lt;img alt="Poll on monospace font preference." class="m-image" src="/images/monospace_poll.png" /&gt;&lt;/a&gt;
&lt;p&gt;Despite the limited sample size, the poll seemed representative of package
installation &lt;a href="https://pkgstats.archlinux.de/compare/packages#packages=adobe-source-code-pro-fonts,ttf-anonymous-pro,ttf-bitstream-vera,ttf-cascadia-code,ttf-dejavu,ttf-hack,ttf-liberation,ttf-ms-fonts"&gt;statistics&lt;/a&gt;. After going through the replies to the &lt;a href="https://mastodon.acc.sunet.se/web/statuses/104329832337934635"&gt;poll&lt;/a&gt;, I
discovered a web application called &lt;a href="https://www.programmingfonts.org/"&gt;programming-fonts&lt;/a&gt; where you can try out 98
monospace fonts with syntax highlighting on the fly. However, a good test case was
missing.&lt;/p&gt;
&lt;p&gt;It is unlikely that a font would meet all features, while being &lt;em&gt;aesthetic&lt;/em&gt;.
Features include how similar characters are &lt;em&gt;distinguishable&lt;/em&gt; and eye-candy
like &lt;a href="https://www.hanselman.com/blog/MonospacedProgrammingFontsWithLigatures.aspx"&gt;ligatures&lt;/a&gt; (which can be useful or &lt;a href="https://nedbatchelder.com/blog/201604/latos_unfortunate_ligatures.html"&gt;weird&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;As they say,&lt;/p&gt;
&lt;blockquote&gt;
“Beauty lies in the eyes of the beholder.”&lt;/blockquote&gt;
&lt;p&gt;Here is a test case with some pseudo-code to identify common pitfalls and
features. See if it fits your needs and ensure no surprises.&lt;/p&gt;
&lt;style&gt;
 pre, code {
     font-family: monospace;
 }
 &lt;/style&gt;&lt;aside class="m-note m-info"&gt;
The test case below should render with the default monospace font
configured in your system. There are instructions in the end of the article
to try out a different font online by copying this test case template
as raw text.&lt;/aside&gt;
&lt;section id="test-case-template"&gt;
&lt;h2&gt;Test case template&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="m-code"&gt;&lt;span class="nd"&gt;@test&lt;/span&gt;                                 &lt;span class="c1"&gt;# INFO: How @ gets rendered&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;ultimate_monospace&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="c1"&gt;# INFO: Ligature for arrow&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;nfo&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;lnfo&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;Info&lt;/span&gt;       &lt;span class="c1"&gt;# WARN: 1, l, I should be distinguishable&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;O&lt;/span&gt;                     &lt;span class="c1"&gt;# WARN: 0 and O should be distinguishable&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;ifnd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;                 &lt;span class="c1"&gt;# WARN: Ligature for fi&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="c1"&gt;# INFO: Ligature for ==, &amp;gt;=&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Octave&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="m-code"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logic&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;oper&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;not&lt;/span&gt; &lt;span class="o"&gt;~=&lt;/span&gt; &lt;span class="n"&gt;equals&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;% INFO: Ligature for &amp;amp;&amp;amp;; WARN: for ~=&lt;/span&gt;
     &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Javascript&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="m-code"&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;arrow_operator&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;              &lt;span class="c1"&gt;// INFO: Ligatures for arrow operator&lt;/span&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;HTML&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="m-code"&gt;&lt;span class="c"&gt;&amp;lt;!-- INFO: Ligatures for HTML  --&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;/&amp;gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; tag &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Perl / Ruby / PHP&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="m-code"&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;                               &lt;span class="c1"&gt;# INFO: Ligatures for spaceship operator&lt;/span&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Haskell&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="m-code"&gt;&lt;span class="c1"&gt;-- INFO: Ligatures for Haskell operators: ++, &amp;gt;&amp;gt;=,&amp;lt;&amp;lt;=, &amp;gt;=&amp;gt;, &amp;lt;=&amp;lt;&lt;/span&gt;
&lt;span class="nf"&gt;a&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;

&lt;span class="c1"&gt;-- instead of&lt;/span&gt;
&lt;span class="nf"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;
&lt;span class="c1"&gt;-- simply go with&lt;/span&gt;
&lt;span class="nf"&gt;f&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;

&lt;span class="c1"&gt;-- instead of&lt;/span&gt;
&lt;span class="nf"&gt;\&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;
&lt;span class="c1"&gt;-- simply go with&lt;/span&gt;
&lt;span class="nf"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;
&lt;span class="c1"&gt;-- or&lt;/span&gt;
&lt;span class="nf"&gt;g&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="try-it-yourself"&gt;
&lt;h2&gt;Try it yourself&lt;/h2&gt;
&lt;p&gt;Here is how the above test case renders with Python syntax highlighting and
Fira Code font:&lt;/p&gt;
&lt;a href="https://www.programmingfonts.org/"&gt;&lt;img alt="Monospace font preview on programmingfonts.org" class="m-image" src="/images/monospace_preview.png" /&gt;&lt;/a&gt;
&lt;aside class="m-note m-primary"&gt;
Feel free to copy the &lt;a href="https://raw.githubusercontent.com/ashwinvis/ashwinvis.github.io/develop/content/2020-06-15-ultimate-monospace.rst"&gt;raw-text&lt;/a&gt; and try it out on &lt;a href="https://www.programmingfonts.org/"&gt;programming-fonts&lt;/a&gt;.&lt;/aside&gt;
&lt;/section&gt;
</content><category term="Tech Talk"></category><category term="software"></category><category term="typography"></category><category term="ligatures"></category><category term="programming"></category></entry><entry><title>Automate boring writing with Vim</title><link href="https://ashwinvis.github.io/automate-boring-writing-with-vim.html" rel="alternate"></link><published>2020-05-29T18:23:23+02:00</published><updated>2020-11-20T00:00:00+01:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2020-05-29:/automate-boring-writing-with-vim.html</id><summary type="html">&lt;p&gt;Constructing obscure keyboard maps a.k.a. shortcuts in Vim to make repetitive tasks easier&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Two of my most used markup languages these days are Markdown and
reStructuredText. For instance, a common operation is two add hyperlinks while
blogging.  Both languages provide concise syntaxes to make links, but they tend
to need a lot more keystrokes to get it right. Another pain-point is the need for
escaping certain special characters while searching and replacing text.&lt;/p&gt;
&lt;p&gt;Well, not anymore!&lt;/p&gt;
&lt;section id="requirements"&gt;
&lt;h2&gt;Requirements&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/tpope/vim-surround"&gt;vim-surround&lt;/a&gt;, &lt;a href="https://github.com/neovim/pynvim"&gt;pynvim&lt;/a&gt; + Neovim / Vim compiled with Python bindings&lt;/p&gt;
&lt;/section&gt;
&lt;section id="how-it-works"&gt;
&lt;h2&gt;How it works&lt;/h2&gt;
&lt;p&gt;Vim can be configured to behave differently based on the state it is in (reading to
buffer, file type, vim mode etc.). Keyboard shortcuts can be &lt;em&gt;mapped&lt;/em&gt; for such
scenarios either of these commands &lt;code&gt;map, nmap, imap, vmap, noremap, nnoremap,
inoremap, vnoremap&lt;/code&gt;.&lt;/p&gt;
&lt;section id="markdown"&gt;
&lt;h3&gt;Markdown&lt;/h3&gt;
&lt;p&gt;The following maps &lt;span class="strike"&gt;Shift+Enter&lt;/span&gt; &lt;code&gt;\a&lt;/code&gt; in the normal mode:&lt;/p&gt;
&lt;aside class="m-block m-warning"&gt;
&lt;h3&gt;Warning&lt;/h3&gt;
&lt;p&gt;Due to a quirk in terminals, it would be difficult to map &lt;code&gt;Shift+Enter&lt;/code&gt; /
&lt;code&gt;&amp;lt;S-CR&amp;gt;&lt;/code&gt; and &lt;code&gt;Ctrl+Enter&lt;/code&gt; / &lt;code&gt;&amp;lt;C-CR&amp;gt;&lt;/code&gt;.  Mapping &lt;code&gt;Shift-Enter&lt;/code&gt; might
be possible with some &lt;a href="https://stackoverflow.com/questions/16359878/vim-how-to-map-shift-enter"&gt;extra configuration&lt;/a&gt;
in your terminal. See also this stackoverflow &lt;a href="https://stackoverflow.com/a/598404"&gt;answer&lt;/a&gt;.&lt;/p&gt;
&lt;/aside&gt;
&lt;pre class="m-code"&gt;&lt;span class="c"&gt;&amp;quot;&amp;quot;Markdown: inline-link maker&lt;/span&gt;
&lt;span class="c"&gt;&amp;quot;surround with [], find ], append ()&lt;/span&gt;
&lt;span class="k"&gt;au&lt;/span&gt; &lt;span class="nb"&gt;FileType&lt;/span&gt; markdown&lt;span class="p"&gt;,&lt;/span&gt;pandoc nmap &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;a&lt;/span&gt; ysiW]&lt;span class="k"&gt;f&lt;/span&gt;]&lt;span class="k"&gt;a&lt;/span&gt;&lt;span class="p"&gt;()&amp;lt;&lt;/span&gt;ESC&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;i&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;to add an inline link:&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;before&lt;/span&gt;
A sample sentence with a link

&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;after&lt;/span&gt;
A sample sentence with a [link]()&lt;/pre&gt;
&lt;p&gt;The following maps &lt;code&gt;Enter&lt;/code&gt; in the normal mode:&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="c"&gt;&amp;quot;&amp;quot;Markdown: link maker&lt;/span&gt;
&lt;span class="c"&gt;&amp;quot;yank inner word, surround with [], find ], append [], paste word, move right&lt;/span&gt;
&lt;span class="c"&gt;&amp;quot;mark l, go to end of file, add a line, append [], paste, move right, append:&lt;/span&gt;
&lt;span class="k"&gt;au&lt;/span&gt; &lt;span class="nb"&gt;FileType&lt;/span&gt; markdown&lt;span class="p"&gt;,&lt;/span&gt;pandoc nmap &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; yiWysiW]&lt;span class="k"&gt;f&lt;/span&gt;]&lt;span class="k"&gt;a&lt;/span&gt;[]&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;ESC&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;PlmlGo&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;ESC&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;a&lt;/span&gt;[]&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;ESC&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Pla:&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;SPACE&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;to add a link with a handle:&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;before&lt;/span&gt;
A sample passage with a link and containing
a lot of text.

&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;after&lt;/span&gt;
A sample passage with a [&lt;span class="nt"&gt;link&lt;/span&gt;][&lt;span class="nl"&gt;link&lt;/span&gt;] and containing
a lot of text.
[link]:&lt;/pre&gt;
&lt;p&gt;You can return back to the text by visiting the mark with &lt;code&gt;l&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The following maps &lt;code&gt;h1&lt;/code&gt;, &lt;code&gt;h2&lt;/code&gt;, &lt;code&gt;h3&lt;/code&gt;, &lt;code&gt;h4&lt;/code&gt; to create headings in the
normal mode:&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="c"&gt;&amp;quot;&amp;quot;Markdown: heading maker&lt;/span&gt;
&lt;span class="c"&gt;&amp;quot;mark h, go to beginning of the line, add #/##/###/### , go back to mark h&lt;/span&gt;
&lt;span class="k"&gt;au&lt;/span&gt; &lt;span class="nb"&gt;FileType&lt;/span&gt; markdown&lt;span class="p"&gt;,&lt;/span&gt;pandoc nmap h1 &lt;span class="nb"&gt;mh&lt;/span&gt;^&lt;span class="k"&gt;i&lt;/span&gt;#&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;SPACE&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;ESC&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;`&lt;span class="k"&gt;h&lt;/span&gt;
&lt;span class="k"&gt;au&lt;/span&gt; &lt;span class="nb"&gt;FileType&lt;/span&gt; markdown&lt;span class="p"&gt;,&lt;/span&gt;pandoc nmap h2 &lt;span class="nb"&gt;mh&lt;/span&gt;^&lt;span class="k"&gt;i&lt;/span&gt;##&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;SPACE&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;ESC&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;`&lt;span class="k"&gt;h&lt;/span&gt;
&lt;span class="k"&gt;au&lt;/span&gt; &lt;span class="nb"&gt;FileType&lt;/span&gt; markdown&lt;span class="p"&gt;,&lt;/span&gt;pandoc nmap h3 &lt;span class="nb"&gt;mh&lt;/span&gt;^&lt;span class="k"&gt;i&lt;/span&gt;###&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;SPACE&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;ESC&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;`&lt;span class="k"&gt;h&lt;/span&gt;
&lt;span class="k"&gt;au&lt;/span&gt; &lt;span class="nb"&gt;FileType&lt;/span&gt; markdown&lt;span class="p"&gt;,&lt;/span&gt;pandoc nmap h4 &lt;span class="nb"&gt;mh&lt;/span&gt;^&lt;span class="k"&gt;i&lt;/span&gt;####&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;SPACE&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;ESC&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;`&lt;span class="k"&gt;h&lt;/span&gt;&lt;/pre&gt;
&lt;pre class="m-code"&gt;&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;before&lt;/span&gt;
A Heading

&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;after&lt;/span&gt;
&lt;span class="gh"&gt;# A Heading&lt;/span&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="restructuredtext"&gt;
&lt;h3&gt;reStructuredText&lt;/h3&gt;
&lt;p&gt;The following maps &lt;span class="strike"&gt;Shift+Enter&lt;/span&gt; &lt;code&gt;\a&lt;/code&gt; in the normal mode:&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="c"&gt;&amp;quot;&amp;quot;rST: inline-link maker&lt;/span&gt;
&lt;span class="c"&gt;&amp;quot;surround with ``, find `, append __, move left by 2 characters, insert &amp;lt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;au&lt;/span&gt; &lt;span class="nb"&gt;FileType&lt;/span&gt; rst nmap &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;a&lt;/span&gt; ysiW`&lt;span class="k"&gt;f&lt;/span&gt;`a__&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;ESC&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;hi&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;SPACE&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;&amp;lt;&lt;/span&gt;ESC&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;i&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;to add an inline link:&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="cp"&gt;.. before&lt;/span&gt;
A sample sentence with a link

&lt;span class="cp"&gt;.. after&lt;/span&gt;
A sample sentence with a &lt;span class="s"&gt;`link &amp;lt;&amp;gt;`__&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;The following maps &lt;code&gt;Enter&lt;/code&gt; in the normal mode:&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="c"&gt;&amp;quot;&amp;quot;rST: link maker&lt;/span&gt;
&lt;span class="c"&gt;&amp;quot;yank inner word, go to end of word, append _, mark l, end of document, add a&lt;/span&gt;
&lt;span class="c"&gt;&amp;quot;new line, insert .. _, paste, append:&lt;/span&gt;
&lt;span class="k"&gt;au&lt;/span&gt; &lt;span class="nb"&gt;FileType&lt;/span&gt; rst nmap &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; yiWEa_&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;ESC&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;mlGo&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;ESC&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;i&lt;/span&gt;..&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;SPACE&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;_&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;ESC&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;pa&lt;/span&gt;:&lt;/pre&gt;
&lt;p&gt;to add a link with a handle:&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="cp"&gt;.. before&lt;/span&gt;
A sample passage with a link and containing
a lot of text.

&lt;span class="cp"&gt;.. after&lt;/span&gt;
A sample passage with a link_ and containing
a lot of text.
&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="nt"&gt;_link:&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;You can return back to the text by visiting the mark with &lt;code&gt;l&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The following maps &lt;code&gt;h1&lt;/code&gt;, &lt;code&gt;h2&lt;/code&gt;, &lt;code&gt;h3&lt;/code&gt;, &lt;code&gt;h4&lt;/code&gt; to create headings in the
normal mode:&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="c"&gt;&amp;quot;&amp;quot;rST: heading maker&lt;/span&gt;
&lt;span class="k"&gt;au&lt;/span&gt; &lt;span class="nb"&gt;FileType&lt;/span&gt; rst nmap h1 yypVr#
&lt;span class="k"&gt;au&lt;/span&gt; &lt;span class="nb"&gt;FileType&lt;/span&gt; rst nmap h2 yypVr&lt;span class="p"&gt;=&lt;/span&gt;
&lt;span class="k"&gt;au&lt;/span&gt; &lt;span class="nb"&gt;FileType&lt;/span&gt; rst nmap h3 yypVr&lt;span class="p"&gt;-&lt;/span&gt;
&lt;span class="k"&gt;au&lt;/span&gt; &lt;span class="nb"&gt;FileType&lt;/span&gt; rst nmap h4 yypVr&lt;span class="p"&gt;~&lt;/span&gt;&lt;/pre&gt;
&lt;pre class="m-code"&gt;&lt;span class="cp"&gt;.. before&lt;/span&gt;
A Heading

&lt;span class="cp"&gt;.. after&lt;/span&gt;
&lt;span class="gh"&gt;A Heading&lt;/span&gt;
&lt;span class="gh"&gt;#########&lt;/span&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="search-and-replace"&gt;
&lt;h3&gt;Search and replace&lt;/h3&gt;
&lt;p&gt;In most editors, you could use &lt;code&gt;Ctrl+f&lt;/code&gt; to search text and &lt;code&gt;Ctrl+r&lt;/code&gt; to
search and replace text. While searching in Vim is a piece of cake with &lt;code&gt;/&lt;/code&gt;
key, search and replace is often a bit more painful.&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="c"&gt;&amp;quot;{{{ Select (visual mode) and search / replace&lt;/span&gt;
&lt;span class="c"&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; has&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;python3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;python3&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;lt;&lt;/span&gt; endpython3
import &lt;span class="k"&gt;re&lt;/span&gt;
import &lt;span class="k"&gt;vim&lt;/span&gt;

&lt;span class="nb"&gt;def&lt;/span&gt; py_regex_escape&lt;span class="p"&gt;(&lt;/span&gt;string&lt;span class="p"&gt;=&lt;/span&gt;None&lt;span class="p"&gt;)&lt;/span&gt;:
    &lt;span class="k"&gt;h&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; string &lt;span class="k"&gt;if&lt;/span&gt; string &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;vim&lt;/span&gt;.eval&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;@h&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;h&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;re&lt;/span&gt;.escape&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;.replace&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;#39;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; string:
      print&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;:
      &lt;span class="k"&gt;vim&lt;/span&gt;.command&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;let @h=&amp;#39;{}&amp;#39;&amp;quot;&lt;/span&gt;.format&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;h&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

endpython3

command&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;nargs&lt;span class="p"&gt;=&lt;/span&gt;? RegexEscape :&lt;span class="k"&gt;py3&lt;/span&gt; py_regex_escape&lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;f&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;args&lt;span class="p"&gt;&amp;gt;)&lt;/span&gt;

&lt;span class="c"&gt;&amp;quot; http://stackoverflow.com/questions/676600/#676619&lt;/span&gt;
&lt;span class="c"&gt;&amp;quot; Below h is used as a register to yank into&lt;/span&gt;
&lt;span class="c"&gt;&amp;quot; Also search with \v prefix for searching with very magic and&lt;/span&gt;
&lt;span class="c"&gt;&amp;quot; if needed \V prefix with very nomagic. See `:help magic`&lt;/span&gt;
&lt;span class="nb"&gt;vnoremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;C&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="k"&gt;f&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;quot;hy:RegexEscape&amp;lt;CR&amp;gt;/\v&amp;lt;C-r&amp;gt;h&lt;/span&gt;
&lt;span class="nb"&gt;vnoremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;C&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="k"&gt;r&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;quot;hy:RegexEscape&amp;lt;CR&amp;gt;:%s/\v&amp;lt;C-r&amp;gt;h//gc&amp;lt;left&amp;gt;&amp;lt;left&amp;gt;&amp;lt;left&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;endif&lt;/span&gt;
&lt;span class="c"&gt;&amp;quot;}}}&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;This powerful mapping would automatically try to do &lt;strong&gt;a Python regular expression
escape and fill the search or search-and-replace command&lt;/strong&gt; with a sample text
you selected in visual mode. An obvious caveat is that Python regex and Vim
regex are not identical. I have found the &lt;em&gt;very-magic&lt;/em&gt; mode to be close to
Python regex.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="improvements"&gt;
&lt;h3&gt;Improvements?&lt;/h3&gt;
&lt;p&gt;Before you say it, I agree these solutions are &lt;em&gt;far from elegant&lt;/em&gt;. Perhaps
&lt;a href="https://github.com/SirVer/ultisnips"&gt;UltiSnips&lt;/a&gt; can come in handy to create links. Let me know you find it useful or
you can improve it.&lt;/p&gt;
&lt;aside class="m-block m-info"&gt;
&lt;h3&gt;License&lt;/h3&gt;
&lt;p&gt;The code snippets above can be reused with an &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;Apache-2.0&lt;/a&gt; license.&lt;/p&gt;
&lt;/aside&gt;
&lt;/section&gt;
&lt;/section&gt;
</content><category term="Tech Talk"></category><category term="software"></category><category term="markdown"></category><category term="rst"></category><category term="vim"></category><category term="writing"></category></entry><entry><title>Say yes to open-access + peer-review</title><link href="https://ashwinvis.github.io/open-access-peer-review.html" rel="alternate"></link><published>2020-05-23T20:59:28+02:00</published><updated>2020-05-23T20:59:28+02:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2020-05-23:/open-access-peer-review.html</id><summary type="html">&lt;p&gt;The only model for peer-review which makes sense: the “No free view? No review!” signature campaign and why the existing publishing system needs an overhaul&lt;/p&gt;
</summary><content type="html">&lt;p&gt;There are fundamentally several problems with the current publishing model of
scientific articles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Authors toil and work polishing nearly every word of the article&lt;/li&gt;
&lt;li&gt;Reviewers volunteer out of goodwill or to keep in touch with research&lt;/li&gt;
&lt;li&gt;Editors coordinate the whole effort&lt;/li&gt;
&lt;li&gt;Libraries or businesses pay to get access to and distribute the end result&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And no-one above in this process gets paid. High charges do not make sense in
the electronic age, when fewer articles get actually printed into hard copy.
Even today with this model, as an author, you will have to pay extra to put a
colour figure which would not be legible in grey scale.&lt;/p&gt;
&lt;p&gt;Here is a documentary describing why this system is ridiculous at best and
predatory at worst.&lt;/p&gt;
&lt;iframe width="560" height="315" sandbox="allow-same-origin allow-scripts allow-popups" src="https://peertube.social/videos/embed/75ba36d5-1e81-4db4-95b0-8dd4790eb282" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;section id="a-paradigm-shift"&gt;
&lt;h2&gt;A paradigm shift&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.coalition-s.org/why-plan-s/"&gt;Plan-S&lt;/a&gt; and Bibsam consortium made a huge dent in this process. This movement gave
libraries and universities the ability and courage to collectively bargain and
walk out of the current subscription model with exorbitant prices. This was a
top-down change and resulted in new deals being made to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;benefit authors to make new articles open-access without the authors
paying a hefty Application Processing Charge (APC), but rather the university
as a whole&lt;/li&gt;
&lt;li&gt;make certain journals open-access or hybrid&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What we need now is a grassroots movement, a bottoms-up approach. As authors, we
should be willing to share our research at different stages to preprint servers
(for example, arXiv) and similar outlets (Zenodo, Figshare etc.). The
&lt;a href="https://www.sherpa.ac.uk/romeo/index.php"&gt;Sherpa-Romeo&lt;/a&gt; portal is my go-to tool in finding out what kind of article can
be archived for public-consumption. Also, check with your library to find out
if they could cover the APC charges.&lt;/p&gt;
&lt;p&gt;And as potential reviewers, this &lt;a href="https://nofreeviewnoreview.org/"&gt;campaign&lt;/a&gt; is relevant:&lt;/p&gt;
&lt;a href="https://nofreeviewnoreview.org/"&gt;&lt;img alt="No free view? No review!" class="m-image" src="/static/nfvnr-button.svg" style="width: 50%" /&gt;&lt;/a&gt;
&lt;p&gt;I think it is our turn as researchers and academics to say no to review articles
which would end up behind a paywall. It is simply not ethical in today’s world.&lt;/p&gt;
&lt;/section&gt;
</content><category term="Blog"></category><category term="research"></category><category term="open-access"></category><category term="academia"></category></entry><entry><title>Juggling roles as a parent / teacher / employee</title><link href="https://ashwinvis.github.io/juggling-roles.html" rel="alternate"></link><published>2020-04-20T11:13:51+02:00</published><updated>2020-04-20T11:13:51+02:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2020-04-20:/juggling-roles.html</id><summary type="html">&lt;p&gt;Resources to keep your children entertained&lt;/p&gt;</summary><content type="html">&lt;p&gt;It is not exactly lock-down in Sweden, but it is a voluntary work-from-home for
everyone. As a concerned parent, even if the preschools are open, we have
chosen not to send our preschooler to school. It is easier said than done.&lt;/p&gt;
&lt;p&gt;I should share resources that my daughter found interesting, and I really
approve of.&lt;/p&gt;
&lt;h2 id="apps"&gt;&lt;a class="toclink" href="#apps"&gt;Apps&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.khanacademy.org/khan-academy-kids/"&gt;Khan Academy Kids&lt;/a&gt; - A
  really nice app with diverse tasks. Has enough material to function online and
  offline.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ur.se/tripp-trapp-trad"&gt;Tripp Trapp Trad&lt;/a&gt; - A tree with some fun
  activities around it.&lt;sup id="fnref3:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gcompris.net/index-en.html"&gt;GCompris&lt;/a&gt; - FOSS Educational
  cross-platform application.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="videos"&gt;&lt;a class="toclink" href="#videos"&gt;Videos&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.svtplay.se/kanaler"&gt;SVT play&lt;/a&gt; &lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://urplay.se/bladdra/barn"&gt;UR play&lt;/a&gt; &lt;sup id="fnref2:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://invidious.snopyta.org/channel/UCQ00zWTLrgRQJUb8MHQg21A"&gt;Come Play With Me&lt;/a&gt; &lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nfb.ca/channels/based-childrens-books/"&gt;NFB Canada Short films&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="things-that-i-have-not-followed-through"&gt;&lt;a class="toclink" href="#things-that-i-have-not-followed-through"&gt;Things that I have not followed through&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://keeplearning.khanacademy.org/daily-schedule#Pre-K-1-2"&gt;Daily Schedule from Khan Academy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.varsitytutors.com"&gt;Varsity Tutors&lt;/a&gt; - Both paid and free lessons
    on a wide variety of topics themed as &lt;a href="https://www.varsitytutors.com/virtual-school-day"&gt;Virtual School
    Days&lt;/a&gt; and &lt;a href="https://www.varsitytutors.com/classes/featured-collections/virtual-field-trips?f_class_size=large-group0"&gt;Virtual Field
    Trips&lt;/a&gt;.
    I have signed up to see how it is like. The only trouble is to sign in to
    get access to the content.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Sweden specific&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref2:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref3:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;YouTube channel&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Blog"></category><category term="life"></category><category term="covid-19"></category></entry><entry><title>Buying a new phone</title><link href="https://ashwinvis.github.io/buying-a-new-phone.html" rel="alternate"></link><published>2020-04-09T06:09:37+02:00</published><updated>2020-04-09T06:09:37+02:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2020-04-09:/buying-a-new-phone.html</id><summary type="html">&lt;p&gt;One that lasts&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have been witnessing the evolution of smart phones into fragile and data
hungry beasts that they are today, crippling essential features such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3.5 mm headphone jacks&lt;/li&gt;
&lt;li&gt;removable batteries&lt;/li&gt;
&lt;li&gt;ability to unlock the bootloader (root)&lt;/li&gt;
&lt;li&gt;install a new OS (flash)&lt;/li&gt;
&lt;li&gt;reliance on Google Play Services for even mainstream apps such as BankID in
  Sweden&lt;/li&gt;
&lt;li&gt;lack of spare parts and support in a couple of years&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And as a result I have resisted the urge of getting a new phone for the past 2
months. But with Covid-19, I accept that having a phone around is essential to
stay in touch with close ones.&lt;/p&gt;
&lt;p&gt;After much contemplation my criteria boiled down to the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Repairable with long-term support: both software updates and hardware
   warranty.&lt;/li&gt;
&lt;li&gt;Community support in an effort to develop towards a working Linux phone.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The candidates were
&lt;a href="https://ubports.com/blog/ubports-blog-1/post/pinephone-ubports-community-edition-pre-orders-are-open-271"&gt;PinePhone&lt;/a&gt;
at USD 150 and &lt;a href="https://shop.fairphone.com/en/"&gt;Fairphone 3&lt;/a&gt; at €475. In
comparison with the existing market these phones have have medium
specifications. However I put the above two criteria over all shiny details
that people tend to care more about like looks, performance and camera. I have
a stand-alone camera and a gaming device, so why should I bother?&lt;/p&gt;
&lt;h2 id="why-and-why-not-pinephone"&gt;&lt;a class="toclink" href="#why-and-why-not-pinephone"&gt;Why and why not PinePhone&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The advantages of PinePhone is it already "works" with existing Linux projects
such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.postmarketos.org/wiki/Devices"&gt;postmarketOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ubports.com/"&gt;UBports&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and it is cheap. However the company only started working on phones &lt;a href="https://en.wikipedia.org/wiki/Pine_Microsystems#Smartphone"&gt;a year
ago&lt;/a&gt; and when I
checked the availability of spare parts, the most essential one which is a
&lt;a href="https://store.pine64.org/?product=pinephone-lithium-battery-only-ship-in-us-2"&gt;battery&lt;/a&gt;
only ships in US and was out of stock. Also there is hardly any warranty.&lt;/p&gt;
&lt;h2 id="but-fairphone"&gt;&lt;a class="toclink" href="#but-fairphone"&gt;But Fairphone...?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;At the cost it is selling it is as expensive as so-called "flagship" phones.
The cost covers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sourcing rare materials from non war-torn regions&lt;/li&gt;
&lt;li&gt;providing fair work conditions for factories in China&lt;/li&gt;
&lt;li&gt;recycling old phones&lt;/li&gt;
&lt;li&gt;modularity and support&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While Fairphone 2 is no longer in sale, it is one of the featured phones by the
UBPorts project. Fairphone 3 right now does not have a Linux OS option, and not
even a "unGoogled" Android ROM such as &lt;a href="https://wiki.lineageos.org/devices/"&gt;Lineage
OS&lt;/a&gt;. It will take some time for the
developers to get it to working condition, because &lt;a href="https://fosdem.org/2020/schedule/event/smartphones/"&gt;ARM
development&lt;/a&gt; is a lot of
work. The /e/ foundation - a fork of Lineage OS is &lt;a href="https://mastodon.social/@e_mydata/103912398236907028"&gt;working on
it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;All you need is a little push in the right direction.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There is a hardware warranty for two years&lt;/li&gt;
&lt;li&gt;Fairphone continues to sell spare parts for older phones&lt;/li&gt;
&lt;li&gt;Assured software updates for 5 years&lt;/li&gt;
&lt;li&gt;Official tutorial on &lt;a href="https://support.fairphone.com/hc/en-us/articles/360041655711-Unlock-the-bootloader-of-your-Fairphone-3"&gt;unlocking the
  bootloader&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As for the price, if it is any consolation, compare the to an average grocery
shopping which would be around €50 in Sweden, it is not so expensive.  I got a
discount code at the end, which I wish I received earlier. So I might as well
share it here.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Give your friends a €25 discount on a Fairphone 3 and get a €20 discount on
your next order.
&lt;a href="http://fairphone.refr.cc/ashwinvishnum"&gt;http://fairphone.refr.cc/ashwinvishnum&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;No, I was not paid to write this, but I really like the concept and I hope more
such projects emerge. Let's work towards a &lt;a href="https://en.wikipedia.org/wiki/Circular_economy"&gt;circular
economy&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech Talk"></category><category term="life"></category><category term="covid-19"></category><category term="phone"></category></entry><entry><title>Hack the Crisis: We Care!</title><link href="https://ashwinvis.github.io/hack-the-crisis.html" rel="alternate"></link><published>2020-04-05T20:38:02+02:00</published><updated>2020-04-06T08:01:00+02:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2020-04-05:/hack-the-crisis.html</id><summary type="html">&lt;p&gt;How we created project &lt;em&gt;We Care!&lt;/em&gt; in this COVID-19 themed hackathon&lt;/p&gt;
</summary><content type="html">&lt;p&gt;This weekend I was part of a great and amazing group of people working as a
team.  We where coders, designers, ideators, jack-of-all-trades, creators,
academics, researchers and doers. We all where part of even a bigger team in
the Hack for Crisis Initiative in Sweden &lt;a href="https://www.hackthecrisis.se/"&gt;https://www.hackthecrisis.se/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We came together from all different parts, working purely online, never worked
with each other before, We created &lt;em&gt;We Care!&lt;/em&gt;, a &lt;a href="https://covidmap.se"&gt;website&lt;/a&gt; and an app
concept to keep you safe in crisis, that we submitted.&lt;/p&gt;
&lt;p&gt;Here is a demo &lt;a href="https://www.youtube.com/watch?v=rsBZuJEH1c0"&gt;video&lt;/a&gt; and a screenshot from the live &lt;a href="https://covidmap.se"&gt;website&lt;/a&gt; of our solution.&lt;/p&gt;
&lt;div align='center'&gt;
&lt;iframe id='ivplayer' width='100%' height='500px' src='https://invidious.snopyta.org/embed/rsBZuJEH1c0' style='border:none;'&gt;
&lt;/iframe&gt;
&lt;iframe src="https://pixelfed.social/p/ashwinvis/152654039161638912/embed?caption=true&amp;likes=false&amp;layout=full" class="pixelfed__embed" style="max-width: 100%; border: 0" width="100%" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;script async defer src="https://pixelfed.social/embed.js"&gt;&lt;/script&gt;
&lt;/div&gt;&lt;section id="nitty-gritty-details"&gt;
&lt;h2&gt;Nitty-gritty details&lt;/h2&gt;
&lt;p&gt;The stack consists of a website (&lt;a href="https://covidmap.se/"&gt;https://covidmap.se/&lt;/a&gt;) where the user can enter
symptom data as well as their postal code. This is then submitted to a Firebase
database, from which a Python application downloads the data submitted and
analyzes it in batches. The aggregated, anonymized results are then published
back to the database and can be viewed in the map.&lt;/p&gt;
&lt;p&gt;The whole system was designed to function as follows:&lt;/p&gt;
&lt;img class="m-image" src="https://raw.githubusercontent.com/covidmap-sweden/welcome/master/architecture.jpg" style="width: 100%" /&gt;
&lt;p&gt;A future improvement to this could either be to do the Python computation
directly in the Firebase Cloud Function and then submitted to the Firebase
database. Alternatively, to have the website publish its data to the Python
backend which in turn will post the outcome of the analysis to the Firebase
database. Either way, the user will get a response on their input.&lt;/p&gt;
&lt;p&gt;The motivation for using postal codes is to get a granular overview of the
spread while still being within compliance of GDPR. Other suggestions have been
using Bank-ID as a user id form, but that combined with medical data would be a
GDPR issue we were not able to handle during the hackathon. We will also ensure
compliance with Swedish laws on research ethics, submitting for ethical review
if required so that collected data can be used for research purposes.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="the-backend-alley"&gt;
&lt;h2&gt;The backend alley&lt;/h2&gt;
&lt;p&gt;On a personal note, I was working on getting the Python backend (written using
SQL Alchemy and Pandas) up and running. The essential pieces were present
thanks to the original Swiss team which open-sourced the project. The
enhancements we added on top of it were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;smoothening installation process by adding a basic Python packaging
&lt;code&gt;setup.py&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;post-processing scripts to calculate symptom risks with Pandas within the
Python backend instead of doing it in the Vue.js frontend side&lt;/li&gt;
&lt;li&gt;a Flask microserver based REST API to reduce the data storage in the database
and perform computation more frequently to keep the website up to date&lt;/li&gt;
&lt;li&gt;Creating a docker image of the application&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our intention was the deploy the backend in the cloud, but because of the time
constraint we were unable to achieve that target. For now the backend is
semi-automated. In due time, yes we can!&lt;/p&gt;
&lt;p&gt;Did I mention our implementation was &lt;a href="https://github.com/covidmap-sweden/"&gt;open-source&lt;/a&gt; as well!&lt;/p&gt;
&lt;/section&gt;
&lt;section id="the-fight-is-far-from-over"&gt;
&lt;h2&gt;The fight is far from over&lt;/h2&gt;
&lt;p&gt;If you want to help us please go in and test &lt;a href="https://covidmap.se"&gt;https://covidmap.se&lt;/a&gt; and self report
yourself and please share this post in your network if you want. You can also
&lt;a href="https://covidmap.se/visualize"&gt;visualize&lt;/a&gt; the aggregated results.&lt;/p&gt;
&lt;p&gt;If you want to fast… go alone, if you want to go far go together. Thanks to
everyone in my team for a great experience. I loved working with you and being
part of this team.&lt;/p&gt;
&lt;/section&gt;
</content><category term="Tech Talk"></category><category term="software"></category><category term="open-source"></category><category term="covid-19"></category></entry><entry><title>Testing Indieweb Stack</title><link href="https://ashwinvis.github.io/tesing-indieweb-stack.html" rel="alternate"></link><published>2020-03-31T22:54:39+02:00</published><updated>2020-03-01T13:24:00+01:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2020-03-31:/tesing-indieweb-stack.html</id><summary type="html">&lt;p&gt;A simple test page to see what parts of Indieweb actually works&lt;/p&gt;</summary><content type="html">&lt;p&gt;Indieweb consists of the following building blocks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Microformats 2&lt;/li&gt;
&lt;li&gt;Webmentions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This allows one to Publish Own and Syndicate Somewhere Else (POSSE). I have
logged in my progress in the &lt;a href="https://indieweb.org/User:Ashwin.info.tm"&gt;Indieweb
wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="update-posse-works"&gt;&lt;a class="toclink" href="#update-posse-works"&gt;Update: POSSE works&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I managed to publish this post, semi-automatically by sending Bridgy a
webmention as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Embed a blank hyperlink to &lt;code&gt;https://brid.gy/publish/mastodon&lt;/code&gt; as
  &lt;a href="https://brid.gy/about#webmentions"&gt;mentioned here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Send a request &lt;a href="https://indieweb.org/Webmention-developer#How_to_send_webmentions_with_cURL"&gt;using cURL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;❯ curl -i -d &lt;span class="nv"&gt;source&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;https://ashwinvis.github.io/tesing-indieweb-stack.html -d &lt;span class="nv"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;https://brid.gy/publish/mastodon https://brid.gy/publish/webmention
HTTP/2 &lt;span class="m"&gt;201&lt;/span&gt; 
content-type: application/json&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;utf-8
cache-control: no-cache
access-control-allow-origin: *
content-security-policy: script-src https: localhost:8080 my.dev.com:8080 &lt;span class="s1"&gt;&amp;#39;unsafe-inline&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; frame-ancestors &lt;span class="s1"&gt;&amp;#39;self&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; report-uri /csp-report&lt;span class="p"&gt;;&lt;/span&gt;
strict-transport-security: max-age&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;16070400&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; preload
x-content-type-options: nosniff
x-frame-options: SAMEORIGIN
x-xss-protection: &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;block
location: https://mastodon.acc.sunet.se/@ashwinvis/103920181819443082
x-cloud-trace-context: 89f23f15ae3916e5ae535cfe3d1b5152&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;o&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
date: Tue, &lt;span class="m"&gt;31&lt;/span&gt; Mar &lt;span class="m"&gt;2020&lt;/span&gt; &lt;span class="m"&gt;23&lt;/span&gt;:08:54 GMT
server: Google Frontend
content-length: &lt;span class="m"&gt;3401&lt;/span&gt;

&lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;103920181819443082&amp;quot;&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;created_at&amp;quot;&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;2020-03-31T23:08:53.759Z&amp;quot;&lt;/span&gt;,
  ...
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Ensure that accidental duplicate posts are avoided.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;❯ curl -i -d &lt;span class="nv"&gt;source&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;https://ashwinvis.github.io/tesing-indieweb-stack.html -d &lt;span class="nv"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;https://brid.gy/publish/mastodon https://brid.gy/publish/webmention
HTTP/2 &lt;span class="m"&gt;400&lt;/span&gt; 
content-type: application/json&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;utf-8
cache-control: no-cache
access-control-allow-origin: *
content-security-policy: script-src https: localhost:8080 my.dev.com:8080 &lt;span class="s1"&gt;&amp;#39;unsafe-inline&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; frame-ancestors &lt;span class="s1"&gt;&amp;#39;self&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; report-uri /csp-report&lt;span class="p"&gt;;&lt;/span&gt;
strict-transport-security: max-age&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;16070400&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; preload
x-content-type-options: nosniff
x-frame-options: SAMEORIGIN
x-xss-protection: &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;block
x-cloud-trace-context: 1691edd117aa780e68a530ff0f116824&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;o&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
date: Tue, &lt;span class="m"&gt;31&lt;/span&gt; Mar &lt;span class="m"&gt;2020&lt;/span&gt; &lt;span class="m"&gt;23&lt;/span&gt;:09:55 GMT
server: Google Frontend
content-length: &lt;span class="m"&gt;3731&lt;/span&gt;

&lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;error&amp;quot;&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;Sorry, you&amp;#39;ve already published that page, and Bridgy Publish doesn&amp;#39;t support updating existing posts. Details: https://github.com/snarfed/bridgy/issues/84&amp;quot;&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;original&amp;quot;&lt;/span&gt;:&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;103920181819443082&lt;/span&gt;
&lt;span class="s2"&gt;    ...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="end-result"&gt;&lt;a class="toclink" href="#end-result"&gt;End result&lt;/a&gt;&lt;/h3&gt;
&lt;iframe src="https://mastodon.acc.sunet.se/@ashwinvis/103920181819443082/embed" class="mastodon-embed" style="max-width: 100%; border: 0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;

&lt;script src="https://mastodon.acc.sunet.se/embed.js" async="async"&gt;&lt;/script&gt;

&lt;h3 id="next-steps"&gt;&lt;a class="toclink" href="#next-steps"&gt;Next steps&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To automate this process into CI?&lt;/p&gt;</content><category term="Tech Talk"></category><category term="software"></category></entry><entry><title>Cloud computing for research</title><link href="https://ashwinvis.github.io/cloud-computing.html" rel="alternate"></link><published>2020-03-20T11:29:00+01:00</published><updated>2020-03-25T22:29:00+01:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2020-03-20:/cloud-computing.html</id><summary type="html">&lt;p&gt;A journal of how I setup BOINC and &lt;a href="mailto:Folding&amp;#64;home"&gt;Folding&amp;#64;home&lt;/a&gt; on my laptop running Arch Linux.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;There is an ongoing effort in all disciplines to find solutions the Covid-19
pandemic. Be it policy (social distancing, call for people to work from home),
technology (repurposing auto, beverages and perfume industries to manufacture
ventilators and hand sanitizers etc., open access to research) and art (hobbies
and music to stay upbeat at home).&lt;/p&gt;
&lt;p&gt;And then there is BOINC and &lt;a href="mailto:Folding&amp;#64;home"&gt;Folding&amp;#64;home&lt;/a&gt; - serious research projects which has
a nice social cloud-computing infrastructure to solve difficult problems. This
also include molecular dynamics simulations using open-source software like
GROMACS by different research groups around the world. My laptop has a
top-notch Quadro RTX 3000 Mobile GPU, so I decided to give it a go.&lt;/p&gt;
&lt;div align="center"&gt;
&lt;iframe src="https://pixelfed.social/p/ashwinvis/146561445096722432/embed?caption=true&amp;likes=false&amp;layout=full" class="pixelfed__embed" style="max-width: 100%; border: 0" width="400" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;script async defer src="https://pixelfed.social/embed.js"&gt;&lt;/script&gt;&lt;p&gt;First off some essentials:&lt;/p&gt;
&lt;pre&gt;# pacman -S opencl-nvidia cuda nvtop&lt;/pre&gt;
&lt;section id="boinc"&gt;
&lt;h2&gt;BOINC&lt;/h2&gt;
&lt;section id="references"&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/BOINC"&gt;https://wiki.archlinux.org/index.php/BOINC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boinc.berkeley.edu/projects.php"&gt;https://boinc.berkeley.edu/projects.php&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gpugrid.net/join.php"&gt;http://www.gpugrid.net/join.php&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gpugrid.net/team_display.php?teamid=2985"&gt;https://www.gpugrid.net/team_display.php?teamid=2985&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="how-to"&gt;
&lt;h3&gt;How to&lt;/h3&gt;
&lt;p&gt;Installing and setting up:&lt;/p&gt;
&lt;pre&gt;# pacman -S boinc-nox opencl-nvidia
# usermod -a -G boinc video
# systemctl start boinc-client.service
# systemctl status boinc-client
● boinc-client.service - Berkeley Open Infrastructure Network Computing Client
     Loaded: loaded (/usr/lib/systemd/system/boinc-client.service; disabled; vendor preset: disabled)
     Active: active (running) since Fri 2020-03-20 08:06:50 CET; 1h 44min ago
       Docs: man:boinc(1)
   Main PID: 119973 (boinc)
      Tasks: 2 (limit: 38224)
     Memory: 9.6M
     CGroup: /system.slice/boinc-client.service
             └─119973 /usr/bin/boinc

Mar 20 08:07:37 archmage boinc[119973]: 20-Mar-2020 08:07:37 [---]    (to change preferences, visit a project web site or select Preferences in the Manager)
Mar 20 08:07:37 archmage boinc[119973]: 20-Mar-2020 08:07:37 [---] Setting up project and slot directories
Mar 20 08:07:37 archmage boinc[119973]: 20-Mar-2020 08:07:37 [---] Checking active tasks
Mar 20 08:07:37 archmage boinc[119973]: 20-Mar-2020 08:07:37 [---] Setting up GUI RPC socket
Mar 20 08:07:37 archmage boinc[119973]: 20-Mar-2020 08:07:37 [---] Checking presence of 0 project files
Mar 20 08:07:37 archmage boinc[119973]: 20-Mar-2020 08:07:37 [---] This computer is not attached to any projects
Mar 20 08:07:37 archmage boinc[119973]: 20-Mar-2020 08:07:37 Initialization completed
Mar 20 08:07:37 archmage boinc[119973]: 20-Mar-2020 08:07:37 [---] Suspending GPU computation - computer is in use
Mar 20 08:55:30 archmage boinc[119973]: 20-Mar-2020 08:55:30 [---] Resuming GPU computation
Mar 20 09:14:26 archmage boinc[119973]: 20-Mar-2020 09:14:26 [---] Suspending GPU computation - computer is in use&lt;/pre&gt;
&lt;p&gt;This would generate a password at &lt;code&gt;/var/lib/boinc/gui_rpc_auth.cfg&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;# boinccmd --passwd $(cat /var/lib/boinc/gui_rpc_auth.cfg) --get_host_info
  timezone: 3600
  domain name: archmage
  IP addr: 127.0.1.1
  #CPUS: 12
  CPU vendor: GenuineIntel
  CPU model: Intel(R) Core(TM) i7-9850H CPU &amp;#64; 2.60GHz [Family 6 Model 158 Stepping 13]
  CPU FP OPS: 1000000000.000000
  CPU int OPS: 1000000000.000000
  OS name: Linux Arch
  OS version: Arch Linux [5.5.9-arch1-2|libc 2.31 (GNU libc)]
  mem size: 33419243520.000000
  cache size: 12582912.000000
  swap size: 53687087104.000000
  disk size: 105152544768.000000
  disk free: 57508556800.000000
  NVIDIA GPU: Quadro RTX 3000 (driver version 440.64, CUDA version 10.2, compute capability 7.5, 4096MB, 3970MB available, 5299 GFLOPS peak)
    OpenCL: NVIDIA 0: Quadro RTX 3000 (driver version 440.64, device version OpenCL 1.2 CUDA, 5935MB, 3970MB available, 5299 GFLOPS peak)&lt;/pre&gt;
&lt;p&gt;Create an account in a project (substitute those variables starting with a $
sign):&lt;/p&gt;
&lt;pre&gt;# boinccmd --passwd $(cat /var/lib/boinc/gui_rpc_auth.cfg) \
    --create_account www.gpugrid.net $email $project_passwd $project_username&lt;/pre&gt;
&lt;p&gt;Find the “weak account key” by &lt;a href="https://www.gpugrid.net/login_form.php"&gt;logging in&lt;/a&gt;. Then attach the account to the
project:&lt;/p&gt;
&lt;pre&gt;# boinccmd --passwd $(cat /var/lib/boinc/gui_rpc_auth.cfg) --project_attach www.gpugrid.net $weak_account_key&lt;/pre&gt;
&lt;p&gt;The client should then run while the system is idle.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="folding-home"&gt;
&lt;h2&gt;Folding &amp;#64; home&lt;/h2&gt;
&lt;section id="id1"&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foldingathome.org/start-folding"&gt;https://foldingathome.org/start-folding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Folding&amp;#64;home"&gt;https://wiki.archlinux.org/index.php/Folding&amp;#64;home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stats.foldingathome.org/team/45032"&gt;https://stats.foldingathome.org/team/45032&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="id2"&gt;
&lt;h3&gt;How to&lt;/h3&gt;
&lt;p&gt;Install:&lt;/p&gt;
&lt;pre&gt;# pacman -S foldingathome&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://apps.foldingathome.org/getpasskey"&gt;Register for an account (optional)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Run as a user:&lt;/p&gt;
&lt;pre&gt;❯ mkdir ~/{.config,.cache}/foldingathome
❯ cd ~/.config/foldingathome
❯ FAHClient --configure
User name [Anonymous]: ****
Team number [0]: 45032
Passkey: ****
Enable SMP [true]: false
Enable GPU [true]:
Name of configuration file [config.xml]:
❯ mkdir -p ~/.config/systemd/user/&lt;/pre&gt;
&lt;p&gt;Create a service &lt;code&gt;~/.config/systemd/user/foldingathome.service&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="k"&gt;[Unit]&lt;/span&gt;
&lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Run folding at home client&lt;/span&gt;

&lt;span class="k"&gt;[Service]&lt;/span&gt;
&lt;span class="na"&gt;WorkingDirectory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/home/avmo/.cache/foldingathome&lt;/span&gt;
&lt;span class="na"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/usr/bin/FAHClient --config /home/avmo/.config/foldingathome/config.xml&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;Execute:&lt;/p&gt;
&lt;pre&gt;❯ systemctl --user start foldingathome.service
❯ systemctl --user status foldingathome.service
● foldingathome.service - Run folding at home client
     Loaded: loaded (/home/avmo/.config/systemd/user/foldingathome.service; static; vendor preset: enabled)
     Active: active (running) since Fri 2020-03-20 09:38:15 CET; 4s ago
   Main PID: 149577 (FAHClient)
     CGroup: /user.slice/user-1001.slice/user&amp;#64;1001.service/foldingathome.service
             └─149577 /usr/bin/FAHClient --config /home/avmo/.config/foldingathome/config.xml

Mar 20 09:38:15 archmage FAHClient[149577]: 08:38:15:  &amp;lt;!-- Folding Slots --&amp;gt;
Mar 20 09:38:15 archmage FAHClient[149577]: 08:38:15:&amp;lt;/config&amp;gt;
Mar 20 09:38:15 archmage FAHClient[149577]: 08:38:15:Trying to access database...
Mar 20 09:38:15 archmage FAHClient[149577]: 08:38:15:Successfully acquired database lock
Mar 20 09:38:15 archmage FAHClient[149577]: 08:38:15:Enabled folding slot 00: READY cpu:1
Mar 20 09:38:15 archmage FAHClient[149577]: 08:38:15:Enabled folding slot 01: PAUSED gpu:0:TU106GLM [Quadro RTX 3000 Mobile / Max-Q] (waiting for idle)
Mar 20 09:38:15 archmage FAHClient[149577]: 08:38:15:WU00:FS00:Connecting to 65.254.110.245:8080
Mar 20 09:38:16 archmage FAHClient[149577]: 08:38:16:WU00:FS00:Assigned to work server 128.252.203.9
Mar 20 09:38:16 archmage FAHClient[149577]: 08:38:16:WU00:FS00:Requesting new work unit for slot 00: READY cpu:1 from 128.252.203.9

# after a while ...
❯ systemctl --user status foldingathome.service
● foldingathome.service - Run folding at home client
     Loaded: loaded (/home/avmo/.config/systemd/user/foldingathome.service; static; vendor preset: enabled)
     Active: active (running) since Fri 2020-03-20 09:38:15 CET; 19min ago
   Main PID: 149577 (FAHClient)
     CGroup: /user.slice/user-1001.slice/user&amp;#64;1001.service/foldingathome.service
             ├─149577 /usr/bin/FAHClient --config /home/avmo/.config/foldingathome/config.xml
             ├─153643 /usr/bin/FAHCoreWrapper /home/avmo/.cache/foldingathome/cores/cores.foldingathome.org/v7/lin/64bit/avx/Core_a7.fah/FahCore_a7 -dir 00 -suffix 01 -ver&amp;gt;
             └─153647 /home/avmo/.cache/foldingathome/cores/cores.foldingathome.org/v7/lin/64bit/avx/Core_a7.fah/FahCore_a7 -dir 00 -suffix 01 -version 705 -lifeline 15364&amp;gt;

Mar 20 09:55:19 archmage FAHClient[149577]: 08:55:19:WU00:FS00:0xa7:********************************************************************************
Mar 20 09:55:19 archmage FAHClient[149577]: 08:55:19:WU00:FS00:0xa7:Project: 14328 (Run 6, Clone 756, Gen 14)
Mar 20 09:55:19 archmage FAHClient[149577]: 08:55:19:WU00:FS00:0xa7:Unit: 0x000000109bf7a4d65e6d0ea7eac01f9c
Mar 20 09:55:19 archmage FAHClient[149577]: 08:55:19:WU00:FS00:0xa7:Reading tar file core.xml
Mar 20 09:55:19 archmage FAHClient[149577]: 08:55:19:WU00:FS00:0xa7:Reading tar file frame14.tpr
Mar 20 09:55:19 archmage FAHClient[149577]: 08:55:19:WU00:FS00:0xa7:Digital signatures verified
Mar 20 09:55:19 archmage FAHClient[149577]: 08:55:19:WU00:FS00:0xa7:Calling: mdrun -s frame14.tpr -o frame14.trr -cpt 15 -nt 1
Mar 20 09:55:19 archmage FAHClient[149577]: 08:55:19:WU00:FS00:0xa7:Steps: first=3500000 total=250000
Mar 20 09:55:19 archmage FAHClient[149577]: 08:55:19:WU00:FS00:0xa7:Completed 1 out of 250000 steps (0%)
Mar 20 09:57:25 archmage FAHClient[149577]: 08:57:25:WU00:FS00:0xa7:Completed 2500 out of 250000 steps (1%)&lt;/pre&gt;
&lt;p&gt;While the client is running / idle, you can schedule and tweak using the &lt;a href="http://0.0.0.0:7396/"&gt;web client&lt;/a&gt;.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;If you want GPU jobs alone, comment out the CPU slots in
&lt;code&gt;~/.config/foldingathome/config.xml&lt;/code&gt; and set power to “Medium” in the web
client.&lt;/p&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;/section&gt;
</content><category term="Tech Talk"></category><category term="software"></category><category term="research"></category><category term="covid-19"></category><category term="hpc"></category></entry><entry><title>Back to Arch Linux</title><link href="https://ashwinvis.github.io/back-to-arch-linux.html" rel="alternate"></link><published>2020-01-03T10:00:41+01:00</published><updated>2020-01-13T00:00:00+01:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2020-01-03:/back-to-arch-linux.html</id><summary type="html">&lt;p&gt;Within a Ubuntu LTS pre-installed laptop&lt;/p&gt;
</summary><content type="html">&lt;section id="why"&gt;
&lt;h2&gt;Why&lt;/h2&gt;
&lt;p&gt;It was October 2019. New job, new laptop.&lt;/p&gt;
&lt;p&gt;I tried to tell myself to stay with the LTS that was given to me from the
Canonical and Dell overlords. To be honest, I did not remove Ubuntu from the
get-go was because I was unsure if I can run Nvidia’s CUDA toolkit on an
&lt;a href="https://developer.nvidia.com/cuda-downloads?target_os=Linux&amp;amp;target_arch=x86_64/"&gt;unlisted&lt;/a&gt; OS. In my old laptop (2011-2014) on which I had a Nvidia GPU and
which ran Manjaro, I would frequently total my installation every time I ran
&lt;code&gt;pacman -Syu&lt;/code&gt;. The X.org display server would just stop functioning and I
would be left with a terminal to figure out how to get back.&lt;/p&gt;
&lt;p&gt;I thought I could just weed out the bloatware (Google Chrome, Amazon etc.)
and be content with what I have. Trust the Ubuntu and Dell repositories.&lt;/p&gt;
&lt;p&gt;Fast-forward to January 2020.  Turns out, the project which I am on right now
may not get started with CUDA development soon. Therefore, a good OS and GCC
compiler toolchain is all that I need. I have a mutant Ubuntu LTS already with
all the hacks under the sun to stay up-to-date:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pyenv/pyenv/"&gt;pyenv&lt;/a&gt; to have the latest Python&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flatpak.org/"&gt;flatpak&lt;/a&gt; to install some applications which are &lt;em&gt;ancient&lt;/em&gt; in the official &lt;a href="https://packages.ubuntu.com/"&gt;Ubuntu repos&lt;/a&gt; (Okular, Signal, KeepassXC, Zeal, Zotero etc.)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://appimage.org/"&gt;appimage&lt;/a&gt; when &lt;a href="https://flatpak.org/"&gt;flatpak&lt;/a&gt;’s sandbox is too restrictive (Neovim)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.ubuntu.com/community/PPA"&gt;PPA&lt;/a&gt; / unofficial &lt;code&gt;.deb&lt;/code&gt; packages from GitHub when the start-up overhead of
&lt;a href="https://flatpak.org/"&gt;flatpak&lt;/a&gt; or &lt;a href="https://appimage.org/"&gt;appimage&lt;/a&gt; is way too high (Neovim, again 😅) or similar reasons
as above (Nextcloud client, VSCodium etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is not good at all, I hear you. And I have to wait a good &lt;a href="https://www.omgubuntu.co.uk/2019/10/ubuntu-20-04-release-features"&gt;4 more months&lt;/a&gt;
for the next LTS release! The final blow came when I saw Vim 8.2 was released
last month with &lt;a href="https://github.com/skywind3000/vim-quickui"&gt;popup&lt;/a&gt; support, and I do not have it yet! There is no practical
way (apart from yet another &lt;a href="https://help.ubuntu.com/community/PPA"&gt;PPA&lt;/a&gt;) to get the latest Vim, without compiling it
from source. Either ways, it is also unacceptable to run a desktop environment
(GNOME) which is lagging behind (version 3.28.2) the latest stable release
(version 3.34) for so long!&lt;/p&gt;
&lt;/section&gt;
&lt;section id="how"&gt;
&lt;h2&gt;How&lt;/h2&gt;
&lt;aside class="m-note m-danger"&gt;
Make sure you understand what how &lt;code&gt;chroot&lt;/code&gt; and &lt;code&gt;mount&lt;/code&gt; commands work.
Also do not run &lt;code&gt;rm -rf&lt;/code&gt; at any stage below.&lt;/aside&gt;
&lt;p&gt;There is a nice &lt;a href="https://wiki.archlinux.org/index.php/Install_Arch_Linux_from_existing_Linux#From_a_host_running_another_Linux_distribution"&gt;guide&lt;/a&gt; which demonstrates how to setup Arch Linux from an
existing Linux OS. I started off by &lt;a href="https://www.archlinux.org/download/"&gt;downloading&lt;/a&gt; the bootstrap image along with
the GPG signature and verifying it:&lt;/p&gt;
&lt;pre&gt;$ gpg --keyserver-options auto-key-retrieve --verify archlinux-2020.01.01-x86_64.iso.sig
gpg: assuming signed data in 'archlinux-2020.01.01-x86_64.iso'
gpg: Signature made Wed 01 Jan 2020 06:21:41 AM CET
gpg:                using RSA key 4AA4767BBC9C4B1D18AE28B77F2D434B9741E8AC
gpg: Good signature from &amp;quot;Pierre Schmitz &amp;lt;pierre&amp;#64;archlinux.de&amp;gt;&amp;quot; [unknown]
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: 4AA4 767B BC9C 4B1D 18AE  28B7 7F2D 434B 9741 E8AC&lt;/pre&gt;
&lt;p&gt;The key fingerprint was &lt;a href="https://www.archlinux.org/master-keys/"&gt;cross-checked&lt;/a&gt; to be doubly sure.
Then I extracted the bootstrap image:&lt;/p&gt;
&lt;pre&gt;$ sudo su
# tar xzf archlinux-bootstrap-2020.01.01-x86_64.tar.gz -C /tmp&lt;/pre&gt;
&lt;p&gt;When I skipped a few steps and went into the &lt;code&gt;chroot&lt;/code&gt;, I got this:&lt;/p&gt;
&lt;pre&gt;# /tmp/root.x86_64/bin/arch-chroot /tmp/root.x86_64/
==&amp;gt; WARNING: /mnt/archlinux/root.x86_64/ is not a mountpoint. This may have undesirable side effects.&lt;/pre&gt;
&lt;p&gt;I &lt;a href="https://bugs.archlinux.org/task/46169"&gt;understood&lt;/a&gt; that the &lt;code&gt;chroot&lt;/code&gt; should be a mount point:&lt;/p&gt;
&lt;pre&gt;# mount --bind /tmp/root.x86_64 /tmp/root.x86_64
# /tmp/root.x86_64/bin/arch-chroot /tmp/root.x86_64/&lt;/pre&gt;
&lt;p&gt;And the &lt;code&gt;chroot&lt;/code&gt; worked without any warnings. To clarify the shell I am
running I will prefix the commands with &lt;code&gt;[chroot] #&lt;/code&gt; from here on:&lt;/p&gt;
&lt;pre&gt;[chroot] # pacman-key --init
[chroot] # pacman-key --populate archlinux&lt;/pre&gt;
&lt;p&gt;After editing the mirror list outside of the &lt;code&gt;chroot&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;$ sudoedit /tmp/root.x86_64/etc/pacman.d/mirrorlist&lt;/pre&gt;
&lt;p&gt;I updated the bootstrap:&lt;/p&gt;
&lt;pre&gt;[chroot] # pacman -Syyu&lt;/pre&gt;
&lt;p&gt;And mounted the partitions to be bootstrapped:&lt;/p&gt;
&lt;pre&gt;[chroot] # mount /dev/nvme0n1p5 /mnt
[chroot] # mount /dev/nvme0n1p4 /mnt/home
[chroot] # genfstab -U /mnt &amp;gt;&amp;gt; /mnt/etc/fstab
[chroot] # umount /mnt/home&lt;/pre&gt;
&lt;aside class="m-note m-info"&gt;
In preparation, I had created these partitions by shrinking the existing ones
with a &lt;a href="https://distrowatch.com/table.php?distribution=gparted"&gt;GParted&lt;/a&gt; USB live medium, long time ago.  The home partition was also
created and made separate such that it can be shared between Ubuntu and Arch
Linux for a dual-boot setup.&lt;/aside&gt;
&lt;p&gt;and installed some essentials:&lt;/p&gt;
&lt;pre&gt;[chroot] # pacman -S base base-devel
:: There are 24 members in group base-devel:
:: Repository core
   1) autoconf  2) automake  3) binutils  4) bison  5) fakeroot  6) file
   7) findutils  8) flex  9) gawk  10) gcc  11) gettext  12) grep  13) groff
   14) gzip  15) libtool  16) m4 17) make  18) pacman  19) patch  20) pkgconf
   21) sed  22) sudo  23) texinfo  24) which
...&lt;/pre&gt;
&lt;p&gt;Did the same for the target Arch Linux partition mounted at &lt;code&gt;/mnt&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;[chroot] # pacstrap /mnt base base-devel
[chroot] # pacstrap /mnt linux-lts linux-firmware intel-ucode lsb-release&lt;/pre&gt;
&lt;p&gt;Thereafter I followed the official &lt;a href="https://wiki.archlinux.org/index.php/Installation_guide#Configure_the_system"&gt;installation guide&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;[chroot] # arch-chroot /mnt&lt;/pre&gt;
&lt;aside class="m-note m-info"&gt;
The step above runs &lt;code&gt;arch-chroot&lt;/code&gt; from within a &lt;code&gt;chroot&lt;/code&gt;. Now, I see why
Leo was so confused in Inception. Whenever in doubt, run &lt;code&gt;df&lt;/code&gt;.&lt;/aside&gt;
&lt;/section&gt;
&lt;section id="cleaning-up-and-dual-booting"&gt;
&lt;h2&gt;Cleaning up and dual booting&lt;/h2&gt;
&lt;p&gt;Exit the &lt;code&gt;chroot&lt;/code&gt; and unmount everything:&lt;/p&gt;
&lt;pre&gt;[chroot in a chroot] # exit
[chroot] # exit
# umount -R /tmp/root.x86_64&lt;/pre&gt;
&lt;p&gt;The Ubuntu installation came with a &lt;a href="https://wiki.archlinux.org/index.php/GRUB#Detecting_other_operating_systems"&gt;GRUB&lt;/a&gt; boot loader and &lt;code&gt;os-loader&lt;/code&gt; package
which should detect the new Arch Linux installation (since we installed the
&lt;code&gt;lsb-release&lt;/code&gt; package). To make it happen, reboot? from Ubuntu run:&lt;/p&gt;
&lt;pre&gt;# sudo update-grub&lt;/pre&gt;
&lt;p&gt;That did not work! &lt;a href="https://askubuntu.com/questions/111085/how-do-i-hide-the-grub-menu-showing-up-at-the-beginning-of-boot"&gt;Turns out&lt;/a&gt; &lt;code&gt;/etc/default/grub&lt;/code&gt; had two offending lines:&lt;/p&gt;
&lt;pre&gt;GRUB_TIMEOUT_STYLE=hidden
GRUB_DISABLE_OS_PROBER=true&lt;/pre&gt;
&lt;p&gt;which when commented out, it started working. Follow this by &lt;code&gt;update-grub&lt;/code&gt; or
&lt;code&gt;grub-mkconfig -o /boot/grub/grub.cfg&lt;/code&gt; and it is good to go.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="epilogue-some-personal-choices"&gt;
&lt;h2&gt;Epilogue: some personal choices&lt;/h2&gt;
&lt;p&gt;What follows below are not necessary but I note it down for future reference.
Here are the packages I chose to install:&lt;/p&gt;
&lt;pre&gt;neovim vim code  # editors
plasma kdegraphics-thumbnailers # KDE desktop meta package
konsole
acpi
inetutils  # many network commands, including hostname
openssh
parted  # partitioning tool
xonsh zsh # alternatives to bash
tlp  # CPU and FAN governor
man-db  # man pages
arch-wiki-docs  # provides wiki-search
arch-wiki-lite  # and wiki-search-html commands
ttf-joypixels ttf-roboto adobe-source-sans-pro-fonts adobe-source-serif-pro-fonts ttf-arphic-uming terminus-font  # extra fonts
libreoffice-fresh  # writer, calc, impress...
gcc-fortran gcc-go rust  # compilers
pacman-contrib reflector  # pacman utilities
firefox thunderbird zeal okular ark nextcloud-client mplayer  # ... and more applications
flatpak  # for sandboxing non-free applications&lt;/pre&gt;
&lt;p&gt;An AUR helper:&lt;/p&gt;
&lt;pre&gt;$ git clone https://aur.archlinux.org/yay.git
$ cd yay &amp;amp;&amp;amp; makepkg -s
# pacman -U /home/avmo/.cache/makepkg/yay-*&lt;/pre&gt;
&lt;p&gt;Check and activate periodic &lt;a href="https://wiki.archlinux.org/index.php/Solid_state_drive#TRIM"&gt;TRIM&lt;/a&gt; for long-term performance:&lt;/p&gt;
&lt;pre&gt;$ lsblk --discard
NAME        DISC-ALN DISC-GRAN DISC-MAX DISC-ZERO
nvme0n1            0      512B       2T         0
|-nvme0n1p1        0      512B       2T         0
|-nvme0n1p2        0      512B       2T         0
|-nvme0n1p3        0      512B       2T         0
|-nvme0n1p4        0      512B       2T         0
|-nvme0n1p5        0      512B       2T         0
`-nvme0n1p6        0      512B       2T         0

# systemctl enable fstrim.timer
Created symlink /etc/systemd/system/timers.target.wants/fstrim.timer → /usr/lib/systemd/system/fstrim.timer.&lt;/pre&gt;
&lt;p&gt;Format a &lt;a href="https://wiki.archlinux.org/index.php/Swap"&gt;swap&lt;/a&gt; partition in the empty space available and mount it with &lt;a href="https://wiki.archlinux.org/index.php/Solid_state_drive#TRIM"&gt;TRIM&lt;/a&gt;
(&lt;code&gt;discard&lt;/code&gt;) support:&lt;/p&gt;
&lt;pre&gt;# parted /dev/nvme0n1
GNU Parted 3.3
Using /dev/nvme0n1
Welcome to GNU Parted! Type 'help' to view a list of commands.
(parted) print
Model: KXG60ZNV512G NVMe TOSHIBA 512GB (nvme)
Disk /dev/nvme0n1: 512GB
Sector size (logical/physical): 512B/512B
Partition Table: gpt
Disk Flags:

Number  Start   End     Size    File system  Name                  Flags
 1      1049kB  819MB   818MB   fat32        EFI system partition  boot, esp
 2      819MB   6188MB  5369MB  fat32        Basic data partition  msftres
 3      6188MB  140GB   134GB   ext4
 4      194GB   301GB   107GB   btrfs
 5      405GB   512GB   107GB   ext4

(parted) mkpart primary linux-swap 140GB 194GB
(parted) print
Model: KXG60ZNV512G NVMe TOSHIBA 512GB (nvme)
Disk /dev/nvme0n1: 512GB
Sector size (logical/physical): 512B/512B
Partition Table: gpt
Disk Flags:

Number  Start   End     Size    File system     Name                  Flags
 1      1049kB  819MB   818MB   fat32           EFI system partition  boot, esp
 2      819MB   6188MB  5369MB  fat32           Basic data partition  msftres
 3      6188MB  140GB   134GB   ext4
 6      140GB   194GB   53.7GB  linux-swap(v1)  primary
 4      194GB   301GB   107GB   btrfs
 5      405GB   512GB   107GB   ext4

(parted) quit
# mkswap /dev/nvme0n1p6
Setting up swapspace version 1, size = 50 GiB (53687087104 bytes)
no label, UUID=6ce1daf4-6a66-44a8-a14b-bd4ea3eb9c40
# swapon --discard
# echo &amp;quot;UUID=6ce1daf4-6a66-44a8-a14b-bd4ea3eb9c40 none swap defaults,discard 0 0&amp;quot; &amp;gt;&amp;gt; /etc/fstab&lt;/pre&gt;
&lt;p&gt;Installed an alternative shell (as listed in &lt;code&gt;/etc/shells&lt;/code&gt;) and added myself
as a user:&lt;/p&gt;
&lt;pre&gt;# useradd --no-create-home --uid 1001 --user-group avmo --shell /usr/bin/xonsh
# passwd avmo&lt;/pre&gt;
&lt;p&gt;Then to make the desktop and essential components appear:&lt;/p&gt;
&lt;pre&gt;# systemctl enable sddm NetworkManager tlp&lt;/pre&gt;
&lt;p&gt;Configure sensors from &lt;code&gt;lm_sensors&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;# sensors-detect
# sensors
Adapter: ISA adapter
Package id 0:  +45.0°C  (high = +100.0°C, crit = +100.0°C)
Core 0:        +45.0°C  (high = +100.0°C, crit = +100.0°C)
Core 1:        +44.0°C  (high = +100.0°C, crit = +100.0°C)
Core 2:        +44.0°C  (high = +100.0°C, crit = +100.0°C)
Core 3:        +47.0°C  (high = +100.0°C, crit = +100.0°C)
Core 4:        +42.0°C  (high = +100.0°C, crit = +100.0°C)
Core 5:        +42.0°C  (high = +100.0°C, crit = +100.0°C)

dell_smm-virtual-0
Adapter: Virtual device
fan1:        2288 RPM
fan2:        2317 RPM

pch_cannonlake-virtual-0
Adapter: Virtual device
temp1:        +55.0°C

acpitz-acpi-0
Adapter: ACPI interface
temp1:        +25.0°C  (crit = +107.0°C)

iwlwifi-virtual-0
Adapter: Virtual device
temp1:        +48.0°C

BAT0-acpi-0
Adapter: ACPI interface
in0:          12.80 V
curr1:       1000.00 uA&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="nvidia"&gt;
&lt;h2&gt;Nvidia&lt;/h2&gt;
&lt;p&gt;The riskiest part, IMHO, although it is well &lt;a href="https://wiki.archlinux.org/index.php/NVIDIA"&gt;documented&lt;/a&gt;. The driver package
depends on the GPU model and the kernel. Thankfully no kernel panic occurred by
installing:&lt;/p&gt;
&lt;pre&gt;# pacman -S nvidia xorg-xrandr&lt;/pre&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;If anything goes wrong, it often helped by simply clearing up
&lt;code&gt;/etc/X11/xorg.conf.d&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;section id="option-1-nvidia-alone"&gt;
&lt;h3&gt;Option 1: Nvidia alone&lt;/h3&gt;
&lt;p&gt;Tried:&lt;/p&gt;
&lt;pre&gt;# nvidia-xconfig&lt;/pre&gt;
&lt;p&gt;However, SDDM did not start when X server was configured to use &lt;code&gt;nvidia&lt;/code&gt;
display driver. The key was to run some commands &lt;a href="https://wiki.archlinux.org/index.php/NVIDIA_Optimus#SDDM"&gt;before SDDM&lt;/a&gt; starts, with
the following lines in &lt;code&gt;/usr/share/sddm/scripts/Xsetup&lt;/code&gt;.&lt;/p&gt;
&lt;pre class="m-code"&gt;xrandr --setprovideroutputsource modesetting NVIDIA-0
xrandr --auto&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="option-2-optimus-prime"&gt;
&lt;h3&gt;Option 2: Optimus Prime&lt;/h3&gt;
&lt;p&gt;After reading a bit more, I chose NOT to do Option 1, but instead go for
&lt;a href="https://wiki.archlinux.org/index.php/NVIDIA_Optimus#Using_PRIME_render_offload"&gt;switchable&lt;/a&gt; graphics. The following package provides a &lt;code&gt;prime-run&lt;/code&gt; command
and a X server configuration:&lt;/p&gt;
&lt;pre&gt;# pacman -S nvidia-prime&lt;/pre&gt;
&lt;p&gt;Rebooted and verified it:&lt;/p&gt;
&lt;pre&gt;$ xrandr --listproviders
Providers: number : 2
Provider 0: id: 0x48 cap: 0xf, Source Output, Sink Output, Source Offload, Sink Offload crtcs: 3 outputs: 6 associated providers: 0 name:modesetting
Provider 1: id: 0x2a3 cap: 0x0 crtcs: 0 outputs: 0 associated providers: 0 name:NVIDIA-G0

# pacman -S mesa-demos
$ prime-run glxinfo | grep OpenGL&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="finally"&gt;
&lt;h3&gt;Finally&lt;/h3&gt;
&lt;p&gt;There was a small &lt;a href="https://bbs.archlinux.org/viewtopic.php?id=251919"&gt;hiccup&lt;/a&gt; in detecting the external HDMI monitor. Turns out it
was &lt;a href="https://git.archlinux.org/svntogit/packages.git/commit/trunk?h=packages/nvidia-utils&amp;amp;id=65ce50c4fd7388e91987cd2d271881e4ae126902"&gt;regression&lt;/a&gt; due to a change in &lt;code&gt;nvidia-utils&lt;/code&gt;. It was fixed by adding
back the line:&lt;/p&gt;
&lt;pre&gt;Option &amp;quot;PrimaryGPU&amp;quot; &amp;quot;yes&amp;quot;&lt;/pre&gt;
&lt;p&gt;to &lt;code&gt;/usr/share/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf&lt;/code&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="cuda"&gt;
&lt;h2&gt;CUDA&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://wiki.archlinux.org/index.php/GPGPU#CUDA"&gt;Installation&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;# pacman -S cuda&lt;/pre&gt;
&lt;p&gt;Testing:&lt;/p&gt;
&lt;pre&gt;$ cp -r /opt/cuda/samples/ .
$ cd samples/1_Utilities/deviceQuery
$ make
$ ./deviceQuery
./deviceQuery Starting...

 CUDA Device Query (Runtime API) version (CUDART static linking)

Detected 1 CUDA Capable device(s)

Device 0: &amp;quot;Quadro RTX 3000&amp;quot;
  CUDA Driver Version / Runtime Version          10.2 / 10.2
  CUDA Capability Major/Minor version number:    7.5
  Total amount of global memory:                 5935 MBytes (6222839808 bytes)
  (30) Multiprocessors, ( 64) CUDA Cores/MP:     1920 CUDA Cores
  GPU Max Clock rate:                            1380 MHz (1.38 GHz)
  Memory Clock rate:                             7001 Mhz
  Memory Bus Width:                              192-bit
  L2 Cache Size:                                 3145728 bytes
  Maximum Texture Dimension Size (x,y,z)         1D=(131072), 2D=(131072, 65536), 3D=(16384, 16384, 16384)
  Maximum Layered 1D Texture Size, (num) layers  1D=(32768), 2048 layers
  Maximum Layered 2D Texture Size, (num) layers  2D=(32768, 32768), 2048 layers
  Total amount of constant memory:               65536 bytes
  Total amount of shared memory per block:       49152 bytes
  Total number of registers available per block: 65536
  Warp size:                                     32
  Maximum number of threads per multiprocessor:  1024
  Maximum number of threads per block:           1024
  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)
  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)
  Maximum memory pitch:                          2147483647 bytes
  Texture alignment:                             512 bytes
  Concurrent copy and kernel execution:          Yes with 3 copy engine(s)
  Run time limit on kernels:                     Yes
  Integrated GPU sharing Host Memory:            No
  Support host page-locked memory mapping:       Yes
  Alignment requirement for Surfaces:            Yes
  Device has ECC support:                        Disabled
  Device supports Unified Addressing (UVA):      Yes
  Device supports Compute Preemption:            Yes
  Supports Cooperative Kernel Launch:            Yes
  Supports MultiDevice Co-op Kernel Launch:      Yes
  Device PCI Domain ID / Bus ID / location ID:   0 / 1 / 0
  Compute Mode:
     &amp;lt; Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) &amp;gt;

deviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 10.2, CUDA Runtime Version = 10.2, NumDevs = 1
Result = PASS&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="docker"&gt;
&lt;h2&gt;Docker&lt;/h2&gt;
&lt;p&gt;Installing &lt;a href="https://wiki.archlinux.org/index.php/Docker#Installation"&gt;docker&lt;/a&gt; is straightforward, but I wanted to avoid adding my default
login into the &lt;code&gt;docker&lt;/code&gt; group which is root equivalent. So I created a
special user to do this:&lt;/p&gt;
&lt;pre&gt;# pacman -S docker
# systemctl start docker
# useradd --no-create-home -g docker docker
# passwd
$ su - docker&lt;/pre&gt;
&lt;/section&gt;
</content><category term="Tech Talk"></category><category term="software"></category><category term="linux"></category><category term="ubuntu"></category><category term="archlinux"></category></entry><entry><title>Turning Pelican into a mini-CMS</title><link href="https://ashwinvis.github.io/pelican-mini-cms.html" rel="alternate"></link><published>2020-01-02T14:12:41+01:00</published><updated>2020-01-02T14:12:41+01:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2020-01-02:/pelican-mini-cms.html</id><summary type="html">&lt;p&gt;Lowering writing inhibitions with tech&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I like automating things. This means I write small nifty tools to do
boring / repetitive stuff for me. I have been relying on &lt;a href="https://pelican.readthedocs.io/"&gt;static site
generator Pelican&lt;/a&gt; for my website. I
do go an extra mile from the usual workflow.&lt;/p&gt;
&lt;p&gt;For this blog, I wanted to keep the source code and generated output
separate. A way to do that was to use git branches to &lt;code&gt;develop&lt;/code&gt;
content and publish the output on the &lt;code&gt;master&lt;/code&gt; branch. While in theory
this sounds nice, it becomes cumbersome to manage two copies of the same
repository locally. The solution was CI.&lt;/p&gt;
&lt;section id="stage-1-ci"&gt;
&lt;h2&gt;Stage 1: CI&lt;/h2&gt;
&lt;p&gt;This very blog is automatically published on GitHub pages every time I
push some text to GitHub, specifically on the &lt;code&gt;develop&lt;/code&gt; branch. As a
result, I don’t have to remember to activate the Python virtual
environment, run a Makefile, commit output to another branch
(&lt;code&gt;master&lt;/code&gt;) etc.&lt;/p&gt;
&lt;p&gt;I used to do this with Travis CI and ever since GitHub actions rolled
out, I have been using the latter as it is noticeably faster. Snippets
of the configuration files that I used are shown below.&lt;/p&gt;
&lt;section id="travis-ci-configuration"&gt;
&lt;h3&gt;&lt;a href="https://github.com/ashwinvis/ashwinvis.github.io/blob/19.11/.travis.yml"&gt;Travis CI configuration&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="m-code"&gt;&lt;span class="nt"&gt;language&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;python&lt;/span&gt;

&lt;span class="nn"&gt;...&lt;/span&gt;

&lt;span class="nt"&gt;install&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;pip install -r requirements.txt&lt;/span&gt;
&lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;pelican-themes -i pelican-bluedrop/bluedrop&lt;/span&gt;

&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;cd src&lt;/span&gt;
&lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;make publish&lt;/span&gt;

&lt;span class="nt"&gt;deploy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;pages&lt;/span&gt;
  &lt;span class="nt"&gt;skip-cleanup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
  &lt;span class="nt"&gt;github-token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$GITHUB_TOKEN&amp;quot;&lt;/span&gt;
  &lt;span class="nt"&gt;keep-history&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
  &lt;span class="nt"&gt;target-branch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;master&lt;/span&gt;
  &lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Travis CI&lt;/span&gt;
  &lt;span class="nt"&gt;local-dir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;./output&amp;quot;&lt;/span&gt;
  &lt;span class="nt"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nt"&gt;branch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;develop&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;An extra step you have to do is to generate a personal access token,
&lt;code&gt;`GITHUB_TOKEN&lt;/code&gt; &amp;lt;&lt;a href="https://github.com/settings/tokens"&gt;https://github.com/settings/tokens&lt;/a&gt;&amp;gt;`__ for Travis to
get permissions. Then, you save the token as a secret environment
variable in Travis. The process is &lt;a href="https://docs.travis-ci.com/user/deployment/pages/"&gt;nicely
documented&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="github-actions-workflow"&gt;
&lt;h3&gt;&lt;a href="https://github.com/ashwinvis/ashwinvis.github.io/blob/19.11/.github/workflows/publish.yml"&gt;GitHub actions workflow&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="m-code"&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Publish pelican website&lt;/span&gt;

&lt;span class="nt"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;push&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;

&lt;span class="nt"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;PIP_CACHE_DIR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;~/.cache/pip&lt;/span&gt;

&lt;span class="nt"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;build&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="nt"&gt;runs-on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="nt"&gt;strategy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nt"&gt;max-parallel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
      &lt;span class="nt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nt"&gt;python-version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;3.7&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;

    &lt;span class="nt"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;...&lt;/span&gt;

    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Deploy to GitHub Pages&lt;/span&gt;
      &lt;span class="nt"&gt;if&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;success()&lt;/span&gt;
      &lt;span class="nt"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nt"&gt;ACTIONS_DEPLOY_KEY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;${{ secrets.ACTIONS_DEPLOY_KEY }}&lt;/span&gt;
        &lt;span class="nt"&gt;PUBLISH_BRANCH&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;master&lt;/span&gt;
        &lt;span class="nt"&gt;PUBLISH_DIR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;./output&lt;/span&gt;
        &lt;span class="nt"&gt;SCRIPT_MODE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
      &lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
        &lt;span class="no"&gt;wget https://raw.githubusercontent.com/peaceiris/actions-gh-pages/v2.5.0/entrypoint.sh&lt;/span&gt;
        &lt;span class="no"&gt;bash ./entrypoint.sh&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;Here we use a &lt;a href="https://github.com/peaceiris/actions-gh-pages"&gt;third-party
action&lt;/a&gt; created to
deploy generated files to GitHub pages. We may not want to give too many
permissions here (i.e. access to all repositories as we did with
Travis!). Therefore a deploy key was generated from
&lt;code&gt;https://github.com/&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io/settings/keys&lt;/code&gt;
instead.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="stage-2-templating"&gt;
&lt;h2&gt;Stage 2: Templating&lt;/h2&gt;
&lt;p&gt;Pelican posts require some
&lt;a href="https://pelican.readthedocs.io/en/stable/content.html#file-metadata"&gt;metadata&lt;/a&gt;
for the posts to be acceptable. Some (title, date) are mandatory while
the rest are optional. I wanted the process of writing a new post to be
as fluid as possible.
I started by keeping a &lt;a href="https://github.com/ashwinvis/ashwinvis.github.io/blob/19.11/src/content/template.md"&gt;simple markdown file with dummy
metadata&lt;/a&gt;.
Then I would copy this file, and manually edit the metadata before
authoring the post. As you can imagine, I was not pleased by this
approach!
Now I have come up with a better approach. The result was a Jinja template +
interactive TUI workflow which creates a post stub, save it with the right
filename, opens my editor, commits and pushes it! &lt;a href="https://github.com/ashwinvis/ashwinvis.github.io/blob/develop/templates/post.md.j2"&gt;The template&lt;/a&gt;
looks as follows:&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;metadata&lt;/span&gt; -&lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;---&lt;/span&gt;
&lt;span class="x"&gt;Title: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;Author: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;author&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;Date: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;date&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;Status: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;status&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;Summary: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;summary&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;Category: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;category&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;Tags: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;---&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt;- &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;I did not want to build the TUI from the scratch. Therefore I borrowed
the &lt;code&gt;prompt&lt;/code&gt; module from &lt;a href="https://cookiecutter.readthedocs.io/en/1.7.0/cookiecutter.html#module-cookiecutter.prompt"&gt;the cookiecutter project&lt;/a&gt;
to do it for me. I save some defaults in a &lt;code&gt;cookiecutter.json&lt;/code&gt; file,
based on which the metadata values are prompted from the user
conveniently as follows:&lt;/p&gt;
&lt;pre class="m-code"&gt;title &lt;span class="o"&gt;[&lt;/span&gt;Insert title&lt;span class="o"&gt;]&lt;/span&gt;: Turning Pelican into a mini-CMS
summary &lt;span class="o"&gt;[]&lt;/span&gt;: Lowering writing inhibitions with tech
Select category:
&lt;span class="m"&gt;1&lt;/span&gt; - Blog
&lt;span class="m"&gt;2&lt;/span&gt; - Tech Talk
Choose from &lt;span class="m"&gt;1&lt;/span&gt;, &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="m"&gt;2&lt;/span&gt;
Select tags:
&lt;span class="m"&gt;1&lt;/span&gt; - life
&lt;span class="m"&gt;2&lt;/span&gt; - research
&lt;span class="m"&gt;3&lt;/span&gt; - software
Choose from &lt;span class="m"&gt;1&lt;/span&gt;, &lt;span class="m"&gt;2&lt;/span&gt;, &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="m"&gt;3&lt;/span&gt;
slug &lt;span class="o"&gt;[&lt;/span&gt;turning-pelican-into-a-mini-cms&lt;span class="o"&gt;]&lt;/span&gt;: pelican-mini-cms
Select status:
&lt;span class="m"&gt;1&lt;/span&gt; - draft
&lt;span class="m"&gt;2&lt;/span&gt; - published
Choose from &lt;span class="m"&gt;1&lt;/span&gt;, &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="m"&gt;1&lt;/span&gt;
date &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2020&lt;/span&gt;-01-02T14:12:41.803562&lt;span class="o"&gt;]&lt;/span&gt;:
author &lt;span class="o"&gt;[&lt;/span&gt;Ashwin Vishnu Mohanan&lt;span class="o"&gt;]&lt;/span&gt;:
Select filetype:
&lt;span class="m"&gt;1&lt;/span&gt; - md
&lt;span class="m"&gt;2&lt;/span&gt; - ipynb
Choose from &lt;span class="m"&gt;1&lt;/span&gt;, &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;:
Track changes? &lt;span class="o"&gt;[&lt;/span&gt;True&lt;span class="o"&gt;]&lt;/span&gt;:
Commit changes? &lt;span class="o"&gt;[&lt;/span&gt;True&lt;span class="o"&gt;]&lt;/span&gt;: n
Push changes? &lt;span class="o"&gt;[&lt;/span&gt;False&lt;span class="o"&gt;]&lt;/span&gt;:&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://github.com/ashwinvis/ashwinvis.github.io/blob/develop/write.py"&gt;The script which does
this&lt;/a&gt;
is self explanatory, I hope!&lt;/p&gt;
&lt;/section&gt;
</content><category term="Tech Talk"></category><category term="software"></category><category term="ci"></category><category term="automation"></category><category term="devops"></category></entry><entry><title>Licensing software to be permissive</title><link href="https://ashwinvis.github.io/licensing-software.html" rel="alternate"></link><published>2019-12-21T00:00:00+01:00</published><updated>2019-12-21T00:00:00+01:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2019-12-21:/licensing-software.html</id><summary type="html">&lt;p&gt;Considerations while selecting a permissive license for your open-source project.&lt;/p&gt;</summary><content type="html">&lt;p&gt;A while back we were discussing changing the license of
&lt;a href="https://transonic.rtfd.io"&gt;transonic&lt;/a&gt; from CeCILL-B to a more recognizable,
but still permissive license. We would soon make that move. The
most obvious candidate was the 3-clause BSD license and I suggested Apache 2.0
as an alternative, due to the potential benefits.&lt;/p&gt;
&lt;p&gt;Then I saw this:&lt;/p&gt;
&lt;iframe src="https://fosstodon.org/@chris/101733810026327049/embed" class="mastodon-embed" style="max-width: 100%; border: 0" height="320em" width="100%" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;

&lt;p&gt;Being a licensing nerd, I found this &lt;a href="https://writing.kemitchell.com/2019/03/09/Deprecation-Notice.html"&gt;amusing
piece&lt;/a&gt;
informative on why everyone should avoid MIT and BSD. Patents and ambiguity.
The article also links to &lt;a href="https://writing.kemitchell.com/2016/09/21/MIT-License-Line-by-Line.html"&gt;verbose explanation of what the MIT license actually
means&lt;/a&gt;,
along with this warning:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As a result, the shortness of MIT and BSD are reassuring only until you
actually try to understand them, and find you need a decoder ring. The terms
are actually dangerous if you read them without knowing you need that decoder
ring, believing you see the whole picture, which often turns out to be just
the picture you wanted to see.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A friend of mine had used the MIT license a while ago, commenting that he
understood every word of it! Well, did he?!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;My arguments &lt;em&gt;in favour of&lt;/em&gt; Apache 2.0 were as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;I don't think Apache 2.0 makes any demand from users of transonic or
   vice-versa. It is
   &lt;a href="https://softwareengineering.stackexchange.com/questions/40561/is-bsd-license-compatible-with-apache"&gt;compatible with BSD too&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To quote the license itself from section 1, it makes it adequately clear
   what &lt;em&gt;derivative works&lt;/em&gt; are:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;For the purposes of this License, Derivative Works shall not include works
that remain separable from, or merely link (or bind by name) to the
interfaces of, the Work and Derivative Works thereof.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://www.oreilly.com/library/view/understanding-open-source/0596005814/ch02.html"&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The key aspect of Apache 2.0 is it &lt;a href="https://snyk.io/blog/mit-apache-bsd-fairest-of-them-all/"&gt;protects developers from patent
   lawsuits&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Indeed something more easier to read, but legally sound would be nice, like Blue Oak.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Don't use the Blue Oak license ... yet. Once it is approved / vetted
by &lt;a href="https://www.gnu.org/licenses/license-list.html"&gt; GNU &lt;/a&gt; and
&lt;a href="https://opensource.org/licenses"&gt; OSI &lt;/a&gt; we can start using it. I seems like a
good license, but I am no expert, and most likely you are not too. Unfamiliar
licenses slows down contributions and use of software.  It is listed on &lt;a href="https://spdx.org/licenses/BlueOak-1.0.0.html"&gt; SPDX
&lt;/a&gt; though!&lt;/p&gt;</content><category term="Tech Talk"></category><category term="licensing"></category><category term="open-source"></category></entry><entry><title>About my postdoc project at Stockholm University</title><link href="https://ashwinvis.github.io/project-eturb.html" rel="alternate"></link><published>2019-12-12T00:00:00+01:00</published><updated>2019-12-12T00:00:00+01:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2019-12-12:/project-eturb.html</id><summary type="html">&lt;p&gt;eTurb: Efficient simulations of turbulence in atmospheric boundary layers&lt;/p&gt;</summary><content type="html">&lt;p&gt;Since October 1, 2019 I have been working as a postdoc at MISU, Stockholm
University. There has been a couple of meetings with the group involved, and
now the &lt;em&gt;who&lt;/em&gt; and the &lt;em&gt;what&lt;/em&gt; are more concrete. I wrote a short abstract for
the &lt;a href="https://www.flow.kth.se/projects"&gt;annual FLOW catalogue&lt;/a&gt;, which I share
below.&lt;/p&gt;
&lt;h2 id="eturb-efficient-simulations-of-turbulence-in-atmospheric-boundary-layers"&gt;&lt;a class="toclink" href="#eturb-efficient-simulations-of-turbulence-in-atmospheric-boundary-layers"&gt;eTurb: Efficient simulations of turbulence in atmospheric boundary layers&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;A. V. Mohanan, G. Brethouwer, M. Kupiainen, J. Nordström, D. S. Henningson,
P. Schlatter &amp;amp; G. Svensson&lt;/p&gt;
&lt;p&gt;Funding: Swedish e-Science Research Centre (SeRC)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The atmospheric boundary layer (ABL) is the region which interacts with the
Earth’s surface and exchanges energy between larger geophysical scales and
land. The ABL goes through different regimes of stratification during the
day-night transition, referred to as the diurnal cycle. Daytime convection
results in a mixed layer when the boundary layer depth increases, and during
night as the land cools, a shallower stably stratified boundary layer is
observed. Accurate representation of turbulence in the ABL is crucial e.g. to
improve weather predictions and for wind-energy applications. A suitable tool
for studying the turbulence and complex transient phenomena in the ABL during a
typical diurnal cycle is large-eddy simulation (LES).&lt;/p&gt;
&lt;p&gt;This project aims to tackle different modelling challenges along the road to an
efficient LES of the ABL. From the physics perspective, the wall boundary
condition and the LES subgrid-scale model need to be improved to allow for high
resolution simulations. Existing models should also be verified with regards to
numerical stability and consistency. A desired outcome of this project is an
efficient and accurate code for an LES of diurnal cycle of the ABL. To
coordinate this inter-disciplinary project a collaboration between KTH, SU, LiU
and SMHI is set afoot. For the LES we will use the Nek5000 (KTH and SU) and
ESSENSE (LiU and SMHI) codes.&lt;/p&gt;
&lt;p&gt;&lt;a title="NikNaks [CC BY-SA 3.0 (https://creativecommons.org/licenses/by-sa/3.0)], via Wikimedia Commons" href="https://commons.wikimedia.org/wiki/File:Atmospheric_boundary_layer.svg"&gt;&lt;img alt="Atmospheric boundary layer" src="https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Atmospheric_boundary_layer.svg/512px-Atmospheric_boundary_layer.svg.png"&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="Blog"></category><category term="postdoc"></category><category term="research"></category><category term="fluid-mechanics"></category></entry><entry><title>At PyCon Sweden 2019</title><link href="https://ashwinvis.github.io/pyconse2019.html" rel="alternate"></link><published>2019-10-31T00:00:00+01:00</published><updated>2019-12-01T00:00:00+01:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2019-10-31:/pyconse2019.html</id><summary type="html">&lt;p&gt;Representing Transonic&lt;/p&gt;</summary><content type="html">&lt;p&gt;I am attending &lt;a href="http://pycon.se"&gt;PyCon Sweden 2019&lt;/a&gt; at Stockholm where I am presenting &lt;a href="https://transonic.rtfd.io"&gt;Transonic&lt;/a&gt;.
Do check out the slides for my presentation:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://cicero.xyz/v3/remark/0.14.0/github.com/ashwinvis/talks/master/pyconse2019/talk.md/#1"&gt;Make your Python code fly at transonic speeds!&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Don't miss the links to Binder demo and further reading at the final slide.&lt;/p&gt;
&lt;h2 id="update"&gt;&lt;a class="toclink" href="#update"&gt;Update&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The video of the talk is out! Watch it:&lt;/p&gt;
&lt;iframe id='ivplayer' type='text/html' width='640' height='360' src='https://invidio.us/embed/donHrISOO-w' frameborder='0'&gt;&lt;/iframe&gt;

&lt;p&gt;Alt: &lt;a href="https://www.youtube.com/watch?v=donHrISOO-w"&gt;Youtube link&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="rewind-of-my-experience"&gt;&lt;a class="toclink" href="#rewind-of-my-experience"&gt;Rewind of my experience&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I got to meet a lot of great like-minded people in those two days! It is no
easy task to list all whom I met and convey my regards. Therefore, I list the
videos and slides which might be of interest to you as a reader:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/consideRatio"&gt;Erik Sundell&lt;/a&gt; who works for both &lt;em&gt;Jupyterhub&lt;/em&gt;
  and his company shared his insights on how one can setup Jupyter with
  multiple user deployments on a &lt;a href="https://tljh.jupyter.org/"&gt;single server&lt;/a&gt; or
  on &lt;a href="https://ztjh.jupyter.org/"&gt;the cloud&lt;/a&gt;. &lt;a href="https://invidio.us/watch?v=Epx4P6YCgTo"&gt;[video]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gavincyi/pycon-presentation/"&gt;Gavin Chan&lt;/a&gt; who compared &lt;em&gt;Cython and Pybind11&lt;/em&gt;
   in his talk. &lt;a href="https://invidio.us/watch?v=ZRKjoUALmwk"&gt;[video]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isaacbernat/presentations/"&gt;Isaac Bernat&lt;/a&gt; showed us that
  &lt;em&gt;algorithmic&lt;/em&gt; improvements go a long way, indeed! &lt;a href="https://invidio.us/watch?v=asZ0SDTKqvM"&gt;[video]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There were also really educative talks on
&lt;a href="https://invidio.us/watch?v=EX4YsevmZBg"&gt;asyncio&lt;/a&gt;, &lt;a href="https://invidio.us/watch?v=MKf6KfdTems"&gt;property based
testing&lt;/a&gt;
&lt;a href="https://slides.com/hultner/pycon-se-2019"&gt;[slides]&lt;/a&gt; and &lt;a href="https://invidio.us/watch?v=fZwB1gQBwnU"&gt;mutation
testing&lt;/a&gt;, plus a sizable representation
from the data science community. A couple of fun projects such as the
&lt;a href="https://www.brachiograph.art/"&gt;a plotting DIY tool made using Python + Raspberry Pi Zero,
BrachioGraph&lt;/a&gt; and a &lt;a href="https://invidio.us/watch?v=o8Un1w30IDk"&gt;really hacky self-documenting
code&lt;/a&gt;. See the &lt;a href="https://invidio.us/channel/UCH_2cuWzFMyCPvm75lJJ6wg"&gt;PyCon Sweden video
channel&lt;/a&gt; for the whole
programme.&lt;/p&gt;
&lt;p&gt;Last but not the least, I am thankful to the whole PyCon Sweden team for
selflessly devoting their time into organizing a great conference - twice as
large compared to last year. It was quite insightful to learn from the
&lt;a href="https://www.linkedin.com/in/anna-kazakova-lindegren-154b63b/"&gt;chair&lt;/a&gt; that organizing the conference is a
tightrope walk with a good fraction of ticket sales occurring towards the last
week and booking the venue has numerous constraints! Hats off!&lt;/p&gt;
&lt;h2 id="epilogue"&gt;&lt;a class="toclink" href="#epilogue"&gt;Epilogue&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As for my talk, I believe I did my part. Judging from my interaction, it
seemed that a lot of folks were oblivious to fact that &lt;code&gt;numpy&lt;/code&gt; is not so fast
for CPU-bound problems. I received some interesting questions as well:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Add some nice fluid dynamics visualizations?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There is a video on my &lt;a href="/pages/software.html"&gt;Software&lt;/a&gt; page.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Can you use std. library &lt;code&gt;typing&lt;/code&gt; for type annotations? Say for lists and
dictionaries etc. This would allow for compatibility with &lt;code&gt;mypy&lt;/code&gt; and later on
&lt;code&gt;mypyc&lt;/code&gt; when it is ready.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is seriously followed up as a &lt;a href="https://github.com/fluiddyn/transonic/issues/9"&gt;possible
enhancement&lt;/a&gt; to &lt;code&gt;transonic&lt;/code&gt;. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Can you accelerate Pandas?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/fluiddyn/transonic-demos/blob/master/pandas.ipynb"&gt;It seems to be
possible&lt;/a&gt;,
especially when you follow functional programming style.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Can you accelerate OpenCV code?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is a hard one. Of course, if you are dealing with images which are
read as &lt;code&gt;numpy&lt;/code&gt; arrays, it is possible. I haven't seen any Python extensions
written (in Cython or other) to accelerate OpenCV code and even if it does
exist, &lt;code&gt;transonic&lt;/code&gt; is not designed to interface with libraries. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Can Pythran replace Cython / f2py for interfacing with native code? &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Pythran does sound like Fortran, but it has nothing much in common - except the
fact that Pythran and Fortran target scientific computing and HPC. Generally
speaking, Pythran is meant to extend not interface.&lt;/p&gt;
&lt;p&gt;However, Pythran can do some useful things such as generate C++ only code, free
from any runtime Python dependencies (using &lt;code&gt;-e&lt;/code&gt; argument) or even &lt;a href="https://serge-sans-paille.github.io/pythran-stories/the-capsule-corporation.html"&gt;export
capsules&lt;/a&gt;
which is compatible with
&lt;a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.LowLevelCallable.html"&gt;&lt;code&gt;scipy.LowLevelCallable&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="the-journey-continues"&gt;&lt;a class="toclink" href="#the-journey-continues"&gt;The journey continues ...&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As developers of project &lt;code&gt;transonic&lt;/code&gt;, we are hoping that you would try out the
project and adopt it in your personal scripts, notebooks and possibly in
packages that you develop. If you found &lt;code&gt;transonic&lt;/code&gt; useful, help us, encourage
us, by &lt;a href="https://github.com/fluiddyn/transonic"&gt;starring the project on GitHub&lt;/a&gt;
and &lt;a href="https://framaforms.org/transonic-declaration-of-interest-and-feedback-1570969704"&gt;sharing your
experience&lt;/a&gt;
with us.&lt;/p&gt;</content><category term="Tech Talk"></category><category term="python"></category><category term="fluiddyn"></category><category term="transonic"></category><category term="pyconse"></category></entry><entry><title>Diversity amongst Python interpreters</title><link href="https://ashwinvis.github.io/diversity-amongst-python-interpreters.html" rel="alternate"></link><published>2019-08-06T00:00:00+02:00</published><updated>2019-08-06T00:00:00+02:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2019-08-06:/diversity-amongst-python-interpreters.html</id><summary type="html">&lt;p&gt;We now have multiple Python interpreters and let’s see what is in store.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Whenever we mention Python, we are mostly talking about the reference
implementation CPython. CPython is a great project, but it is important
to take stock of other implementations which are good alternatives and
have some advantages. I only list the active projects below, as of 2019:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypy.org/"&gt;PyPy&lt;/a&gt; or rpython: nearly complete compliance
with Python 3.5 and 3.6 standard library, faster&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rustpython.github.io/demo/"&gt;RustPython&lt;/a&gt;: the newest kid
in the block. Can be compiled to WebAssembly. Potentially we might
get Rust’s memory management as garbage collectors.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/graalvm/graalpython"&gt;GraalPython&lt;/a&gt;: based on
Java GraalVM with a goal to support Python’s standard library and
scientific ecosystem.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jython.org/"&gt;Jython&lt;/a&gt;: embeds Java in Python 2.7&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ironpython.net/"&gt;IronPython&lt;/a&gt;: embeds .NET frameworks in
Python 2.7&lt;/li&gt;
&lt;li&gt;&lt;a href="https://micropython.org/"&gt;MicroPython&lt;/a&gt; and
&lt;a href="https://circuitpython.org/"&gt;CircuitPython&lt;/a&gt;: Python runtime and
compiler for microcontrollers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To summarize there are three motivations behind these projects. To make
Python:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;easier to embed in other environments (browser, microcontrollers)&lt;/li&gt;
&lt;li&gt;integrated with other languages&lt;/li&gt;
&lt;li&gt;improve performance (removing GIL, adding JIT, faster eval)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There were some discussion on reducing &lt;a class="m-footnote" href="#id5" id="id1"&gt;1&lt;/a&gt;, reusing &lt;a class="m-footnote" href="#id6" id="id2"&gt;2&lt;/a&gt;,
reorganising &lt;a class="m-footnote" href="#id7" id="id3"&gt;3&lt;/a&gt;, the standard libraries and even rewriting the
standard library as pure-Python modules &lt;a class="m-footnote" href="#id8" id="id4"&gt;4&lt;/a&gt;. It is nice that such
conversations are happenning as they can move the code base and sister
projects forward by getting rid of baggage, not doing wheel reinventing
and not breaking compatibility.&lt;/p&gt;
&lt;p&gt;If there is anything I would like to see, it is more it is…&lt;/p&gt;
&lt;section id="performance"&gt;
&lt;h2&gt;Performance!&lt;/h2&gt;
&lt;p&gt;Note that it is possible to get really good performance with CPython by
writing extensions using Pythran, Numba etc. Let’s see if how much
faster can these alternate implementations be, based on a naive
benchmark, loop hundred million times, and do nothing.&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100_000_000&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;and a &lt;a href="https://pymotw.com/2/itertools/"&gt;slightly more efficient
looping&lt;/a&gt;&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;itertools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;repeat&lt;/span&gt;

&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100_000_000&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;&lt;/pre&gt;
&lt;section id="cpython"&gt;
&lt;h3&gt;CPython&lt;/h3&gt;
&lt;pre class="m-code"&gt;%%bash
&lt;span class="nb"&gt;time&lt;/span&gt; python -c &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;N = 100_000_000&lt;/span&gt;
&lt;span class="s1"&gt;for i in range(N):&lt;/span&gt;
&lt;span class="s1"&gt;    pass&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;real        0m3.232s
user        0m3.231s
sys 0m0.000s&lt;/pre&gt;
&lt;pre class="m-code"&gt;%%bash
&lt;span class="nb"&gt;time&lt;/span&gt; python -c &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;from itertools import repeat&lt;/span&gt;

&lt;span class="s1"&gt;N = 100_000_000&lt;/span&gt;
&lt;span class="s1"&gt;for _ in repeat(None, N):&lt;/span&gt;
&lt;span class="s1"&gt;    pass&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;real        0m2.233s
user        0m2.233s
sys 0m0.000s&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="pypy"&gt;
&lt;h3&gt;PyPy&lt;/h3&gt;
&lt;pre class="m-code"&gt;%%bash
&lt;span class="nb"&gt;time&lt;/span&gt; pypy3 -c &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;N = 100_000_000&lt;/span&gt;
&lt;span class="s1"&gt;for i in range(N):&lt;/span&gt;
&lt;span class="s1"&gt;    pass&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;real        0m0.433s
user        0m0.183s
sys 0m0.020s&lt;/pre&gt;
&lt;pre class="m-code"&gt;%%bash
&lt;span class="nb"&gt;time&lt;/span&gt; pypy3 -c &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;from itertools import repeat&lt;/span&gt;

&lt;span class="s1"&gt;N = 100_000_000&lt;/span&gt;
&lt;span class="s1"&gt;for _ in repeat(None, N):&lt;/span&gt;
&lt;span class="s1"&gt;    pass&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;real        0m0.255s
user        0m0.209s
sys 0m0.021s&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="rustpython"&gt;
&lt;h3&gt;RustPython&lt;/h3&gt;
&lt;pre class="m-code"&gt;%%bash
&lt;span class="nb"&gt;time&lt;/span&gt; rustpython -c &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;N = 1000000&lt;/span&gt;
&lt;span class="s1"&gt;for i in range(N):&lt;/span&gt;
&lt;span class="s1"&gt;    pass&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;real        0m3.308s
user        0m3.297s
sys 0m0.010s&lt;/pre&gt;
&lt;pre class="m-code"&gt;%%bash
&lt;span class="nb"&gt;time&lt;/span&gt; rustpython -c &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;from itertools import repeat&lt;/span&gt;

&lt;span class="s1"&gt;N = 1000000&lt;/span&gt;
&lt;span class="s1"&gt;for _ in repeat(None, N):&lt;/span&gt;
&lt;span class="s1"&gt;    pass&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;real        0m12.876s
user        0m12.865s
sys 0m0.010s&lt;/pre&gt;
&lt;p&gt;RustPython is surpisingly slow at the moment, so we don’t do 100 million
iterations and only a million instead.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="graalpython"&gt;
&lt;h3&gt;GraalPython&lt;/h3&gt;
&lt;pre class="m-code"&gt;%%bash
&lt;span class="nb"&gt;time&lt;/span&gt; graalpython -c &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;N = 100_000_000&lt;/span&gt;
&lt;span class="s1"&gt;for i in range(N):&lt;/span&gt;
&lt;span class="s1"&gt;    pass&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;Please note: This Python implementation is in the very early stages, and can run little more than basic benchmarks at this point.

real        0m6.894s
user        0m6.829s
sys 0m0.190s&lt;/pre&gt;
&lt;pre class="m-code"&gt;%%bash
&lt;span class="nb"&gt;time&lt;/span&gt; graalpython -c &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;from itertools import repeat&lt;/span&gt;

&lt;span class="s1"&gt;N = 100_000_000&lt;/span&gt;
&lt;span class="s1"&gt;for _ in repeat(None, N):&lt;/span&gt;
&lt;span class="s1"&gt;    pass&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;Please note: This Python implementation is in the very early stages, and can run little more than basic benchmarks at this point.

real        0m5.960s
user        0m5.909s
sys 0m0.200s&lt;/pre&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="final-comments"&gt;
&lt;h2&gt;Final comments&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;And the winners are…&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;PyPy&lt;/li&gt;
&lt;li&gt;CPython&lt;/li&gt;
&lt;li&gt;GraalPython&lt;/li&gt;
&lt;li&gt;RustPython&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I would love to use PyPy as my daily driver, but the only reason I
couldn’t do it is because I almost never manage to get packages like
numpy working. Although &lt;a href="http://packages.pypy.org/"&gt;PyPy claims
otherwise&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Some eyecandy…&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is also interesting how the prompt looks :)&lt;/p&gt;
&lt;pre class="m-code"&gt;!python&lt;/pre&gt;
&lt;pre&gt;Python 3.7.4 (default, Jul 16 2019, 07:12:58)
[GCC 9.1.0] on linux
Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.
&amp;gt;&amp;gt;&amp;gt;
Traceback (most recent call last):
  File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt;
KeyboardInterrupt
&amp;gt;&amp;gt;&amp;gt;&lt;/pre&gt;
&lt;pre class="m-code"&gt;!pypy3&lt;/pre&gt;
&lt;pre&gt;Python 3.6.1 (784b254d669919c872a505b807db8462b6140973, May 09 2019, 13:17:30)
[PyPy 7.1.1-beta0 with GCC 8.3.0] on linux
Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.
Jedi is not installed, falling back to readline
And now for something completely different: ''PyPy is an exciting technology
that lets you to write fast, portable, multi-platform interpreters with less
effort''
&amp;gt;&amp;gt;&amp;gt;&amp;gt;
KeyboardInterrupt
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/pre&gt;
&lt;pre class="m-code"&gt;!rustpython&lt;/pre&gt;
&lt;pre&gt;Welcome to the magnificent Rust Python 0.1.0 interpreter 😱 🖖
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/pre&gt;
&lt;pre class="m-code"&gt;!graalpython&lt;/pre&gt;
&lt;pre&gt;Python 3.7.3 (Sat Jul 13 09:46:34 UTC 2019)
[GraalVM CE, Java 1.8.0_222] on linux
Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.
Please note: This Python implementation is in the very early stages, and can run little more than basic benchmarks at this point.
&amp;gt;&amp;gt;&amp;gt;
&amp;gt;&amp;gt;&amp;gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="versions"&gt;
&lt;h2&gt;Versions&lt;/h2&gt;
&lt;p&gt;I have used the latest and greatest releases. For future reference:&lt;/p&gt;
&lt;pre class="m-code"&gt;%%bash
python -V
pypy3 -V
rustpython -V
graalpython -V&lt;/pre&gt;
&lt;pre&gt;Python 3.7.4
Python 3.6.1 (784b254d669919c872a505b807db8462b6140973, May 09 2019, 13:17:30)
[PyPy 7.1.1-beta0 with GCC 8.3.0]
RustPython 0.1.0
Python 3.7.3 (GraalVM CE Native 19.1.1)&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;You
can&lt;/em&gt; &lt;a href="https://raw.githubusercontent.com/ashwinvis/ashwinvis.github.io/develop/content/python_interpreters.ipynb"&gt;download&lt;/a&gt; &lt;em&gt;this
notebook, or see a static view&lt;/em&gt; &lt;a href="https://nbviewer.jupyter.org/github/ashwinvis/ashwinvis.github.io/blob/develop/content/python_interpreters.ipynb"&gt;on
nbviewer&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;dl class="m-footnote"&gt;
&lt;dt id="id5"&gt;1&lt;/a&gt;.&lt;/dt&gt;
&lt;dd&gt;&lt;span class="m-footnote"&gt;&lt;a href="#id1"&gt;^&lt;/a&gt;&lt;/span&gt; &lt;a href="https://www.python.org/dev/peps/pep-0594/"&gt;https://www.python.org/dev/peps/pep-0594/&lt;/a&gt;&lt;/dd&gt;
&lt;dt id="id6"&gt;2&lt;/a&gt;.&lt;/dt&gt;
&lt;dd&gt;&lt;span class="m-footnote"&gt;&lt;a href="#id2"&gt;^&lt;/a&gt;&lt;/span&gt; &lt;a href="https://discuss.python.org/t/re-use-of-standard-library-across-implementations/2051"&gt;https://discuss.python.org/t/re-use-of-standard-library-across-implementations/2051&lt;/a&gt;&lt;/dd&gt;
&lt;dt id="id7"&gt;3&lt;/a&gt;.&lt;/dt&gt;
&lt;dd&gt;&lt;span class="m-footnote"&gt;&lt;a href="#id3"&gt;^&lt;/a&gt;&lt;/span&gt; &lt;a href="https://doughellmann.com/blog/2019/06/29/dependencies-between-python-standard-library-modules/"&gt;https://doughellmann.com/blog/2019/06/29/dependencies-between-python-standard-library-modules/&lt;/a&gt;&lt;/dd&gt;
&lt;dt id="id8"&gt;4&lt;/a&gt;.&lt;/dt&gt;
&lt;dd&gt;&lt;span class="m-footnote"&gt;&lt;a href="#id4"&gt;^&lt;/a&gt;&lt;/span&gt; &lt;a href="https://github.com/beeware/ouroboros"&gt;https://github.com/beeware/ouroboros&lt;/a&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;/section&gt;
</content><category term="Tech Talk"></category><category term="python"></category><category term="pypy"></category><category term="rust"></category><category term="java"></category><category term="csharp"></category></entry><entry><title>REPL for your data</title><link href="https://ashwinvis.github.io/repl-for-your-data.html" rel="alternate"></link><published>2019-07-28T00:00:00+02:00</published><updated>2019-07-28T00:00:00+02:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2019-07-28:/repl-for-your-data.html</id><summary type="html">&lt;p&gt;Use ethical solutions. Archive your data. REPL.&lt;/p&gt;</summary><content type="html">&lt;p&gt;So we have heard this time and time again.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Data is the new oil.&lt;/li&gt;
&lt;li&gt;Surveillance capitalism.&lt;/li&gt;
&lt;li&gt;The most profitable companies on the entire planet rely on your data&lt;sup id="fnref:data"&gt;&lt;a class="footnote-ref" href="#fn:data"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;and so on. I believe the agenda for all these companies is to use data to power
their AI research. And our privacy is just a casualty in this process.  Despite
all this news and "shocking" revelations that we hear almost every day in the
news, many tend to stick around and use them, including me&lt;sup id="fnref:contra"&gt;&lt;a class="footnote-ref" href="#fn:contra"&gt;2&lt;/a&gt;&lt;/sup&gt;.  There are
solutions however. And it gets better - what I described below require almost
zero investment (except for your attention and time, of course).&lt;/p&gt;
&lt;h3 id="solutions-that-do-not-require-deep-technical-knowledge"&gt;&lt;a class="toclink" href="#solutions-that-do-not-require-deep-technical-knowledge"&gt;Solutions that do not require deep technical knowledge&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Jump ship to the new wave of &lt;a href="https://fediverse.party"&gt;decentralized social
   networks, which are collectively called
   Fediverse&lt;/a&gt;&lt;sup id="fnref:mast"&gt;&lt;a class="footnote-ref" href="#fn:mast"&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;li&gt;Start using zero-knowledge and FOSS software services for example
   collaborative document editing&lt;sup id="fnref:docs"&gt;&lt;a class="footnote-ref" href="#fn:docs"&gt;4&lt;/a&gt;&lt;/sup&gt; and emails&lt;sup id="fnref:email"&gt;&lt;a class="footnote-ref" href="#fn:email"&gt;5&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;li&gt;Prefer end-to-end encrypted chat applications which cannot be
   compromised&lt;sup id="fnref:chat"&gt;&lt;a class="footnote-ref" href="#fn:chat"&gt;6&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="solutions-that-need-you-to-be-a-power-user"&gt;&lt;a class="toclink" href="#solutions-that-need-you-to-be-a-power-user"&gt;Solutions that need you to be a power user&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you are tech-savvy enough, you can start using OpenPGP with email using
&lt;a href="https://emailselfdefense.fsf.org/en/"&gt;Enigmail&lt;/a&gt;. And for services you can
also consider self-hosting it&lt;sup id="fnref:host"&gt;&lt;a class="footnote-ref" href="#fn:host"&gt;7&lt;/a&gt;&lt;/sup&gt; in low-power devices such as a Raspberry
Pi. You can even get a URL to point to your server at absolutely no charge&lt;sup id="fnref:dns"&gt;&lt;a class="footnote-ref" href="#fn:dns"&gt;8&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;h3 id="repl-read-evaluate-print-and-loop"&gt;&lt;a class="toclink" href="#repl-read-evaluate-print-and-loop"&gt;REPL: Read, evaluate, print and loop&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop"&gt;REPL&lt;/a&gt; is a
jargon for consoles of all sorts: bash, python etc. In this case I apply this
into our social media usage. Read what others post, evaluate your thoughts,
share your thoughts into the platform, keep doing it. What is unique about REPL
consoles is that &lt;strong&gt;data is ephemeral&lt;/strong&gt;. What you type is not meant to last forever.&lt;/p&gt;
&lt;p&gt;Therefore, I have started to cleanse my digital data footprint. I &lt;a href="https://deletefacebook.com"&gt;deleted my
Facebook account&lt;/a&gt; several months ago. Right now I
am deleting all my tweets&lt;sup id="fnref:tweets"&gt;&lt;a class="footnote-ref" href="#fn:tweets"&gt;10&lt;/a&gt;&lt;/sup&gt;. My reasons are more than privacy oriented.
I do not want blood on my hands on a platform that have a proven impact on how
people think, how they vote and do things. And these platforms profit from
selling analytics, and manipulate users using algorithmic timelines and
recommendations. I am therefore progressively transitioning to more ethical
services.&lt;/p&gt;
&lt;p&gt;Unless you are in full control, you have to be always to be cautious while
entrusting some of your data with a third-party service. Even if they are
ethical now. I remember a time not so long ago, when I had a positive
impression about Google and its "Don't be evil" tag line&lt;sup id="fnref:evil"&gt;&lt;a class="footnote-ref" href="#fn:evil"&gt;9&lt;/a&gt;&lt;/sup&gt;. I keep archives
of my Mastodon account&lt;sup id="fnref:archive"&gt;&lt;a class="footnote-ref" href="#fn:archive"&gt;11&lt;/a&gt;&lt;/sup&gt; and will soon add expiration to my posts. I
also have this idea:&lt;/p&gt;
&lt;iframe src="https://mastodon.acc.sunet.se/@ashwinvis/102518259996206758/embed" class="mastodon-embed" style="max-width: 100%; border: 0" width="100%" height="300" allowfullscreen="allowfullscreen"&gt;
&lt;/iframe&gt;

&lt;script src="https://mastodon.acc.sunet.se/embed.js" async="async"&gt;&lt;/script&gt;

&lt;h4 id="appendix-1-mass-tweet-deletion"&gt;&lt;a class="toclink" href="#appendix-1-mass-tweet-deletion"&gt;Appendix 1: Mass tweet deletion&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;So the commands described in the blog post&lt;sup id="fnref2:tweets"&gt;&lt;a class="footnote-ref" href="#fn:tweets"&gt;10&lt;/a&gt;&lt;/sup&gt; seem to work great. Here
is what I did following the instructions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Downloaded an archive from Twitter&lt;/li&gt;
&lt;li&gt;Copy and modify &lt;code&gt;tweet.js&lt;/code&gt; into a proper JSON file.&lt;/li&gt;
&lt;li&gt;Extract the ID of all tweets.&lt;/li&gt;
&lt;li&gt;Sniff out the POST request as a cURL command using Firefox. I also added
   the silent flag &lt;code&gt;-s&lt;/code&gt; for cURL.
   Save it as &lt;code&gt;deletetweet.sh&lt;/code&gt; and make it executable.&lt;/li&gt;
&lt;li&gt;And a personal twist: send delete requests in parallel:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat tweetstodelete.txt &lt;span class="p"&gt;|&lt;/span&gt; parallel -j4 &lt;span class="s2"&gt;&amp;quot;echo &amp;#39;Deleting {}&amp;#39; &amp;amp;&amp;amp; ./deletetweet.sh {}&amp;quot;&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&amp;gt;&amp;gt; delete.log &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
tail -f delete.log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the cURL command looks like:&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -s &lt;span class="s2"&gt;&amp;quot;https://api.twitter.com/1.1/statuses/destroy/&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;.json&amp;quot;&lt;/span&gt; ...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So now I am down from 1400 tweets to 544 tweets. And the difference is almost
correct:&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;❯ wc -l tweetstodelete.txt
&lt;span class="m"&gt;844&lt;/span&gt; tweetstodelete.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In step 3, the following command was used to extract the tweets with no
interaction&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat tweet.json &lt;span class="p"&gt;|&lt;/span&gt; jq &lt;span class="s1"&gt;&amp;#39;.[] | select(.favorite_count == &amp;quot;0&amp;quot;) | select(.retweet_count == &amp;quot;0&amp;quot;) | select(has(&amp;quot;in_reply_to_user_id_str&amp;quot;) | not)  | .id&amp;#39;&lt;/span&gt; -r &amp;gt; tweetstodelete.txt&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To get a list of all the tweets:&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat tweet.json &lt;span class="p"&gt;|&lt;/span&gt; jq &lt;span class="s1"&gt;&amp;#39;.[] | .id&amp;#39;&lt;/span&gt; -r &amp;gt; tweetstodelete.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we need something similar for undoing all the likes on Twitter.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EDIT:&lt;/strong&gt; A short how-to "dislike" all your tweets.&lt;/p&gt;
&lt;p&gt;Get a list of tweets to dislike from your archive in a
similar approach. Take the &lt;code&gt;like.js&lt;/code&gt; file from your archive and make it a
proper JSON file.&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat like.json &lt;span class="p"&gt;|&lt;/span&gt; jq &lt;span class="s1"&gt;&amp;#39;.[] | .like.tweetId&amp;#39;&lt;/span&gt; -r &amp;gt;! tweetstodislike.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The POST request is also similar and contains "destroy". However the tweet ID
should be in the data / payload. Therefore the curl command looks like (note
the &lt;code&gt;$1&lt;/code&gt; where the tweet ID gets substituted):&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
curl -s &lt;span class="s1"&gt;&amp;#39;https://api.twitter.com/1.1/favorites/destroy.json&amp;#39;&lt;/span&gt; ...lots of stuff here...&lt;span class="se"&gt;\&lt;/span&gt;
  --data&lt;span class="s2"&gt;&amp;quot;id=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;cards_platform=Web-13&amp;amp; ...even more stuff...&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Save the command in a file called &lt;code&gt;disliketweet.sh&lt;/code&gt; and then,&lt;/p&gt;
&lt;div class="m-code"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat tweetstodislike.txt &lt;span class="p"&gt;|&lt;/span&gt; parallel -j4 &lt;span class="s2"&gt;&amp;quot;echo &amp;#39;Disliking {}&amp;#39; &amp;amp;&amp;amp; ./disliketweet.sh {}&amp;quot;&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&amp;gt;&amp;gt; dislike.log &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
tail -f dislike.log
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="appendix-2-unstar-github-repositories"&gt;&lt;a class="toclink" href="#appendix-2-unstar-github-repositories"&gt;Appendix 2: Unstar GitHub repositories&lt;/a&gt;&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Used &lt;a href="https://kirtan403.github.io/bookmark-github-stars/"&gt;bookmark-github-stars&lt;/a&gt;
   to export all my GitHub stars as html and imported into
   &lt;a href="https://zotero.org"&gt;Zotero&lt;/a&gt; (you can also import into your browser). I did so
   because because Zotero also retains valuable metadata (programming language,
   license, description etc.).&lt;/li&gt;
&lt;li&gt;As &lt;a href="https://github.com/zotero/zotero/issues/1515"&gt;Zotero does not automatically fetch metadata in its initial
   import&lt;/a&gt;, I wrote a &lt;a href="https://source.coderefinery.org/ashwinvis/zotero-tools"&gt;few
   scripts&lt;/a&gt; which
   relies on &lt;a href="https://pyzotero.readthedocs.org/en/latest/"&gt;pyzotero&lt;/a&gt;. The
   documentation is minimal, but you can reuse them if you want.&lt;/li&gt;
&lt;li&gt;Finally I run &lt;a href="https://gist.github.com/ashwinvis/b7c749a652471ddfd12546abe2d58b75"&gt;this
   script&lt;/a&gt;
   which relies on &lt;a href="https://pygithub.readthedocs.io/en/latest/"&gt;pygithub&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;script src="https://gist.github.com/ashwinvis/b7c749a652471ddfd12546abe2d58b75.js"&gt;&lt;/script&gt;

&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:data"&gt;
&lt;p&gt;Also known as &lt;a href="https://en.m.wikipedia.org/wiki/Big_Four_tech_companies"&gt;GAFAM, the big four /
  five&lt;/a&gt;. &lt;a href="https://framatube.org/videos/watch/31225e78-5f41-41dc-bfca-5e63b34e7be4"&gt;Framasoft
  gave an excellent talk about it FOSDEM
  2017&lt;/a&gt;
  if you don't mind the French accent.&amp;#160;&lt;a class="footnote-backref" href="#fnref:data" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:contra"&gt;
&lt;p&gt;Including me. Even this very blog post is right now on GitHub pages,
  and this would seem like a contradiction. In my defence, I started blogging
  here before the acquisition.  As much as I don't like MS products, GitHub
  doesn't look like the worst place in the world and blogs are not private
  places.&amp;#160;&lt;a class="footnote-backref" href="#fnref:contra" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:mast"&gt;
&lt;p&gt;Such as &lt;a href="https://joinmastodon.org"&gt;Mastodon&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:mast" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:docs"&gt;
&lt;p&gt;Good alternatives are &lt;a href="https://cryptpad.fr/"&gt;Cryptpad&lt;/a&gt; and
  &lt;a href="https://github.com/ether/etherpad-lite/wiki/Sites-that-run-Etherpad-Lite"&gt;Etherpad&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:docs" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:email"&gt;
&lt;p&gt;&lt;a href="https://www.privacytools.io/providers/email/"&gt;See alternatives&lt;/a&gt; of
  which I use ProtonMail. The only downsides that I think are: for extra data
  allowance and POP3/IMAP access you need a paid account&amp;#160;&lt;a class="footnote-backref" href="#fnref:email" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:chat"&gt;
&lt;p&gt;&lt;a href="https://docs.google.com/spreadsheets/d/1-UlA4-tslROBDS9IqHalWVztqZo7uxlCeKPQ-8uoFOU/htmlview"&gt;Google docs spreadsheet which compares digital communication
  protocols&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:chat" title="Jump back to footnote 6 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:host"&gt;
&lt;p&gt;&lt;a href="https://yunohost.org/"&gt;Why you no host&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:host" title="Jump back to footnote 7 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:dns"&gt;
&lt;p&gt;Using &lt;a href="https://wiki.archlinux.org/index.php/Dynamic_DNS"&gt;Dynamic DNS&lt;/a&gt;
  technology. I use a subdomain name provided at
  &lt;a href="https://freedns.afraid.org"&gt;afraid.org&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:dns" title="Jump back to footnote 8 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:evil"&gt;
&lt;p&gt;Which was removed in
  &lt;a href="https://en.wikipedia.org/wiki/Don%27t_be_evil"&gt;2018&lt;/a&gt; as they no longer
  follow it.&amp;#160;&lt;a class="footnote-backref" href="#fnref:evil" title="Jump back to footnote 9 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:tweets"&gt;
&lt;p&gt;I followed &lt;a href="https://jlelse.blog/posts/mass-delete-tweets/"&gt;@jlelse's tutorial&lt;/a&gt; to delete tweets.&amp;#160;&lt;a class="footnote-backref" href="#fnref:tweets" title="Jump back to footnote 10 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref2:tweets" title="Jump back to footnote 10 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:archive"&gt;
&lt;p&gt;Using &lt;a href="https://github.com/kensanata/mastodon-backup"&gt;mastodon-archive&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:archive" title="Jump back to footnote 11 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:expire"&gt;
&lt;p&gt;This is &lt;a href="https://alexschroeder.ch/wiki/2017-04-27_Record_Keeping"&gt;an interesting
  essay&lt;/a&gt; on why you
  should expire your posts.&amp;#160;&lt;a class="footnote-backref" href="#fnref:expire" title="Jump back to footnote 12 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Tech Talk"></category><category term="social media"></category><category term="privacy"></category><category term="fediverse"></category></entry><entry><title>Feigenbaum constant</title><link href="https://ashwinvis.github.io/feigenbaum-constant.html" rel="alternate"></link><published>2019-07-24T00:00:00+02:00</published><updated>2019-07-24T00:00:00+02:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2019-07-24:/feigenbaum-constant.html</id><summary type="html">&lt;p&gt;Computing Feigenbaum constant&lt;/p&gt;
</summary><content type="html">&lt;p&gt;So I saw this on Stephen Wolfram’s blog where a simple recursive
equation can yield chaotic behaviour and seems to have properties like
Hopf bifurcation. I wanted to check out myself.&lt;/p&gt;
&lt;div class="formula"&gt;
&lt;i&gt;x&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt; + 1&lt;/sub&gt; = &lt;i&gt;a&lt;/i&gt;&lt;i&gt;x&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;(1 − &lt;i&gt;x&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;)
&lt;/div&gt;
&lt;p&gt;Reference:
&lt;a href="https://blog.stephenwolfram.com/2019/07/mitchell-feigenbaum-1944-2019-4-66920160910299067185320382/"&gt;https://blog.stephenwolfram.com/2019/07/mitchell-feigenbaum-1944-2019-4-66920160910299067185320382/&lt;/a&gt;&lt;/p&gt;
&lt;pre class="m-code"&gt;from sympy import *

## I would love to do it like this. Unfortunately I cannot find a nice way to make a recursive
## sequence in sympy. So I went for the pythonic approach. If someone has a better idea let me
## know!

# a, x = symbols(&amp;#39;a x&amp;#39;, real=True)
# i = symbols(&amp;#39;i&amp;#39;, integer=True)
# f, g = symbols(&amp;#39;f g&amp;#39;, cls=Function)
init_printing()&lt;/pre&gt;
&lt;pre class="m-code"&gt;from functools import lru_cache

@lru_cache(maxsize=8)
def f(i, a, x0):
    if i == 0:
        return x0
    else:
        return a * f(i-1, a, x0) * (1 - f(i-1, a, x0))


# sequence(f, (x, 0, 10))&lt;/pre&gt;
&lt;pre class="m-code"&gt;def series(n, a, x0=1/3): return [f(i, a, x0) for i in range(n)]
series(30, 3.2)&lt;/pre&gt;
&lt;div class="formula"&gt;
&lt;span class="displaystyle"&gt;&lt;span class="symbol"&gt;[&lt;/span&gt;&lt;/span&gt;0.3333333333333333,  0.7111111111111111,  0.6573827160493827,  0.720738178204542,  0.6440789013854076,  0.7335720645618368,  0.6254210901002277,  0.7496625605058258,  0.6005395388213597,  0.7676537636274826,  0.5707566810113398,  0.7839791746952305,  0.5419386506861306,  0.7943716786516055,  0.5227050073850749,  0.7983503444468598,  0.5151586302990083,  0.7992646909678656,  0.5134100631677054,  0.7994245446586822,  0.5131038145790108,  0.7994505281391325,  0.5130540198310227,  0.799454696212004,  0.5130460317330444,  0.7994553633792654,  0.5130447530988549,  0.7994554701330878,  0.5130445485035884,  0.79945548721388&lt;span class="symbol"&gt;]&lt;/span&gt;
&lt;/div&gt;
&lt;pre class="m-code"&gt;from statistics import mean

def series_mean(n, a, x0=1/3):
    s = series(n, a, x0)
    return s, mean(s[n//3:])&lt;/pre&gt;
&lt;pre class="m-code"&gt;N = 50
fig, axes = plt.subplots(2, 2, sharex=True, sharey=True)
for a, ax in zip(
    (2, 3.2, 3.4, 3.5),
    axes.ravel()
):
    s, smean = series_mean(N, a)
    ax.plot(s)
    ax.set_title(f&amp;#39;$a = {a}$&amp;#39;)
    ax.hlines(smean, N//3, N, linestyles=&amp;#39;dashed&amp;#39;)&lt;/pre&gt;
&lt;img src="images/feigenbaum_constant_6_0.png" style="width: 547px; height: 434px" /&gt;
&lt;p&gt;In the last subplot we begin to see period doublings.&lt;/p&gt;
&lt;section id="bifurcation-diagram"&gt;
&lt;h2&gt;Bifurcation diagram&lt;/h2&gt;
&lt;p&gt;In the blog the following Wolfram code is used to generate the calculate
the bifurcation. The first 50 values of the series are ignored to avoid
transients and upto 300 values are calculated vfor each value of
&lt;span class="formula"&gt;&lt;i&gt;a&lt;/i&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="n"&gt;ListPlot&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Flatten&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Table&lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;#&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/@&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Drop&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;NestList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Compile&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.01&lt;/span&gt;&lt;span class="p"&gt;}],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Frame&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FrameLabel&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;Before we do that, let us see if it makes any difference if we vary the
initial condition.&lt;/p&gt;
&lt;pre class="m-code"&gt;import numpy as np
N = 300
a_values =  np.linspace(0, 4, 100)
x0_values = np.linspace(0.1, 5, 100)

plt.figure()
for x0 in x0_values:
    smeans = [series_mean(N, a, x0)[1] for a in a_values]
    plt.scatter(a_values, smeans, s=1, c=&amp;quot;r&amp;quot;)
    plt.xlabel(&amp;quot;a&amp;quot;)
    plt.ylabel(&amp;quot;series average&amp;quot;)&lt;/pre&gt;
&lt;pre&gt;/usr/lib/python3.7/site-packages/ipykernel_launcher.py:8: RuntimeWarning: overflow encountered in double_scalars&lt;/pre&gt;
&lt;img src="images/feigenbaum_constant_11_1.png" style="width: 567px; height: 432px" /&gt;
&lt;p&gt;The average value where the series oscillates around does not seem to
depend on the value of &lt;span class="formula"&gt;&lt;i&gt;x&lt;/i&gt;&lt;sub&gt;0&lt;/sub&gt;&lt;/span&gt;. So now instead of plotting the mean,
we can plot the full distribution where of values where the series
oscillates around.&lt;/p&gt;
&lt;pre class="m-code"&gt;import numpy as np
N = 300
a_values =  np.linspace(0, 4, 100)

plt.figure()
for a in a_values:
    s = series(N, a)[50:]
    plt.scatter(a * np.ones_like(s), s, s=1, c=&amp;quot;r&amp;quot;)
    plt.xlabel(&amp;quot;a&amp;quot;)
    plt.ylabel(&amp;quot;series distribution&amp;quot;)&lt;/pre&gt;
&lt;img src="images/feigenbaum_constant_13_0.png" style="width: 567px; height: 432px" /&gt;
&lt;p&gt;There is our multiple Hopf bifurcation :) Let us see what happens for
&lt;span class="formula"&gt;&lt;i&gt;a&lt;/i&gt; &amp;gt; 3.5&lt;/span&gt;.&lt;/p&gt;
&lt;pre class="m-code"&gt;N = 300
fig, axes = plt.subplots(2, 2, sharex=True, sharey=True, figsize=(15, 5))
for a, ax in zip(
    (3.6, 3.7, 3.8, 3.9),
    axes.ravel()
):
    s, smean = series_mean(N, a)
    ax.plot(s)
    ax.set_title(f&amp;#39;$a = {a}$&amp;#39;)
    ax.hlines(smean, N//3, N, linestyles=&amp;#39;dashed&amp;#39;)&lt;/pre&gt;
&lt;img src="images/feigenbaum_constant_15_0.png" style="width: 1214px; height: 450px" /&gt;
&lt;p&gt;Nice! Maybe I will do a follow up to compute the Lyapunov constant.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;You
can&lt;/em&gt;&lt;a href="https://raw.githubusercontent.com/ashwinvis/ashwinvis.github.io/develop/src/content/feigenbaum_constant.ipynb"&gt;download&lt;/a&gt;&lt;em&gt;this
notebook, or see a static view&lt;/em&gt;&lt;a href="https://nbviewer.jupyter.org/github/ashwinvis/ashwinvis.github.io/blob/develop/src/content/feigenbaum_constant.ipynb"&gt;on
nbviewer&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/section&gt;
</content><category term="Tech Talk"></category><category term="python"></category><category term="sympy"></category></entry><entry><title>New article: Shallow water wave turbulence</title><link href="https://ashwinvis.github.io/new-article-shallow-water-wave-turbulence.html" rel="alternate"></link><published>2019-07-17T00:00:00+02:00</published><updated>2019-07-17T00:00:00+02:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2019-07-17:/new-article-shallow-water-wave-turbulence.html</id><summary type="html">&lt;p&gt;Paper about how turbulence in shallow water equations evolves and gives rise to shock waves.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Just today another &lt;a href="https://doi.org/10.1017/jfm.2019.375"&gt;open access
paper&lt;/a&gt; got published. This
paper talks about some how turbulence in shallow water equations evolves
and gives rise to shock waves. There are also some novel statistical
results which might find use in other fields like acoustics.&lt;/p&gt;
&lt;div&gt;
&lt;p&gt;&lt;p&gt;Figure: Shocks becoming stronger and weaker with variations in
Reynolds number and Froude numbers.&lt;/p&gt;
&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;Find more about it in &lt;a href="https://doi.org/10.1017/jfm.2019.375"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;section id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;The dynamics of irrotational shallow water wave turbulence forced in
large scales and dissipated at small scales is investigated. First, we
derive the shallow water analogue of the `four-fifths law’ of
Kolmogorov turbulence for a third order structure function involving
velocity and displacement increments. Using this relation and assuming
that the flow is dominated by shocks we develop a simple model
predicting that the shock amplitude scales as
&lt;span class="formula"&gt;(&lt;i&gt;ϵ&lt;/i&gt;&lt;i&gt;d&lt;/i&gt;)&lt;sup&gt;1 ⁄ 3&lt;/sup&gt;&lt;/span&gt;, where &lt;span class="formula"&gt;&lt;i&gt;ϵ&lt;/i&gt;&lt;/span&gt; is the mean
dissipation rate and &lt;span class="formula"&gt;&lt;i&gt;d&lt;/i&gt;&lt;/span&gt; the mean distance between the shocks, and
that the &lt;span class="formula"&gt;&lt;i&gt;p&lt;/i&gt;&lt;/span&gt;:th order displacement and velocity structure
functions scale as &lt;span class="formula"&gt;(&lt;i&gt;ϵ&lt;/i&gt;&lt;i&gt;d&lt;/i&gt;)&lt;sup&gt;&lt;i&gt;p&lt;/i&gt; ⁄ 3&lt;/sup&gt;&lt;i&gt;r&lt;/i&gt; ⁄ &lt;i&gt;d&lt;/i&gt;&lt;/span&gt;, where &lt;span class="formula"&gt;&lt;i&gt;r&lt;/i&gt;&lt;/span&gt; is
the separation. Then we carry out a series of forced simulations with
resolutions up to &lt;span class="formula"&gt;7680&lt;sup&gt;2&lt;/sup&gt;&lt;/span&gt;, varying the Froude number,
&lt;span class="formula"&gt;&lt;i&gt;F&lt;/i&gt;&lt;sub&gt;&lt;i&gt;f&lt;/i&gt;&lt;/sub&gt; = &lt;i&gt;ϵ&lt;/i&gt;&lt;sup&gt;1 ⁄ 3&lt;/sup&gt; ⁄ &lt;i&gt;ck&lt;/i&gt;&lt;span class="scripts"&gt;&lt;sup class="script"&gt;1 ⁄ 3&lt;/sup&gt;&lt;sub class="script"&gt;&lt;i&gt;f&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;, where &lt;span class="formula"&gt;&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;f&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt; is the
forcing wave number and &lt;span class="formula"&gt;&lt;i&gt;c&lt;/i&gt;&lt;/span&gt; is the wave speed. In all simulations
a stationary state is reached in which there is a constant spectral
energy flux and equipartition between kinetic and potential energy in
the constant flux range. The third order structure function relation is
satisfied with a high degree of accuracy. Mean energy is found to scale
as &lt;span class="formula"&gt;&lt;i&gt;E&lt;/i&gt; ~ &lt;span class="sqrt"&gt;&lt;span class="radical"&gt;√&lt;/span&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="root"&gt;&lt;i&gt;ϵ&lt;/i&gt;&lt;i&gt;c&lt;/i&gt; ⁄ &lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;f&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, and is also dependent on
resolution, indicating that shallow water wave turbulence does not fit
into the paradigm of a Richardson-Kolmogorov cascade. In all simulations
shocks develop, displayed as long thin bands of negative divergence in
flow visualisations. The mean distance between the shocks is found to
scale as &lt;span class="formula"&gt;&lt;i&gt;d&lt;/i&gt; ~ &lt;i&gt;F&lt;/i&gt;&lt;span class="scripts"&gt;&lt;sup class="script"&gt;1 ⁄ 2&lt;/sup&gt;&lt;sub class="script"&gt;&lt;i&gt;f&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt; ⁄ &lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;f&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;. Structure functions of second and
higher order are found to scale in good agreement with the model. We
conclude that in the weak limit, &lt;span class="formula"&gt;&lt;i&gt;F&lt;/i&gt;&lt;sub&gt;&lt;i&gt;f&lt;/i&gt;&lt;/sub&gt; → 0&lt;/span&gt;, shocks will
become denser and weaker and finally disappear for a finite Reynolds
number. On the other hand, for a given &lt;span class="formula"&gt;&lt;i&gt;F&lt;/i&gt;&lt;sub&gt;&lt;i&gt;f&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;, no matter how
small, shocks will prevail if the Reynolds number is sufficiently large.&lt;/p&gt;
&lt;/section&gt;
</content><category term="Blog"></category><category term="fluid-mechanics"></category><category term="open-source"></category><category term="open-access"></category><category term="research"></category><category term="academia"></category></entry><entry><title>A dictionary of horrors</title><link href="https://ashwinvis.github.io/a-dictionary-of-horrors.html" rel="alternate"></link><published>2019-01-31T00:00:00+01:00</published><updated>2019-06-29T00:00:00+02:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2019-01-31:/a-dictionary-of-horrors.html</id><summary type="html"></summary><content type="html">&lt;p&gt;This post demonstrates a strange behaviour encountered while
initializing a dictionary using the &lt;code&gt;dict.fromkeys&lt;/code&gt; method. TLDR: be
careful while passing mutable arguments such as lists.&lt;/p&gt;
&lt;pre class="m-code"&gt;planets = (&amp;quot;Mercury&amp;quot;, &amp;quot;Venus&amp;quot;, &amp;quot;Earth&amp;quot;, &amp;quot;Mars&amp;quot;)

sattelites = dict.fromkeys(planets, value=[])
sattelites&lt;/pre&gt;
&lt;pre&gt;{'Mercury': [], 'Venus': [], 'Earth': [], 'Mars': []}&lt;/pre&gt;
&lt;pre class="m-code"&gt;sattelites[&amp;quot;Earth&amp;quot;].append(&amp;quot;Moon&amp;quot;)&lt;/pre&gt;
&lt;section id="what-you-expect"&gt;
&lt;h2&gt;What you expect&lt;/h2&gt;
&lt;pre class="m-code"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sattelites&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Mercury&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Venus&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Earth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Moon&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Mars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]}&lt;/span&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="what-you-actually-get"&gt;
&lt;h2&gt;What you actually get&lt;/h2&gt;
&lt;pre class="m-code"&gt;sattelites&lt;/pre&gt;
&lt;pre&gt;{'Mercury': ['Moon'], 'Venus': ['Moon'], 'Earth': ['Moon'], 'Mars': ['Moon']}&lt;/pre&gt;
&lt;section id="why"&gt;
&lt;h3&gt;Why?&lt;/h3&gt;
&lt;p&gt;Surely string as keys are valid and hashable, no doubt about that, but
this behaviour is weird.&lt;/p&gt;
&lt;pre class="m-code"&gt;id(sattelites[&amp;quot;Earth&amp;quot;]), id(sattelites[&amp;quot;Mars&amp;quot;])&lt;/pre&gt;
&lt;pre&gt;(139764445576200, 139764445576200)&lt;/pre&gt;
&lt;p&gt;Apparently the same &lt;code&gt;list&lt;/code&gt; instance is assigned to all the dictionary
items which gets mutated. This is also the case if you initialize as
follows.&lt;/p&gt;
&lt;pre class="m-code"&gt;sattelites = dict.fromkeys(planets, list())
id(sattelites[&amp;quot;Earth&amp;quot;]), id(sattelites[&amp;quot;Mars&amp;quot;])&lt;/pre&gt;
&lt;pre&gt;(139764445511368, 139764445511368)&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;id&lt;/code&gt; is still the same across dictionaries!&lt;/p&gt;
&lt;/section&gt;
&lt;section id="the-solution-use-dictionary-comprehensions"&gt;
&lt;h3&gt;The solution: Use dictionary comprehensions&lt;/h3&gt;
&lt;pre class="m-code"&gt;sattelites = {planet: [] for planet in planets}
sattelites&lt;/pre&gt;
&lt;pre&gt;{'Mercury': [], 'Venus': [], 'Earth': [], 'Mars': []}&lt;/pre&gt;
&lt;pre class="m-code"&gt;sattelites[&amp;quot;Earth&amp;quot;].append(&amp;quot;Moon&amp;quot;)
sattelites&lt;/pre&gt;
&lt;pre&gt;{'Mercury': [], 'Venus': [], 'Earth': ['Moon'], 'Mars': []}&lt;/pre&gt;
&lt;pre class="m-code"&gt;id(sattelites[&amp;quot;Earth&amp;quot;]), id(sattelites[&amp;quot;Mars&amp;quot;])&lt;/pre&gt;
&lt;pre&gt;(139764445567048, 139764351351752)&lt;/pre&gt;
&lt;p&gt;Finally the &lt;code&gt;id&lt;/code&gt;s are different :)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;You
can&lt;/em&gt; &lt;a href="https://raw.githubusercontent.com/ashwinvis/ashwinvis.github.io/develop/content/dictionary_of_horrors.ipynb"&gt;download&lt;/a&gt; &lt;em&gt;this
notebook, or see a static view&lt;/em&gt; &lt;a href="https://nbviewer.jupyter.org/github/ashwinvis/ashwinvis.github.io/blob/develop/content/dictionary_of_horrors.ipynb"&gt;on
nbviewer&lt;/a&gt; &lt;em&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content><category term="Tech Talk"></category><category term="python"></category></entry><entry><title>Lightweight classes for scientific computing using “cached_property”</title><link href="https://ashwinvis.github.io/lightweight-classes-for-scientific-computing-using-cached_property.html" rel="alternate"></link><published>2018-12-25T00:00:00+01:00</published><updated>2018-12-26T00:00:00+01:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2018-12-25:/lightweight-classes-for-scientific-computing-using-cached_property.html</id><summary type="html"></summary><content type="html">&lt;p&gt;In the quest for optimization and fast computation, while using
object-oriented programming, it is a typical technique to initialize the
linear algebra array operators as class attributes. Especially in
&lt;code&gt;fluidfft&lt;/code&gt; we encounter pseudospectral operator classes that look
like:&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fluiddyn.util&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;mpi&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Operator&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KX&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;meshgrid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ky_loc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kx_loc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KX2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KX&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KY2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KY&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KX2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KY2&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K2&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K8&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K4&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K_not0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K2_not0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K4_not0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;mpi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rank&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_sequential&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K_not0&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;10.0e-10&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K2_not0&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;10.0e-10&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K4_not0&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;10.0e-10&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;As you can see, for the purpose of fast computation, we store modified
versions of the wavenumber arrays that are used repeatedly later on,
during simulation. These arrays may not be required while instantiating
the same class for post-processing, and could result in unnecessary
delays while loading large simulations.&lt;/p&gt;
&lt;p&gt;For demonstrating using a simple example, we can create a class which
automatically stores the operator arrays to compute the &lt;strong&gt;derivatives
using finite difference schemes&lt;/strong&gt;. Specifically we consider a &lt;em&gt;compact
finite difference scheme&lt;/em&gt;, named OUCS3 (Sengupta, T.K., Sircar, S.K. &amp;amp;
Dipankar, A., &lt;a href="https://doi.org/10.1007/s10915-005-4928-3"&gt;J Sci Comput (2006) 26:
151&lt;/a&gt;).&lt;/p&gt;
&lt;section id="short-primer-on-explicit-and-compact-finite-difference-schemes"&gt;
&lt;h2&gt;Short primer on explicit and compact finite difference schemes&lt;/h2&gt;
&lt;p&gt;Differentiation using explicit finite difference scheme can be
represented as:&lt;/p&gt;
&lt;div class="formula"&gt;
{&lt;i&gt;u&lt;/i&gt;’} = &lt;b&gt;A&lt;/b&gt;{&lt;i&gt;u&lt;/i&gt;}
&lt;/div&gt;
&lt;p&gt;Where &lt;span class="formula"&gt;&lt;i&gt;u&lt;/i&gt;&lt;/span&gt; is a known 1-D vector and &lt;span class="formula"&gt;&lt;i&gt;u&lt;/i&gt;’&lt;/span&gt; is the desired
first derivative of &lt;span class="formula"&gt;&lt;i&gt;u&lt;/i&gt;&lt;/span&gt;. For &lt;em&gt;second-order central difference&lt;/em&gt;
(&lt;span class="formula"&gt;&lt;i&gt;CD&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt;), the “matrix” &lt;span class="formula"&gt;&lt;b&gt;A&lt;/b&gt;&lt;/span&gt; takes the form of a
tri-diagonal matrix with repeating elements like:&lt;/p&gt;
&lt;div class="formula"&gt;
&lt;b&gt;A&lt;/b&gt; = &lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
1 ⁄ Δ
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
⋯
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 − 1 ⁄ Δ
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
⋱
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
⋱
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
⋮
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
⋱
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
⋱
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
1 ⁄ Δ
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 − 1 ⁄ Δ
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;Such schemes do not require an array representation and can be
substituted with for-loops is compiled languages such as C, Fortran etc.
To implement this particular case in Python, they have to be either:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;represented using sparse matrices to allow for fast dot product,
matrix multiplications etc.&lt;/li&gt;
&lt;li&gt;implemented using compiled functions (Pythran, Cython, Numba etc.) to
allow for fast looping over arrays&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;However irrespective of the programming languages, when we begin to use
higher order schemes such as compact finite difference schemes:&lt;/p&gt;
&lt;p&gt;we end up initializing arrays. Here &lt;span class="formula"&gt;&lt;b&gt;A&lt;/b&gt;&lt;/span&gt; and
&lt;span class="formula"&gt;&lt;b&gt;B&lt;/b&gt;&lt;/span&gt; can be sparse matrices, typically pentadiagonal and
tridiagonal respectively. The resultant operator,
&lt;span class="formula"&gt;&lt;b&gt;C&lt;/b&gt; = &lt;b&gt;B&lt;/b&gt; − 1&lt;b&gt; A&lt;/b&gt;&lt;/span&gt; is quite dense, and thus
in practice it is easier to compute the derivative in two steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Matrix multiplication &lt;span class="formula"&gt;&lt;b&gt;A&lt;/b&gt;{&lt;i&gt;u&lt;/i&gt;} → {&lt;i&gt;d&lt;/i&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Solve &lt;span class="formula"&gt;&lt;b&gt;B&lt;/b&gt;{&lt;i&gt;u&lt;/i&gt;’} = {&lt;i&gt;d&lt;/i&gt;}&lt;/span&gt; iteratively, using TDMA&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;strong&gt;Note&lt;/strong&gt;: Boundary conditions (BC) would mean the matrices would be
slightly different, but we avoid this consideration in this post,
since &lt;code&gt;scipy&lt;/code&gt; does not seem to have special solvers for such
matrices. Ideally one would use a Thomas Diagonal Matrix Algorithm /
TDMA specially designed for problems with periodic BC.&lt;/blockquote&gt;
&lt;/section&gt;
&lt;section id="demo"&gt;
&lt;h2&gt;Demo&lt;/h2&gt;
&lt;p&gt;We will be reusing the following &lt;code&gt;Base&lt;/code&gt; class to store the input
parameters for OUCS3&lt;/p&gt;
&lt;pre class="m-code"&gt;%matplotlib inline
import numpy as np
from scipy.sparse import diags
from scipy.sparse.linalg import inv
import seaborn as sns


class Base:
    def __init__(self, L, N, alpha=0.0):
        &amp;quot;&amp;quot;&amp;quot;Gather input parameters for OUCS3

        Parameters
        ----------
        L: float
            length of the domain
        N: int
            number of points
        alpha: float
            upwind factor, adds numerical dissipation

        &amp;quot;&amp;quot;&amp;quot;
        # Scalar parameters
        self.L = L
        self.N = N

        delta = L / (N - 1)

        a0 = -11 * alpha / 150
        a1 = 1.57557379 / 2.0 + alpha / 30.0
        a2 = 0.183205192 / 4.0 + alpha / 300.0

        b0 = 1.0
        b1 = 0.3793894912 + alpha / 60.0

        # Create pentadiagonal matrix, A
        self.A = diags(
            np.array([-a2, -a1, a0, a1, a2]) / delta,
            [-2, -1, 0, 1, 2,],
            shape=(N, N),
            format=&amp;quot;csc&amp;quot;
        )

        # Create tridiagonal matrix, B
        self.B = diags(
            [b1, b0, b1],
            [-1, 0, 1],
            shape=(N, N),
            format=&amp;quot;csc&amp;quot;
        )

    def diff(self, u):
        Au = self.A @ u
        # inefficient alternative
        return inv(self.B) @ Au

    def plot(self, **fields):
        fields.update({&amp;quot;x&amp;quot;: np.linspace(0, self.L, self.N)})
        for field in fields:
            if field != &amp;quot;x&amp;quot;:
                sns.lineplot(&amp;quot;x&amp;quot;, field, data=fields, label=field)&lt;/pre&gt;
&lt;p&gt;Have a look at how the arrays look like&lt;/p&gt;
&lt;pre class="m-code"&gt;o = Base(4 * np.pi, 6)
print(&amp;quot;\nA = \n&amp;quot;, o.A.toarray())
print(&amp;quot;\nB = \n&amp;quot;, o.B.toarray())&lt;/pre&gt;
&lt;pre&gt;A =
 [[ 0.          0.31345045  0.01822376  0.          0.          0.        ]
 [-0.31345045  0.          0.31345045  0.01822376  0.          0.        ]
 [-0.01822376 -0.31345045  0.          0.31345045  0.01822376  0.        ]
 [ 0.         -0.01822376 -0.31345045  0.          0.31345045  0.01822376]
 [ 0.          0.         -0.01822376 -0.31345045  0.          0.31345045]
 [ 0.          0.          0.         -0.01822376 -0.31345045  0.        ]]

B =
 [[1.         0.37938949 0.         0.         0.         0.        ]
 [0.37938949 1.         0.37938949 0.         0.         0.        ]
 [0.         0.37938949 1.         0.37938949 0.         0.        ]
 [0.         0.         0.37938949 1.         0.37938949 0.        ]
 [0.         0.         0.         0.37938949 1.         0.37938949]
 [0.         0.         0.         0.         0.37938949 1.        ]]&lt;/pre&gt;
&lt;p&gt;We can inherit the class to use an efficient algorithm to solve such
arrays, such as &lt;code&gt;scipy.linalg.solve_toeplitz&lt;/code&gt; which does not accept
sparse arrays as inputs.&lt;/p&gt;
&lt;pre class="m-code"&gt;from scipy.linalg import solve_toeplitz

class OUCS3(Base):
    &amp;quot;&amp;quot;&amp;quot;A class to perform OUCS3 compact scheme finite differentiation.&amp;quot;&amp;quot;&amp;quot;
    def diff(self, u):
        Au = self.A @ u
        B_column = self.B[:,0].toarray()
        B_row = self.B[0,:].toarray()
        return solve_toeplitz((B_column, B_row), Au)&lt;/pre&gt;
&lt;section id="test-that-everything-works"&gt;
&lt;h3&gt;Test that everything works&lt;/h3&gt;
&lt;p&gt;Let’s compare derivatives of a gaussian pulse computed using OUCS3 and
explicit finite difference schemes.&lt;/p&gt;
&lt;pre class="m-code"&gt;from scipy.signal import gausspulse

def init_params_fields(N):
    &amp;quot;&amp;quot;&amp;quot;Initialize parameters and generate a gaussian pulse.&amp;quot;&amp;quot;&amp;quot;
    L = 2 * np.pi
    x = np.linspace(0, L, N)

    u = gausspulse(abs(x - L/2), fc=2)
    return L, N, x, u

L, N, x, u = init_params_fields(100)

oper = OUCS3(L, N)
ux = oper.diff(u)

oper.plot(u=u, ux_OUCS3=ux, ux_explicit=np.gradient(u, x))&lt;/pre&gt;
&lt;img src="images/lightweight_classes_8_0.png" /&gt;
&lt;/section&gt;
&lt;section id="cost-of-instantiation-and-computing-derivatives"&gt;
&lt;h3&gt;Cost of instantiation and computing derivatives&lt;/h3&gt;
&lt;p&gt;Let us have a look at the time consumed in instantiating the class. We
will use&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="formula"&gt;&lt;i&gt;N&lt;/i&gt; = 1000&lt;/span&gt; (typical array size for a well resolved 1D simulation)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We might extend what we observe here to 2D (&lt;span class="formula"&gt;&lt;i&gt;N&lt;/i&gt; = 10002&lt;/span&gt;) and 3D
simulations (&lt;span class="formula"&gt;&lt;i&gt;N&lt;/i&gt; = 1003&lt;/span&gt; to &lt;span class="formula"&gt;&lt;i&gt;N&lt;/i&gt; = 10003&lt;/span&gt;). We shall use the
package &lt;code&gt;line_profiler&lt;/code&gt; to time the time elapsed in each line. The
system has been tuned using &lt;code&gt;perf&lt;/code&gt; package to reduce jitter.&lt;/p&gt;
&lt;pre class="m-code"&gt;%load_ext line_profiler

def profile_OUCS3(N):
    L, N, x, u = init_params_fields(N)
    oper = OUCS3(L, N)  # instantiate
    ux = oper.diff(u)   # compute derivative

%lprun -f profile_OUCS3 -f OUCS3.diff profile_OUCS3(1_000)&lt;/pre&gt;
&lt;pre&gt;Timer unit: 1e-06 s

Total time: 0.01216 s
File: &amp;lt;ipython-input-3-12c24f274ae1&amp;gt;
Function: diff at line 5

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     5                                               def diff(self, u):
     6         1         87.0     87.0      0.7          Au = self.A &amp;#64; u
     7         1       1579.0   1579.0     13.0          B_column = self.B[:,0].toarray()
     8         1       1648.0   1648.0     13.6          B_row = self.B[0,:].toarray()
     9         1       8846.0   8846.0     72.7          return solve_toeplitz((B_column, B_row), Au)

Total time: 0.015373 s
File: &amp;lt;ipython-input-5-3ad1c1c5fdb7&amp;gt;
Function: profile_OUCS3 at line 3

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     3                                           def profile_OUCS3(N):
     4         1        342.0    342.0      2.2      L, N, x, u = init_params_fields(N)
     5         1       2846.0   2846.0     18.5      oper = OUCS3(L, N)  # instantiate
     6         1      12185.0  12185.0     79.3      ux = oper.diff(u)   # compute derivative&lt;/pre&gt;
&lt;p&gt;The instantiation just takes over a millisecond and secondary arrays
&lt;code&gt;B_column&lt;/code&gt; and &lt;code&gt;B_row&lt;/code&gt; takes around a millisecond each, taking a
combined time of around &lt;span class="formula"&gt;20%&lt;/span&gt; of the method &lt;code&gt;diff&lt;/code&gt;. Even at
this scale, we see it can be benificial to store &lt;code&gt;B_column&lt;/code&gt; and
&lt;code&gt;B_array&lt;/code&gt; as attributes.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="howto-create-a-lightweight-class-with-cached-attributes"&gt;
&lt;h2&gt;HOWTO: create a lightweight class with cached attributes&lt;/h2&gt;
&lt;p&gt;Let us begin by inheriting the &lt;code&gt;Base&lt;/code&gt; class wherein the &lt;code&gt;diff&lt;/code&gt;
method uses stored values for &lt;code&gt;B_column&lt;/code&gt; and &lt;code&gt;B_row&lt;/code&gt;.&lt;/p&gt;
&lt;pre class="m-code"&gt;from scipy.linalg import solve_toeplitz

class BaseCached(Base):
    def diff(self, u):
        Au = self.A @ u
        B_column = self._B_column
        B_row = self._B_row
        return solve_toeplitz((B_column, B_row), Au)&lt;/pre&gt;
&lt;section id="first-run"&gt;
&lt;h3&gt;First run&lt;/h3&gt;
&lt;p&gt;If we are not going to rely on a third-party packages, we can do the
following now (with Python 3) with &lt;code&gt;functools.lru_cache&lt;/code&gt;
(&lt;a href="https://docs.python.org/3/library/functools.html?highlight=lru_cache#functools.lru_cache"&gt;docs&lt;/a&gt;).&lt;/p&gt;
&lt;pre class="m-code"&gt;from functools import lru_cache

class OUCS3Native(BaseCached):
    &amp;quot;&amp;quot;&amp;quot;A native implementation of a ``cached_property``.&amp;quot;&amp;quot;&amp;quot;
    @property
    @lru_cache(maxsize=2)
    def _B_column(self):
        return self.B[:,0].toarray()

    @property
    @lru_cache(maxsize=2)
    def _B_row(self):
        return self.B[0,:].toarray()

L, N, x, u = init_params_fields(1_000)
oper_native = OUCS3Native(L, N)

%lprun -f OUCS3Native.diff oper_native.diff(u)&lt;/pre&gt;
&lt;pre&gt;Timer unit: 1e-06 s

Total time: 0.011203 s
File: &amp;lt;ipython-input-6-b2308b39973e&amp;gt;
Function: diff at line 4

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     4                                               def diff(self, u):
     5         1        155.0    155.0      1.4          Au = self.A &amp;#64; u
     6         1       1783.0   1783.0     15.9          B_column = self._B_column
     7         1       1649.0   1649.0     14.7          B_row = self._B_row
     8         1       7616.0   7616.0     68.0          return solve_toeplitz((B_column, B_row), Au)&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="second-run"&gt;
&lt;h3&gt;Second run&lt;/h3&gt;
&lt;pre class="m-code"&gt;%lprun -f OUCS3Native.diff oper_native.diff(u)&lt;/pre&gt;
&lt;pre&gt;Timer unit: 1e-06 s

Total time: 0.006538 s
File: &amp;lt;ipython-input-6-b2308b39973e&amp;gt;
Function: diff at line 4

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     4                                               def diff(self, u):
     5         1        139.0    139.0      2.1          Au = self.A &amp;#64; u
     6         1          3.0      3.0      0.0          B_column = self._B_column
     7         1          1.0      1.0      0.0          B_row = self._B_row
     8         1       6395.0   6395.0     97.8          return solve_toeplitz((B_column, B_row), Au)&lt;/pre&gt;
&lt;p&gt;It is super quick to access &lt;code&gt;_B_column&lt;/code&gt; and &lt;code&gt;_B_row&lt;/code&gt; in the second
run and takes simply microseconds!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="how-does-it-work"&gt;
&lt;h2&gt;How does it work&lt;/h2&gt;
&lt;p&gt;The least recently used cache (LRU) optimizes the function call, caches
the return value, and returns the cache for future calls if the function
parameters were “unchanged”.&lt;/p&gt;
&lt;p&gt;Such an implementation would be protected from simple initialization
attempts such as:&lt;/p&gt;
&lt;pre class="m-code"&gt;oper_native._B_column = 0&lt;/pre&gt;
&lt;pre&gt;---------------------------------------------------------------------------

AttributeError                            Traceback (most recent call last)

&amp;lt;ipython-input-11-6219892dab4c&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 oper_native._B_column = 0


AttributeError: can't set attribute&lt;/pre&gt;
&lt;p&gt;However it is unsafe and can lead to the following unpredictable
behaviours:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Overwriting the original array after first run does not modify the
result:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="m-code"&gt;oper_native.B = np.zeros((N,N))

ux = oper_native.diff(u)
oper_native.plot(ux=ux)&lt;/pre&gt;
&lt;img src="images/lightweight_classes_23_0.png" /&gt;
&lt;ul&gt;
&lt;li&gt;No error is raised when modifying the array in place&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="m-code"&gt;oper_native._B_column[:] = 0&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;code&gt;lru_cache(maxsize=None)&lt;/code&gt; is used it would lead to a potential
memory leak.&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="do-it-better"&gt;
&lt;h2&gt;Do it better&lt;/h2&gt;
&lt;section id="other-third-party-implementations"&gt;
&lt;h3&gt;Other third-party implementations&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;werkzeug.utils.cached_property&lt;/code&gt;
(&lt;a href="http://werkzeug.pocoo.org/docs/0.14/utils/"&gt;docs&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cached_property.cached_property&lt;/code&gt;
(&lt;a href="https://github.com/pydanny/cached-property"&gt;docs&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These would cache the “property” inside &lt;code&gt;__dict__&lt;/code&gt; and not in some
random location in a memory.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="werkzeug"&gt;
&lt;h3&gt;Werkzeug&lt;/h3&gt;
&lt;pre class="m-code"&gt;from werkzeug.utils import cached_property as wcached_property


class OUCS3Werkzeug(BaseCached):
    &amp;quot;&amp;quot;&amp;quot;Werkzeug implementation of a ``cached_property``.

    &amp;quot;&amp;quot;&amp;quot;
    @wcached_property
    def _B_column(self):
        return self.B[:,0].toarray()

    @wcached_property
    def _B_row(self):
        return self.B[0,:].toarray()&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="id1"&gt;
&lt;h3&gt;First run&lt;/h3&gt;
&lt;pre class="m-code"&gt;L, N, x, u = init_params_fields(1_000)
oper_wz = OUCS3Werkzeug(L, N)

%lprun -f OUCS3Werkzeug.diff oper_wz.diff(u)&lt;/pre&gt;
&lt;pre&gt;Timer unit: 1e-06 s

Total time: 0.009176 s
File: &amp;lt;ipython-input-6-b2308b39973e&amp;gt;
Function: diff at line 4

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     4                                               def diff(self, u):
     5         1        124.0    124.0      1.4          Au = self.A &amp;#64; u
     6         1        914.0    914.0     10.0          B_column = self._B_column
     7         1        887.0    887.0      9.7          B_row = self._B_row
     8         1       7251.0   7251.0     79.0          return solve_toeplitz((B_column, B_row), Au)&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="id2"&gt;
&lt;h3&gt;Second run&lt;/h3&gt;
&lt;pre class="m-code"&gt;%lprun -f OUCS3Werkzeug.diff oper_wz.diff(u)&lt;/pre&gt;
&lt;pre&gt;Timer unit: 1e-06 s

Total time: 0.010082 s
File: &amp;lt;ipython-input-6-b2308b39973e&amp;gt;
Function: diff at line 4

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     4                                               def diff(self, u):
     5         1        508.0    508.0      5.0          Au = self.A &amp;#64; u
     6         1         11.0     11.0      0.1          B_column = self._B_column
     7         1          4.0      4.0      0.0          B_row = self._B_row
     8         1       9559.0   9559.0     94.8          return solve_toeplitz((B_column, B_row), Au)&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="cached-property"&gt;
&lt;h3&gt;cached_property&lt;/h3&gt;
&lt;pre class="m-code"&gt;from cached_property import cached_property as ccached_property


class OUCS3CachedProperty(BaseCached):
    &amp;quot;&amp;quot;&amp;quot;Werkzeug implementation of a ``cached_property``.

    &amp;quot;&amp;quot;&amp;quot;
    @ccached_property
    def _B_column(self):
        return self.B[:,0].toarray()

    @ccached_property
    def _B_row(self):
        return self.B[0,:].toarray()&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="id3"&gt;
&lt;h3&gt;First run&lt;/h3&gt;
&lt;pre class="m-code"&gt;L, N, x, u = init_params_fields(1_000)
oper_cp = OUCS3CachedProperty(L, N)

%lprun -f OUCS3CachedProperty.diff oper_cp.diff(u)&lt;/pre&gt;
&lt;pre&gt;Timer unit: 1e-06 s

Total time: 0.010591 s
File: &amp;lt;ipython-input-6-b2308b39973e&amp;gt;
Function: diff at line 4

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     4                                               def diff(self, u):
     5         1        149.0    149.0      1.4          Au = self.A &amp;#64; u
     6         1       1105.0   1105.0     10.4          B_column = self._B_column
     7         1       1935.0   1935.0     18.3          B_row = self._B_row
     8         1       7402.0   7402.0     69.9          return solve_toeplitz((B_column, B_row), Au)&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="id4"&gt;
&lt;h3&gt;Second run&lt;/h3&gt;
&lt;pre class="m-code"&gt;%lprun -f OUCS3CachedProperty.diff oper_cp.diff(u)&lt;/pre&gt;
&lt;pre&gt;Timer unit: 1e-06 s

Total time: 0.006916 s
File: &amp;lt;ipython-input-6-b2308b39973e&amp;gt;
Function: diff at line 4

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     4                                               def diff(self, u):
     5         1        141.0    141.0      2.0          Au = self.A &amp;#64; u
     6         1          3.0      3.0      0.0          B_column = self._B_column
     7         1          1.0      1.0      0.0          B_row = self._B_row
     8         1       6771.0   6771.0     97.9          return solve_toeplitz((B_column, B_row), Au)&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="differences-from-the-native-implementation"&gt;
&lt;h3&gt;Differences from the native implementation&lt;/h3&gt;
&lt;p&gt;Overwriting cached property is OK as follows&lt;/p&gt;
&lt;pre class="m-code"&gt;oper_wz._B_column = 0
oper_cp._B_column = 0&lt;/pre&gt;
&lt;p&gt;An advantage of such implementation is there is no need to add a
&lt;code&gt;maxsize&lt;/code&gt; parameter, and thus no risk of having a memory leak.&lt;/p&gt;
&lt;p&gt;The rest of the “caveats” mentioned before still persist in the
third-party implementation. I am not sure if it would be possible to
raise an &lt;code&gt;AttributeError&lt;/code&gt; when attempts are made to alter cached
property. But this depends on the application, so the caveat can be a
feature.&lt;/p&gt;
&lt;p&gt;When Python 3.8 becomes available we would have access to a &lt;a href="https://docs.python.org/3.8/library/functools.html?highlight=cached_property#functools.cached_property"&gt;native
implementation&lt;/a&gt;
and we would be able to do:&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cached_property&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OUCS3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseCached&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;A class to perform OUCS3 compact scheme finite differentiation.&lt;/span&gt;
&lt;span class="sd"&gt;    A Python 3.8 implementation of a ``cached_property``.&lt;/span&gt;

&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="nd"&gt;@cached_property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_B_column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toarray&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nd"&gt;@cached_property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_B_row&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,:]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toarray&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;Exciting times ahead.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post was written entirely in the Jupyter notebook. You
can&lt;/em&gt; &lt;a href="https://raw.githubusercontent.com/ashwinvis/ashwinvis.github.io/develop/content/lightweight_classes.ipynb"&gt;download&lt;/a&gt; &lt;em&gt;this
notebook, or see a static view&lt;/em&gt; &lt;a href="https://nbviewer.jupyter.org/github/ashwinvis/ashwinvis.github.io/blob/develop/content/lightweight_classes.ipynb"&gt;on
nbviewer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; We have begun to use &lt;code&gt;cached_property&lt;/code&gt; in
&lt;a href="https://fluidsht.readthedocs.io/en/latest/_modules/fluidsht/sht2d/operators.html#OperatorsSphereHarmo2D"&gt;FluidSHT&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content><category term="Tech Talk"></category><category term="fluidfft"></category><category term="fluidsim"></category><category term="optimization"></category></entry><entry><title>Intensely edgy cat with FluidFFT</title><link href="https://ashwinvis.github.io/intensely-edgy-cat-with-fluidfft.html" rel="alternate"></link><published>2018-08-16T00:00:00+02:00</published><updated>2018-08-16T00:00:00+02:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2018-08-16:/intensely-edgy-cat-with-fluidfft.html</id><summary type="html"></summary><content type="html">&lt;p&gt;&lt;em&gt;This is a reimplementaion of&lt;/em&gt;&lt;a href="https://github.com/egpbos/xtensor-fftw/blob/master/notebooks/intensely_edgy_cat.ipynb"&gt;Patrick Bos’s
notebook&lt;/a&gt;&lt;em&gt;which
showcases&lt;/em&gt;&lt;a href="https://github.com/egpbos/xtensor-fftw/"&gt;xtensor-fftw&lt;/a&gt;&lt;em&gt;.
Here, we
use&lt;/em&gt;&lt;a href="https://fluidfft.readthedocs.io"&gt;fluidfft&lt;/a&gt;&lt;em&gt;instead.&lt;/em&gt;&lt;/p&gt;
&lt;section id="setup"&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;pre class="m-code"&gt;import fluidfft     # fft, ifft and other operators

import numpy as np  # numpy arrays!

# for displaying images
from PIL import Image
import urllib
import io
import matplotlib.pyplot as plt&lt;/pre&gt;
&lt;pre class="m-code"&gt;# We go one step further and directly load from the internet
%matplotlib inline

def load_image(url):
    fd = urllib.request.urlopen(url)
    image_file = io.BytesIO(fd.read())
    im = Image.open(image_file)
    im = np.array(im, dtype=np.float64)  # Convert the PIL.PngImagePlugin.PngImageFile object to a numpy array
    return im

def display(im):
    plt.imshow(im, cmap=&amp;quot;gist_gray&amp;quot;)
    plt.axis(&amp;#39;off&amp;#39;)&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="intense-cat"&gt;
&lt;h2&gt;Intense cat&lt;/h2&gt;
&lt;p&gt;Let’s perform some Fourier space operations on &lt;a href="https://commons.wikimedia.org/wiki/File:Intensity_image_with_gradient_images.png"&gt;this public domain,
intense
kitty&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="m-code"&gt;image = load_image(&amp;quot;https://upload.wikimedia.org/wikipedia/commons/6/67/Intensity_image_with_gradient_images.png&amp;quot;)
display(image)&lt;/pre&gt;
&lt;img src="images/intensely_edgy_cat_7_0.png" /&gt;
&lt;pre class="m-code"&gt;image = image[5:-5, 5:205]  # Crop to the first frame and trim the frame edges
display(image)&lt;/pre&gt;
&lt;img src="images/intensely_edgy_cat_8_0.png" /&gt;
&lt;/section&gt;
&lt;section id="edge-detection-on-intensity-image"&gt;
&lt;h2&gt;Edge detection on intensity image&lt;/h2&gt;
&lt;p&gt;Unlike in the original notebook wherein,&lt;/p&gt;
&lt;blockquote&gt;
We’re going to use FFT to do some simple edge detection. To simplify,
we do this on the black and white “intensity” image. In this case,
the kitty is already black and white, but in fact it’s still encoded
in three RGB channels in the PNG file. Combining these, in general,
could be done as follows …&lt;/blockquote&gt;
&lt;p&gt;we skip it, since PIL was kind enough to do it for us:&lt;/p&gt;
&lt;pre class="m-code"&gt;image.shape&lt;/pre&gt;
&lt;pre&gt;(200, 200)&lt;/pre&gt;
&lt;pre class="m-code"&gt;image_bw = image&lt;/pre&gt;
&lt;p&gt;Next, we transform to Fourier space using &lt;code&gt;fluidfft&lt;/code&gt;’s real FFT
transform. We have to rely on the &lt;code&gt;fft2d.with_pyfftw&lt;/code&gt; backend since
the other Cythonized &lt;code&gt;fft2d.with_fftw2d&lt;/code&gt; implementation assumes a
periodic boundary.&lt;/p&gt;
&lt;pre class="m-code"&gt;# Prepare our FFT object
o = fluidfft.create_fft_object(&amp;quot;fft2d.with_pyfftw&amp;quot;, *image.shape)  # A more powerful option is to use an &amp;quot;Operator&amp;quot; class, demonstrated below&lt;/pre&gt;
&lt;pre class="m-code"&gt;image_fs_bw = o.fft(image_bw)&lt;/pre&gt;
&lt;p&gt;The simplest way to do some edge detection is by calculating the
derivative of the intensity image. The derivative (the rate of change)
is high where a sharp transition from low to high intensity occurs
between two pixels, close to zero when there is little change and highly
negative for high to low transition.&lt;/p&gt;
&lt;p&gt;The derivative of an image can be calculated by multiplying the Fourier
transform of the image by
&lt;span class="formula"&gt;&lt;span class="sqrt"&gt;&lt;span class="radical"&gt;√&lt;/span&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="root"&gt; − 1&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;b&gt; k&lt;/b&gt; = &lt;i&gt;i&lt;/i&gt;&lt;b&gt;k&lt;/b&gt;&lt;/span&gt; and then
transforming the result back to real space. This must be done in each
direction and then the results can be combined to get the magnitude of
the gradient, which is a good multi-directional proxy for both kinds of
edges (intensity transitions form low to high and from high to low).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fluidfft&lt;/code&gt;’s operator classes also supplies these wavenumbers
&lt;span class="formula"&gt;&lt;b&gt;k&lt;/b&gt;&lt;/span&gt;, so you do not need to build them :).&lt;/p&gt;
&lt;pre class="m-code"&gt;from fluidfft.fft2d.operators import OperatorsPseudoSpectral2D

op = OperatorsPseudoSpectral2D(*image.shape, lx=np.pi, ly=np.pi, fft=&amp;quot;fft2d.with_pyfftw&amp;quot;)  # The lengths are arbitary&lt;/pre&gt;
&lt;pre class="m-code"&gt;kx = op.KX
ky = op.KY # N.B.: we use broadcasting to multiply in the right direction&lt;/pre&gt;
&lt;pre class="m-code"&gt;# do both derivatives separately
d_image_dx_fs_bw = 1j * kx * image_fs_bw
d_image_dy_fs_bw = 1j * ky * image_fs_bw&lt;/pre&gt;
&lt;p&gt;An &lt;strong&gt;effortless and efficent&lt;/strong&gt; way to do the gradient calculation was to
use the Pythranized function.&lt;/p&gt;
&lt;pre class="m-code"&gt;d_image_dx_fs_bw, d_image_dy_fs_bw = op.gradfft_from_fft(image_fs_bw)&lt;/pre&gt;
&lt;pre class="m-code"&gt;# transform back to normal space
d_image_dx_bw = op.ifft(d_image_dx_fs_bw)
d_image_dy_bw = op.ifft(d_image_dy_fs_bw)&lt;/pre&gt;
&lt;pre class="m-code"&gt;# and square-sum them in real space to get the gradient magnitude
d_image_grad_bw = np.sqrt(d_image_dx_bw ** 2 + d_image_dy_bw ** 2)&lt;/pre&gt;
&lt;pre class="m-code"&gt;display(d_image_grad_bw)&lt;/pre&gt;
&lt;img src="images/intensely_edgy_cat_24_0.png" /&gt;
&lt;p&gt;To get maximum contrast, rescale so that the maximum is 255 (the maximum
brightness value, i.e. bright white):&lt;/p&gt;
&lt;pre class="m-code"&gt;amax_d_image_grad_bw = d_image_grad_bw.max()&lt;/pre&gt;
&lt;pre class="m-code"&gt;display(d_image_grad_bw / amax_d_image_grad_bw * 255)&lt;/pre&gt;
&lt;img src="images/intensely_edgy_cat_27_0.png" /&gt;
&lt;/section&gt;
&lt;section id="rescaling"&gt;
&lt;h2&gt;Rescaling&lt;/h2&gt;
&lt;p&gt;To inspect the separate horizontal and vertical components, we need to
rescale the range of derivative values so that they all fit into the
[0,255] range of the RGB space. We subtract the minimum to set negative
values to zero and then divide by (max-min) and multiply by 255 to set
the maximum to 255 (and scale all intermediate values accordingly).&lt;/p&gt;
&lt;p&gt;We can then also sum the both components to get a slightly different
perspective on the above “absolute” multi-directional edge detector.&lt;/p&gt;
&lt;pre class="m-code"&gt;d_image_dx_bw_rescale = 255 * (d_image_dx_bw - d_image_dx_bw.min()) / (d_image_dx_bw.max() - d_image_dx_bw.min())
d_image_dy_bw_rescale = 255 * (d_image_dy_bw - d_image_dy_bw.min()) / (d_image_dy_bw.max() - d_image_dy_bw.min())

d_image_grad_bw_rescale = np.sqrt(d_image_dx_bw_rescale * d_image_dx_bw_rescale + d_image_dy_bw_rescale * d_image_dy_bw_rescale);
d_image_grad_bw_rescale -= d_image_grad_bw_rescale.min()
d_image_grad_bw_rescale /= d_image_grad_bw_rescale.max()
d_image_grad_bw_rescale *= 255&lt;/pre&gt;
&lt;section id="horizontal"&gt;
&lt;h3&gt;Horizontal&lt;/h3&gt;
&lt;pre class="m-code"&gt;display(d_image_dx_bw_rescale)&lt;/pre&gt;
&lt;img src="images/intensely_edgy_cat_31_0.png" /&gt;
&lt;/section&gt;
&lt;section id="vertical"&gt;
&lt;h3&gt;Vertical&lt;/h3&gt;
&lt;pre class="m-code"&gt;display(d_image_dy_bw_rescale)&lt;/pre&gt;
&lt;img src="images/intensely_edgy_cat_33_0.png" /&gt;
&lt;p&gt;The result differs slightly from that in &lt;a href="https://commons.wikimedia.org/wiki/File:Intensity_image_with_gradient_images.png"&gt;the original Wikipedia
image&lt;/a&gt;,
which is because their gradient function is a bit different. Their
matrix gradient method smoothes the image a bit, leading to slightly
less sharp edges, but also less sensitivity to noise in the image.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="combined"&gt;
&lt;h3&gt;Combined&lt;/h3&gt;
&lt;pre class="m-code"&gt;display(d_image_grad_bw_rescale)&lt;/pre&gt;
&lt;img src="images/intensely_edgy_cat_36_0.png" /&gt;
&lt;p&gt;This modified post was written entirely in the Jupyter notebook. You can
&lt;a href="https://raw.githubusercontent.com/ashwinvis/ashwinvis.github.io/develop/content/intensely_edgy_cat.ipynb"&gt;download&lt;/a&gt;
this notebook, or see a static view &lt;a href="https://nbviewer.jupyter.org/github/ashwinvis/ashwinvis.github.io/blob/develop/content/intensely_edgy_cat.ipynb"&gt;on
nbviewer&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content><category term="Tech Talk"></category><category term="fluidfft"></category></entry><entry><title>Why Open-Source?</title><link href="https://ashwinvis.github.io/why-open-source.html" rel="alternate"></link><published>2018-01-06T00:00:00+01:00</published><updated>2018-01-06T00:00:00+01:00</updated><author><name>Ashwin Vishnu Mohanan</name></author><id>tag:ashwinvis.github.io,2018-01-06:/why-open-source.html</id><summary type="html"></summary><content type="html">&lt;p&gt;Most of us who are engaged in development or use of open-source software have
one reason or another to do it. The question of “Why open-source?” is something
we should all reflect upon once, since we should be well prepared to answer the
same question confidently in the future.&lt;/p&gt;
&lt;p&gt;It was inspiring to see sessions dedicated to open-source in AGU 2017, and even
more exciting to hear mentions of Python usage in talks here and there. I really
encourage you to have a look at this informal session titled &lt;a href="https://www.youtube.com/watch?v=0GO4ZZ5Ry6M"&gt;Open-Source
Software in the Geosciences&lt;/a&gt;.
The content of the session applies to all open-source development in sciences in
general, although it was intended to be focussed on geosciences.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://invidious.snopyta.org/embed/0GO4ZZ5Ry6M"
frameborder="0" gesture="media" allow="encrypted-media" allowfullscreen&gt;
&lt;/iframe&gt;
&lt;p&gt;Since the video is rather long, I have summarized the gist of the talk below.
The following questions were asked to the panel.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. What considerations went into the decision of making a software openly
available?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Because there were no alternative (both open or closed) for a specific new
scientific method.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Because it is the right thing to do, since:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Journals require through terms and condition for the author to make
results completely reproducible, a condition rarely enforced.&lt;/li&gt;
&lt;li&gt;Science conducted using the public’s tax money, rightfully belongs to
the public.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;1.1. … decision of not making a software openly available?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Slobbily written open-source code can flood your email inbox with queries in
the future. Counterpoint: bad code is much better than no code at all.&lt;/li&gt;
&lt;li&gt;Current academic setup does not consider software development as a metric for
career advancement.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2. Has making FOSS affected your career?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;With community use, comes fame, and through fame one gets more citations
(caution, in the long term). Documentation and tests are very important to
promote community adoption.&lt;/li&gt;
&lt;li&gt;A novel method implemented in an open source software can make it a lot more
attractive to the community.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2.1. Means to promote your code&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Through talks, social and professional contacts, Github (and similar).&lt;/li&gt;
&lt;li&gt;Should be citeable. i.e. include a BibTeX in the README. Options include
&lt;a href="https://www.earthcube.org/"&gt;Earthcube (to publish workflows)&lt;/a&gt;, &lt;a href="https://openresearchsoftware.metajnl.com"&gt;JORS&lt;/a&gt;, &lt;a href="http://joss.theoj.org/"&gt;JOSS&lt;/a&gt;
(open-access journals dedicated to open-source software).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3. Community impact&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Colleagues inspired to use software, provided if they are open-minded and the
supervisors are encouraging.&lt;/li&gt;
&lt;li&gt;Adoption of the software is typically slow in the first few years, but picks
up gradually - so stay strong!&lt;/li&gt;
&lt;li&gt;Python is popular these days. Why? The possibility to integrate workflow,
including I/O and plotting.&lt;/li&gt;
&lt;li&gt;Could become a benchmark code, for even validating commercial codes!&lt;/li&gt;
&lt;li&gt;Will license pose a barrier for use of the code? A general thumbrule could be
as follows. Intended for industry use or to function as a library: choose GPL
v2, BSD or MIT. Intended only for academic and non-profit applications, and to
ensure pull-requests: choose GPL v3.&lt;/li&gt;
&lt;li&gt;Learning version control (mercurial or git) can be a barrier to start with.&lt;/li&gt;
&lt;li&gt;Grad students go for open-source software just to get the work done. In the
long run however they &lt;strong&gt;may&lt;/strong&gt; contribute back. Encourage them, even if they
don’t fully understand how to keep a consistent code style, and the importance
of comments and documentations. In short, keep the code review process
constructive. It is a good idea to maintain a one page &lt;em&gt;CODE_OF_CONDUCT&lt;/em&gt; text
file.&lt;/li&gt;
&lt;li&gt;Some organisations which are promoting open-science: &lt;a href="https://software-carpentry.org/"&gt;Software Carpentry&lt;/a&gt; and &lt;a href="https://science.mozilla.org/"&gt;Mozilla Science&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4. Has your perception changed through making FOSS?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version control offers sense of security in case your laptop gets stolen or
broken.&lt;/li&gt;
&lt;li&gt;Unittests offer confidence in your results, and ensures less bugs.&lt;/li&gt;
&lt;li&gt;Continuous testing ensures others will not break your unittests, thus existing
functionality.&lt;/li&gt;
&lt;li&gt;Feel-good effect to have become a better scientist? Perhaps.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5. Any regrets?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Poor choice of license in the beginning. Hard to change in the long run.&lt;/li&gt;
&lt;li&gt;Always ask your boss before you release the code.&lt;/li&gt;
&lt;li&gt;Email queries about a piece of code you wrote long back, that you have no idea
about now. No docs!&lt;/li&gt;
&lt;li&gt;Lonely in the absence of community.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;6. Future of FOSS development&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;More professional, disciplined codes.&lt;/li&gt;
&lt;li&gt;Web services - codes deployed as a service opens up the possibility for a
layman to make a simulation even through one’s smart phone. Right now it is
restricted to computationally non-intensive calculations (for eg. Jupyter
notebooks, JupyterHub). An example of this is the &lt;a href="http://turbulence.pha.jhu.edu/webquery/query.aspx"&gt;JHU turbulence database&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Research funds and resources allocated to code development, not just for
buying laboratory apparatus and commercial software.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An inspiring quote to end with:&lt;/p&gt;
&lt;img alt="Quote from the video" class="m-image" src="../images/why-open-source-quote.png" style="width: 75%" /&gt;
</content><category term="Blog"></category><category term="open-source"></category><category term="conference"></category></entry><entry><title>Quote</title><link href="https://ashwinvis.github.io/2015-04-06-tmesis.html" rel="alternate"></link><published>2015-04-06T11:58:33+02:00</published><updated>2015-04-06T11:58:33+02:00</updated><author><name>Ashwin Vishnu</name></author><id>tag:ashwinvis.github.io,2015-04-06:/2015-04-06-tmesis.html</id><summary type="html">&lt;p&gt;Tmesis&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="definition" src="https://beckisbookblog.files.wordpress.com/2015/01/tmesis1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;That is legen-wait-for-the-tmesis-dary!&lt;/p&gt;</content><category term="Tumblr archive"></category><category term="wordporm"></category><category term="til"></category><category term="today i learned"></category><category term="tumblr"></category></entry><entry><title>Quote</title><link href="https://ashwinvis.github.io/2015-03-29-so-many-places-movies-music-books-and-journal.html" rel="alternate"></link><published>2015-03-29T13:15:09+02:00</published><updated>2015-03-29T13:15:09+02:00</updated><author><name>Ashwin Vishnu</name></author><id>tag:ashwinvis.github.io,2015-03-29:/2015-03-29-so-many-places-movies-music-books-and-journal.html</id><summary type="html"></summary><content type="html">&lt;p&gt;So many places, movies, music, books and journal papers. So little time.&lt;/p&gt;
&lt;p&gt;—&lt;/p&gt;
&lt;p&gt;Me&lt;/p&gt;
&lt;p&gt;
I know I can’t cover it in a lifetime.&lt;br /&gt;
&lt;strong&gt;Nirvana is overrated&lt;/strong&gt;. People invented it in the past because there was no internet and they got bored. Why break the circle when there is so much left to explore?&lt;br /&gt;
&lt;/p&gt;
&lt;/p&gt;&lt;/p&gt;</content><category term="Tumblr archive"></category><category term="rant"></category><category term="life"></category><category term="tumblr"></category></entry><entry><title>Random acts of Kindness</title><link href="https://ashwinvis.github.io/2014-12-13-random-acts-of-kindness.html" rel="alternate"></link><published>2014-12-13T10:55:03+01:00</published><updated>2014-12-13T10:55:03+01:00</updated><author><name>Ashwin Vishnu</name></author><id>tag:ashwinvis.github.io,2014-12-13:/2014-12-13-random-acts-of-kindness.html</id><summary type="html"></summary><content type="html">&lt;p&gt;I lost my access card to my lab.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;Damn.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;It could have fallen anywhere in my 45 min. daily commute from my apartment to the university. I changed a bus and then took two metro trains. Practically untraceable. When I came back home, I turned my apartment inside out in vain.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;The next day, I entered my lab with the help of my friend, Nasser. I asked him if losing the access card was a problem and whether I would end up paying a fine. He laughed and said, “No, it is fine. A lot of people lose it all the time.”&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;Getting a replacement access card was a hassle nevertheless.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;I returned to my apartment, not realising I left my key hanging on the keyhole outside as I opened the door. A few minutes later, kind neighbours (who I barely knew, since I was new here), rang the bell, and handed the key to me, with a “be-careful” look.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;An hour later, I went down to go to the supermarket. And hey! There it was…. MY ACCESS CARD! Somebody figured out my address by searching online (In Sweden, all your contact details are public and open to all) and returned it. It was hanging on the notice board at ground floor. There was no message.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;&lt;figure&gt;
&lt;img alt="Lost and found access card!" src="https://78.media.tumblr.com/ea4cf12bdb4fce8e9ed9794d019da07d/tumblr_inline_pfjaz1p6R01t4yejq_540.jpg" /&gt;
&lt;/figure&gt;
&lt;/p&gt;&lt;/p&gt;&lt;p&gt;To the stranger, who had the heart to return my card, thank you!&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;Such random acts of kindness, without expecting gratitude is enough to spread happiness around the world.&lt;/p&gt;
&lt;/p&gt;</content><category term="Tumblr archive"></category><category term="kindness"></category><category term="strangers"></category><category term="tumblr"></category></entry><entry><title>House Nehru</title><link href="https://ashwinvis.github.io/2014-12-05-house-nehru.html" rel="alternate"></link><published>2014-12-05T22:47:05+01:00</published><updated>2014-12-05T22:47:05+01:00</updated><author><name>Ashwin Vishnu</name></author><id>tag:ashwinvis.github.io,2014-12-05:/2014-12-05-house-nehru.html</id><summary type="html"></summary><content type="html">&lt;p&gt;It just occurred to me how similar the Nehru dynasty fits in the world of Westeros, the Game of Thrones world. You might have already guessed by now.&lt;/p&gt;
&lt;p&gt;Yes I am talking about the all so proud House Stark.&lt;/p&gt;
&lt;p&gt;*spoilers alert*&lt;/p&gt;
&lt;p&gt;Rajiv Gandhi (Ned Stark) goes on a foreign trip to the south, Sri Lanka (Casterly Rock), so as to deal with regional politics. He ends up losing his life, unable to return to his home land. Becomes a legend in his nation.&lt;/p&gt;
&lt;p&gt;Sonia Gandhi (Katlyn Stark) pushes her favourite son to lead the country.&lt;/p&gt;
&lt;p&gt;Rahul Gandhi (Robb Stark) thrust into politics at a “tender” age, turns out to be way too emotional and inexperienced to meet the expectations of his bannermen. Loses way too many men in the elections, rendering his campaign against the BJP (Lannisters) a lost cause.&lt;/p&gt;
&lt;p&gt;There may be more like Varun Gandhi (Theon Greyjoy) so on…&lt;/p&gt;
&lt;p&gt;Coincidence?&lt;/p&gt;
&lt;p&gt;Nah!&lt;/p&gt;
&lt;p&gt;Indian National Congress is way too “honest” to be House Stark.&lt;/p&gt;
&lt;p&gt;Winter is coming. Enjoy… Merry Xmas!&lt;/p&gt;
</content><category term="Tumblr archive"></category><category term="game of thrones"></category><category term="congress"></category><category term="indian politics"></category><category term="tumblr"></category></entry><entry><title>Ying-Yang</title><link href="https://ashwinvis.github.io/2014-11-11-ying-yang.html" rel="alternate"></link><published>2014-11-11T00:55:00+01:00</published><updated>2014-11-11T00:55:00+01:00</updated><author><name>Ashwin Vishnu</name></author><id>tag:ashwinvis.github.io,2014-11-11:/2014-11-11-ying-yang.html</id><summary type="html">&lt;p&gt;The never-ending yearning for the other side.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Yes. That is not what it stands for. The Ying-Yang is a symbol to indicate duality and balance in the nature and universe. Light and dark, summer and winter, rich and poor, wealth and penury, and so on…&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="Ying Yang" src="https://78.media.tumblr.com/badacaaac802bcdbcb02a08ea5c17482/tumblr_inline_pfjaz12wYf1t4yejq_540.png" style="width: 300px" /&gt;
&lt;/figure&gt;
&lt;p&gt;Now let me put you in my shoes on how I came up with this perspective. One month ago, I moved to this new place, new city, and a new life in Stockholm. The first month is always hard of course, no matter how much you have travelled, you will be in for surprises (right Jibu?). And this period, I had to live in a guestroom, from where I had to move out in 2 months’ time. This is rather unsettling and made me restless. I just wanted to get settled and be at peace asap.&lt;/p&gt;
&lt;p&gt;But then again, hey, I thought of how it would feel like when things become routine like clockwork… that can be disheartening, as well sooner or later.&lt;/p&gt;
&lt;p&gt;It occurred to me that the Ying-Yang can also describe the world and us. We are always like those small circles in the Ying-Yang, switching sides every now and then. You could be the white circle, surrounded by darkness, looking forward eagerly to turn to light side; and the other way around.&lt;/p&gt;
&lt;p&gt;This has happened to me before too, I enjoyed night life and happening street of cities when I used to be at home. And soon after I started living in one of the big metros (Delhi NCR), I got sick and fed up of the monotony and consumerist culture. Nothing can beat being at home, right? Maybe. (Until you spent 6 straight months or more at home doing absolutely nothing).&lt;/p&gt;
&lt;p&gt;Of course, it is all in our minds. This yearning keeps us pushing forward, ike an unseen force - that is the good news. This feeling is the root of all human ambitions.&lt;/p&gt;
&lt;p&gt;Just remember, even if you find yourself like that tiny white dot covered in pitch black darkness, shine on… because, we all look up to the stars that make the night sky beautiful.&lt;/p&gt;
&lt;figure&gt;
&lt;img src="https://78.media.tumblr.com/5364013a8ce427f819d5a38a542dd7e7/tumblr_inline_pfjaz2lTaD1t4yejq_540.jpg" /&gt;
&lt;/figure&gt;
</content><category term="Tumblr archive"></category><category term="brainwaves"></category><category term="tumblr"></category></entry><entry><title>Quote</title><link href="https://ashwinvis.github.io/2014-11-07-take-happiness-spread-joy-hurt-no-one-and-dont.html" rel="alternate"></link><published>2014-11-07T23:44:00+01:00</published><updated>2014-11-07T23:44:00+01:00</updated><author><name>Ashwin Vishnu</name></author><id>tag:ashwinvis.github.io,2014-11-07:/2014-11-07-take-happiness-spread-joy-hurt-no-one-and-dont.html</id><summary type="html"></summary><content type="html">&lt;p&gt;Take Happiness. Spread Joy. Hurt no one. And don’t give in to sadness.&lt;/p&gt;
&lt;p&gt;—&lt;/p&gt;
&lt;p&gt;Myself.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;May seem like a very impractical, inhumane way to live by. But it is very logical and at the end of the day, you will be happy. With a mind without pain and full of joy, how will you ever hurt others?&lt;/p&gt;
&lt;/p&gt;&lt;/p&gt;</content><category term="Tumblr archive"></category><category term="motto"></category><category term="tumblr"></category></entry><entry><title>A World of Zombie Blogs</title><link href="https://ashwinvis.github.io/2014-11-07-a-world-of-zombie-blogs.html" rel="alternate"></link><published>2014-11-07T23:23:00+01:00</published><updated>2014-11-07T23:23:00+01:00</updated><author><name>Ashwin Vishnu</name></author><id>tag:ashwinvis.github.io,2014-11-07:/2014-11-07-a-world-of-zombie-blogs.html</id><summary type="html"></summary><content type="html">&lt;p&gt;&lt;strong&gt;*sighs*&lt;/strong&gt;&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;Yes, I’m back.&lt;/p&gt;
&lt;/p&gt;&lt;ol start="4"&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;&lt;ol start="2"&gt;
&lt;li&gt;&lt;ol start="4"&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;&lt;ol&gt;
&lt;li&gt;Denial&lt;/li&gt;
&lt;li&gt;Anger&lt;/li&gt;
&lt;li&gt;Bargaining&lt;/li&gt;
&lt;li&gt;Depression&lt;/li&gt;
&lt;li&gt;Acceptance&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The Kübler-Ross model (yeah, I googled it, and kudos to Wikipedia) of grief. Usually applies to terminally ill people and families under the face of sudden loss. But well it can apply to anything. Even writer’s block.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;&lt;a href="http://bigfatpage.blogspot.com"&gt;My blog&lt;/a&gt; had went into a state of prolonged stagnation. And I felt that it had been neglected for too long that, that no post can save it from this coma.&lt;/p&gt;
&lt;/p&gt;&lt;blockquote&gt;
&lt;/p&gt;&lt;p&gt;It was time to reinvent, for renaissance!&lt;/p&gt;
&lt;/p&gt;&lt;/blockquote&gt;
&lt;/p&gt;&lt;p&gt;&lt;figure&gt;
&lt;img alt="Teenage mutant ninja turtles" src="https://78.media.tumblr.com/cd0354bfb47a24ff5a177cb46bba5e38/tumblr_inline_pfjaz1Tw2Y1t4yejq_540.png" /&gt;
&lt;/figure&gt;
&lt;/p&gt;&lt;/p&gt;&lt;p&gt;To arms!&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;I knew tumblr existed. But when I first tried it, I found it too short, too cocky. Too twitterish - only not limited to 140 characters that’s all. But things have changed, blogs are becoming redundant in a fast shrinking world. If I don’t have time to write, how can I expect you to find time to read.&lt;/p&gt;
&lt;/p&gt;&lt;blockquote&gt;
&lt;/p&gt;&lt;p&gt;That doesn’t mean we stop to think&lt;/p&gt;
&lt;/p&gt;&lt;/blockquote&gt;
&lt;/p&gt;&lt;p&gt;It is human nature to think and ponder. And the more out of the box we think, we push the limits of this ephemeral world of thoughts further. So I persist, with my big fat mouth. Bear with me.&lt;/p&gt;
&lt;/p&gt;</content><category term="Tumblr archive"></category><category term="helloworld"></category><category term="introduction"></category><category term="tumblr"></category></entry><entry><title>Looking Back</title><link href="https://ashwinvis.github.io/looking-back.html" rel="alternate"></link><published>2014-01-01T20:46:00+01:00</published><updated>2014-01-01T20:46:00+01:00</updated><author><name>azuwish</name></author><id>tag:ashwinvis.github.io,2014-01-01:/looking-back.html</id><summary type="html"></summary><content type="html">&lt;div dir="ltr" style="text-align:left;"&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;It’s that day of the year again. Resolutions, promises to change, and
parties to kickstart the ride. Surprisingly, I find a lot of people,
cheerful all around, everywhere! It is humbling to witness how a random
date, set as the “starting point” of the Earth’s perennial revolution
around the Sun, could collectively influence so many minds.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;Let us not digress. Instead of piling on more hollow promises, I thought
I would spare a moment and see how things have been. A little over two
years back, I wrote this piece on my blog and called it my &lt;a href="https://bigfatpage.blogspot.in/2011/04/things-to-do-before-i-turn-25.html"&gt;“Bucket
List”&lt;/a&gt;
(didn’t realise back then that the phrase was reference to the idiom,
&lt;em&gt;kick the bucket&lt;/em&gt; or &lt;em&gt;to die&lt;/em&gt;). Looking back, I am glad that I could
cross out most of the points. Some ride it has been. Went places, learnt
the guitar(mastery would have to wait), started reading again, hardly
watch any movies these days (damn! a stupid idea. What was I thinking?),
met amazing friends, let go of all the miseries and opened up my mind
and yeah, found closure to a 6 year long dream (mmhmm!). All that with
five months left to 25.&lt;/p&gt;
&lt;/div&gt;&lt;div class="separator" style="clear:both;text-align:center;"&gt;&lt;/div&gt;&lt;p&gt;It is interesting how the course of your life, and your priorities
change in a matter of few years; just when I was starting think that you
hardly change anymore after adulthood. Not just me, I have noticed the
same with all my friends, even the most “inertial” ones yearn change. I
keep getting proved wrong over and over again. Well, Forrest Gump, you
were right. &lt;em&gt;Life is a box of chocolates.&lt;/em&gt;&lt;/p&gt;
&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear:both;text-align:center;"&gt;&lt;p&gt;&lt;a href="https://bigfatpage.files.wordpress.com/2014/01/430080_10150678754909859_666309858_11045588_1531052424_n.jpg"&gt;&lt;img alt="image0" src="https://bigfatpage.files.wordpress.com/2014/01/430080_10150678754909859_666309858_11045588_1531052424_n.jpg?w=300" style="width: 640px" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;What next? Well, the way ahead is still foggy. The only way to find out
is to try and set out on the journey. Uncertain times are exciting! As
things settle down to normalcy, who knows, I might write down another
Bucket List again.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;So for now, Glückliches neues Jahr!&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;P.S: Although I’m fairly confident that the above translation makes
sense, if it is wrong the blame goes to Google.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</content><category term="Blogger archive"></category><category term="life"></category><category term="resolution"></category></entry><entry><title>The Dive</title><link href="https://ashwinvis.github.io/the-dive.html" rel="alternate"></link><published>2013-07-15T04:28:00+02:00</published><updated>2013-07-15T04:28:00+02:00</updated><author><name>azuwish</name></author><id>tag:ashwinvis.github.io,2013-07-15:/the-dive.html</id><summary type="html"></summary><content type="html">&lt;p&gt;I make it a point that I don’t let my rage take control. We all come to
a tipping point at times. My friends would know that I get pissed very
rarely, and as far as my memories go, there were only handful of
incidents. And I regret all of them. No good comes out of an angry head.
It is never fun. All it leaves are scars for life. Well, as one of my
friends quoted: &lt;em&gt;“One who angers you, masters you.”&lt;/em&gt; Can’t agree more:&lt;/p&gt;
&lt;pre&gt;The more he looked, the more he saw pain in the world yonder.
Wakes up everyday, setting the weight on his shoulders aside,
Navigate from dawn to dusk and watch the sun subside.
Unwillingly, he chased the sunset of his own life.
One more day. One more day closer.

All he yearned was to spread smiles in the journey.
Unfazed by his heartbeats, he told them what they wished to hear.
Yet once a while, he observed the fake world near
Actors, manipulators, crooks, con-artists all around him.
How he wished he could make amends, into the way it should be.
He dived into calmness of the pool around him.

Words escaped his lips, before he thought it through.
Turns back to see chaos, delivered by his words, muddying the pool.
The dirt of his doing dripped down his back as he rose.
Things won't be the same, even in his dreams.

The audience around the pool sneered aloud.
&amp;quot;Lie, you should, if you seek your place in this show of clown
faces,&amp;quot;
Worn he was of pretensions and so he lived on with his
differences.
Mistaken by pride and principles, he might have been.
I ask you, my friend, would you have the courage to do the same?&lt;/pre&gt;
</content><category term="Blogger archive"></category><category term="poetry"></category></entry><entry><title>The thin line between being a Cynic and a Critic</title><link href="https://ashwinvis.github.io/the-thin-line-between-being-a-cynic-and-a-critic.html" rel="alternate"></link><published>2013-06-04T08:03:00+02:00</published><updated>2013-06-04T08:03:00+02:00</updated><author><name>azuwish</name></author><id>tag:ashwinvis.github.io,2013-06-04:/the-thin-line-between-being-a-cynic-and-a-critic.html</id><summary type="html"></summary><content type="html">&lt;p&gt;Have you seen this guy on the right, people?  “The Thinker” that’s what
he’s called. Ever wondered why he’s crouching so low? Some may say he’s
deep in his thought. I beg to differ. It is the weight of his
preoccupation hanging on his shoulders. Can’t you see this guy is
depressed?!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://upload.wikimedia.org/wikipedia/commons/thumb/4/45/The_Thinker,_Auguste_Rodin.jpg/321px-The_Thinker,_Auguste_Rodin.jpg"&gt;&lt;img alt="image0" src="https://upload.wikimedia.org/wikipedia/commons/thumb/4/45/The_Thinker,_Auguste_Rodin.jpg/321px-The_Thinker,_Auguste_Rodin.jpg" style="width: 214px; height: 320px" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Knowing too much can be a pain in the neck. To be enlightened about
world (read: too much of news, Facebook shares, Twitter, TV, and
Googling) burdens your mind with negativity. Then, your dear friend make
you sit and watch a bunch of Youtube conspiracy theories. Follows a
ranting session on “how the world has gone to the dogs”, “scams”,
“corporates”, and “corruption”. Keep doing that, and before you know it,
you’ll end up bitter and start sneering at everything around you.
Now that we have established media hype and bias, what’s your next best
option? They say &lt;em&gt;ignorance is bliss&lt;/em&gt;. So, it would have been better to
not read the news, drink a cup of coffee and enjoy the evening, right?
WRONG! It’s no fun being a dumb retard either.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Choose your sources wisely.&lt;/strong&gt; If you read the Times of India
regularly and believe in all the speculations on Aaj Tak, lobotomy is
your best option. (Not just these two, but I could name other lost
causes.)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Be curious. Question.&lt;/strong&gt; Most of the conspiracy theories and e-mail
hoaxes are with “evidence” that are webpages on the Net itself.
Authentic, isn’t it? I’m not asking you to Google to prove it. It’s
like that line in &lt;em&gt;Alchemist:  * “*When you want something, all the
universe conspires in helping you to achieve it&lt;/em&gt;.” Google will always
deliver whatever you seek. Don’t mug up any such fact on the net.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Follow blogs and opinions by unbiased&lt;/strong&gt; &lt;strong&gt;people.&lt;/strong&gt; That my friend,
is a good start to clear your head and form opinions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Here are some “few good men”:&lt;br /&gt;
&lt;a href="https://chomsky.info/articles.htm"&gt;Noam Chomsky&lt;/a&gt;, &lt;a href="https://www.rameshsrivats.net/"&gt;Ramesh
Srivats&lt;/a&gt;, &lt;a href="https://www.richarddawkins.net/"&gt;Richard
Dawkins&lt;/a&gt;&lt;br /&gt;
and many political satirists like: Jon Stewart, Stephen Colbert,
Sumeet Raghavan. Do tell me if there are others of the same repute. I
would be interested.&lt;br /&gt;
&lt;/p&gt;
</content><category term="Blogger archive"></category><category term="Internet"></category><category term="psychology"></category><category term="thin line"></category></entry><entry><title>Being a Malayali</title><link href="https://ashwinvis.github.io/being-a-malayali.html" rel="alternate"></link><published>2013-05-08T19:33:00+02:00</published><updated>2013-05-08T19:33:00+02:00</updated><author><name>azuwish</name></author><id>tag:ashwinvis.github.io,2013-05-08:/being-a-malayali.html</id><summary type="html"></summary><content type="html">&lt;div dir="ltr" style="text-align:left;"&gt;&lt;p&gt;… and not a Keralite.&lt;/p&gt;
&lt;div style="text-align:justify;"&gt;&lt;p&gt;I’ve been away from my homeland, for two years straight. Situations
throw you into a mish-mash  of people hailing from all over India, and I
accept, it was weird and unsettling in the beginning. But you change
overtime, slowly. And armed with the following superpowers vested in
you, life out there is cakewalk.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Listen and adapt -&lt;/strong&gt; I don’t know how true this is, but a friend of
mine said that Malayalam is the second most difficult language to
learn, right under Mandarin. But it seems plausible, since it is an
elaborately designed tongue. The uninitiated would find it hard to
even tell the words apart as we speak! There are hardly any breaks
between words - it just rolls and gurgles on to the end. Since it’s
hard for others to learn our language, you are left with no option,
but to learn theirs - which comes with ease, slowly but surely.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Encrypted tongue -&lt;/strong&gt; It works most of the time. You could shout and
abuse each other in the metro, in the bus, or even in the middle of
the road, and no one would have a clue. Somethings that you don’t get
to do back home. But…. there is a catch.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wherever you go, they are there -&lt;/strong&gt; It’s like an epidemic. You find
them everywhere, even where you don’t expect them at all! Sometimes
they just pretend to be an outsider, and overhear all your
conversations. And they’d just leave with a oneliner in Malayalam at
the end, making you look like a total  ശശി .&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;One for all, and all for one -&lt;/strong&gt; Back in Kerala, you just get tired
of seeing too many “blaady mallus.” But once you realise you are
alone, even a complete stranger would seem like a long lost friend
(if he’s some random connection with you, god help him). And you
would end up conversing stuff that you normally wouldn’t … to a
stranger, c’mon! You are that vulnerable.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At the end of day, you have your bunch of friends, who reassure you that
the place you live in is a home away from home. That occasional taste of
the native cuisine, is enough to drive your miseries away and keep you
going.&lt;/p&gt;
&lt;/div&gt;</content><category term="Blogger archive"></category><category term="life"></category><category term="survival"></category></entry><entry><title>Voices inside: What makes us human</title><link href="https://ashwinvis.github.io/voices-inside-what-makes-us-human.html" rel="alternate"></link><published>2012-10-05T14:45:00+02:00</published><updated>2012-10-05T14:45:00+02:00</updated><author><name>azuwish</name></author><id>tag:ashwinvis.github.io,2012-10-05:/voices-inside-what-makes-us-human.html</id><summary type="html"></summary><content type="html">&lt;div dir="ltr" style="text-align:left;"&gt;&lt;p&gt;Those tiny voices inside your head!&lt;/p&gt;
&lt;div style="text-align:justify;"&gt;&lt;p&gt;As Jim Carrey said (on a lighter note, of course) we are always just one
step away from insanity. Your mind is a pandora’s box that cooks up all
the evil you could do at “the moment.” Read these weird thoughts; you
might have had them before - from time to time. Be it&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;jumping off the cliff while being awestruck at the suicide point, or&lt;/li&gt;
&lt;li&gt;dancing in the middle of the road, or&lt;/li&gt;
&lt;li&gt;imagining yourself beating the shit out of a guy in front of you,
going on… and on… speaking nothing other than bullshit (with a
baseball bat when the situation demands it).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;Your brain is a weird place. It is like a super-computer which figures
out all the possible chess moves in front of you.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;It is that tiny voice inside your head that holds you back from all the
wrong, insane, suicidal moves. It just tells you:&lt;/p&gt;
&lt;/div&gt;

 *"Uh-uh-uhh.... It's counter-productive!* "&lt;p&gt;And you stop. You throw all those thoughts away in the trash can. Let’s
call it the &lt;strong&gt;voice of control&lt;/strong&gt;.&lt;/p&gt;
&lt;div style="text-align:justify;"&gt;&lt;p&gt;The catch is - you can’t control that voice in your head. Reasoning and
logic can only bargain a little. You can never turn it off. If we were
allowed to do it, anarchists, psychopaths and criminals will be all
around. So it is fine the way it is.&lt;/p&gt;
&lt;/div&gt;&lt;div class="separator" style="clear:both;text-align:center;"&gt;&lt;p&gt;&lt;a href="https://bigfatpage.files.wordpress.com/2012/10/devilandangel.jpg"&gt;&lt;img alt="image0" src="https://bigfatpage.files.wordpress.com/2012/10/devilandangel.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;Then, there is another voice. Unlike the voice of control, which asks
you to stop; this is like an inner urge which ask you to &lt;em&gt;start doing
stuff,&lt;/em&gt; that you normally, “logically” don’t want to do. To make the
idea simple enough, let’s call it the &lt;strong&gt;voice of heart&lt;/strong&gt;. Although it
feels like a pounding in your head more than the heart.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;be it helping out a good friend in need, when you have “loads” of
work to do on your own; or&lt;/li&gt;
&lt;li&gt;a parent taking his/her kid to the children’s park even though he/she
is worn out after a day’s work; or&lt;/li&gt;
&lt;li&gt;falling in love and that lingering infatuation or crush; or&lt;/li&gt;
&lt;li&gt;helping out someone you care with shopping, although you couldn’t
stand shopping when you’re not doing it&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;p&gt;No matter how much you have planned and premeditated, that you won’t do
it, you &lt;strong&gt;finally&lt;/strong&gt; end up doing it. You will break your own plan, and
there you go.&lt;/p&gt;
&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;The catch here too, is that you can’t stop it. Maybe if you are really
strong at heart (figuratively), and have a will of steel, you can fight
it out, and suppress it. But still, the pounding in the head remains.
The voice shouts back at you for being an insensitive prick, and you are
filled with regret.&lt;/p&gt;
&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;These random voices are what end up as decisions and what makes us
human. Unique, unpredictable, but equally compassionate beings.&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;
P.S.: Correct me if I’m wrong. Just feel free to reply.&lt;br /&gt;
Jim Carrey’s take : &lt;a href="https://youtu.be/lbqxkS2ssUI?t=5m3s"&gt;https://youtu.be/lbqxkS2ssUI?t=5m3s&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</content><category term="Blogger archive"></category><category term="emotion"></category><category term="life"></category><category term="psychology"></category></entry><entry><title>How to survive the Great Slowdown</title><link href="https://ashwinvis.github.io/how-to-survive-the-great-slowdown.html" rel="alternate"></link><published>2012-08-18T06:32:00+02:00</published><updated>2012-08-18T06:32:00+02:00</updated><author><name>azuwish</name></author><id>tag:ashwinvis.github.io,2012-08-18:/how-to-survive-the-great-slowdown.html</id><summary type="html"></summary><content type="html">&lt;div dir="ltr" style="text-align:left;"&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;On the backdrop of recent events when our beloved &lt;a href="https://in.reuters.com/article/2012/08/15/india-gdp-manmohan-singh-idINDEE87E01I20120815"&gt;King Singh gave a
heartbroken I-day
speech&lt;/a&gt;,
&lt;a href="https://in.reuters.com/article/2012/08/18/india-economy-gdp-panel-idINDEE87G02G20120818"&gt;all hope seems to be
lost&lt;/a&gt;
and the media starts scaring you with &lt;a href="https://in.reuters.com/article/2012/08/18/india-ratings-junk-investment-idINDEE87F0IK20120818"&gt;impending
doom&lt;/a&gt;;
I thought I would share a few pointers that would help the &lt;em&gt;selfish
anarchist&lt;/em&gt; in you survive in the days ahead.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;There are some nonsensical things we do, that are considered OK. I
wouldn’t actually call it austerity measures. Think about these and see
if you can stop doing them.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Start cutting down on overpriced junk food.&lt;/strong&gt; A few months ago, I
saw a donation box in KFC that wanted me to donate some spare change
to conquer “hunger in the world”. Makes you feel guilty, doesn’t it?
I was holding that pricey burger in my hand, and I realized that I
don’t actually need it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Get used to cheap transport&lt;/strong&gt;. Once you are employed and you have
the luxury of commuting in your own motorbikes and buying Air trips
back and forth, its hard to imagine going back to school-days when
your pocket money was a 100 Rs. ($2 in those days. Not now.) note for
a month. Brush up your footboard-hanging and hitchhiking skills.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Recognize your *first-world* *problems* and deal with it.&lt;/strong&gt; When
you are in your comfort zone, it’s natural that you dig up
discomforts in your daily routine, and cry about it to make your life
miserable.
Like you never have enough time, the food in the canteen is either
too spicy or not spicy enough, your broadband is not broad enough,
the girls in your college/workplace are not outdoorsy enough, the
beer you get is too bitter and there is no end to this rant.
I have done it too; and I despise myself for doing it. Trust me you
would have lots to complain about, in the future.&lt;/p&gt;
&lt;div style="text-align:left;"&gt;&lt;div style="text-align:center;"&gt;&lt;p&gt;&lt;em&gt;What doesn’t kill you, makes you stronger.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;Go by that thought.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:left;"&gt;&lt;/div&gt;&lt;div style="text-align:left;"&gt;&lt;/div&gt;&lt;div style="text-align:left;"&gt;&lt;p&gt;Recommended watch: &lt;a href="https://www.imdb.com/title/tt0758758/"&gt;Into the
Wild&lt;/a&gt; - essentially a primer
course in living with no money.&lt;/p&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Blogger archive"></category><category term="economy"></category><category term="India"></category><category term="recession"></category><category term="survival"></category><category term="tips"></category></entry><entry><title>Learning to Live</title><link href="https://ashwinvis.github.io/learning-to-live.html" rel="alternate"></link><published>2012-02-03T17:23:00+01:00</published><updated>2012-02-03T17:23:00+01:00</updated><author><name>azuwish</name></author><id>tag:ashwinvis.github.io,2012-02-03:/learning-to-live.html</id><summary type="html"></summary><content type="html">&lt;div dir="ltr" style="text-align:left;"&gt;&lt;div&gt;&lt;div&gt;&lt;div dir="ltr" style="text-align:left;"&gt;&lt;p&gt;As I look back at 22 years of my life, I realise that my life took two sharp
turns to define me as a person that I am today.  In my defence, this is not a
prose in praise to myself. Nor am I saying I am the perfect son or most
adorable friend you ever saw. I had some life-changing incidents, and a few
influences; and it might help you realise, how much wider your mind grows with
age.&lt;/p&gt;
&lt;blockquote&gt;
&lt;em&gt;A man sooner or later discovers that he is the master-gardener of
his soul, the director of his life.&lt;/em&gt;
- James Allen&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Age One:&lt;/strong&gt; Dawn of Teenage (12-15)&lt;/p&gt;
&lt;div style="text-align:justify;"&gt;&lt;p&gt;    &lt;em&gt;Naive, unassuming&lt;/em&gt; me. I was a child of reason, and accepted life
as it is. Rarely doubting what my friends would say. The funny thing is,
I never realised I was like this. However in those days, I went on, as a
dreamer. And I dreamt of science and how it could change the world,
things I still believe in.
     With a small circle of friends I was happy. People who I still
swear by, even now. Jayashankar knew what went through my “alternate
universe” and we talked about it, lots. Even when I was stuck home,
many  pointless topics were furiously discussed over the phone, God
knows why. We were similar in ways more than one. We obeyed the &lt;em&gt;Law of
conservation of mass&lt;/em&gt;, conserved it for years. The world beyond us
seemed lesser than us. To add spice to this world, I put up with my male
chauvinist act.
     And there was Kalyan chettan, my cousin, my mentor. He taught me
how to ride the bicycle. He made me believe, that maybe I was different,
in a good way. I knew I had a long way to go.
    The best part - I was being myself, never tensed, never
self-conscious. Who knew things were about to change soon?&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Age Two:&lt;/strong&gt; Reinventing myself (16-17)&lt;/p&gt;
&lt;div class="separator" style="clear:both;text-align:center;"&gt;&lt;p&gt;&lt;a href="https://i74.photobucket.com/albums/i263/myspaceye/bandwallpapers/pinkfloyd/pink_floyd_the_wall.jpg"&gt;&lt;img alt="image0" src="https://i74.photobucket.com/albums/i263/myspaceye/bandwallpapers/pinkfloyd/pink_floyd_the_wall.jpg" style="width: 320px; height: 240px" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;     High school was over. I was fed up with my school and somehow I was
sure, it held no future. What followed was 2 years of dramatic changes.
I chose to switch schools.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;      Following the call of Pink Floyd, I slowly started undoing the
wall. An artistic eye opened in me. Public speaking, was something I had
never even dreamed I would be capable of; turned out I was more than OK
at it. Majority of my Plus One days in school were consumed by the
Drama rehearsals for Annual School Play. For the first time in my life,
I danced - a skill that I would cherish for the rest of my days.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;     But all the good things apart, I was drifting away. I was
surrounded by an uncanny peer group. Some were down to earth, and fun to
hang out with. Some made you think you were larger than life, and lied
to your face. The &lt;em&gt;naive&lt;/em&gt; me, had to change if I had to survive. Arjun,
my friend, helped me realise this and since then I thought for a second,
before I act or react.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;     Too much goodness could damage you.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;     For the Plus Two year I was engulfed in the usual rat race of Board
examinations and Entrance Tests. I am grateful for my parents for
avoiding putting pressure on me. And that’s the story how I was saved
from drowning in the deep.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;&lt;strong&gt;Age Three&lt;/strong&gt;&lt;strong&gt;:&lt;/strong&gt; Light at the end of the tunnel (18-22)&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;    College had begun. I had to start anew. No old friends were here to
cling on to the past. But just like everyone else, I couldn’t forget how
wondrous school life was. I couldn’t find the same awesomeness in my new
college. I was doubtful. Not that I locked up myself in a room and threw
the key away. I did meet people, made a lot of friends; but I kept my
distance.
     Why? I was afraid that drowning in the madness that was college-
the mobs, small gangs, and perverted talks- could get to me and
eventually, change me.
      And then there was Arun. He said, “You know what your problem is?
You are never happy with who you are!” A few honest words are all it
takes to wake up your friend. It shook me; it shook me from deep within.
     Maybe it was that shadow of dissatisfaction, that was driving me to
seek better. But now, I was grown up, and responsible. I could command
myself. I then, took the dive. Let go my mind, and lived in the moment.
Sharing your life with your friends is some of the best moments you’d
ever get.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;    So what did I learn? You might not get everything right, the way you
want it. Be good to people and they would be good to you (Karma,
karma!). Never lose yourself, be the master of your mind…. and stay
happy!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content><category term="Blogger archive"></category><category term="friends"></category><category term="life"></category><category term="teenage"></category></entry><entry><title>ഒരു ആഗ്ര യാത്ര.</title><link href="https://ashwinvis.github.io/oru-agra-yatra.html" rel="alternate"></link><published>2011-09-15T11:45:00+02:00</published><updated>2011-09-15T11:45:00+02:00</updated><author><name>azuwish</name></author><id>tag:ashwinvis.github.io,2011-09-15:/oru-agra-yatra.html</id><summary type="html"></summary><content type="html">&lt;div dir="ltr" style="text-align:left;"&gt;&lt;div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;ഓഗസ്റ്റ്‌ 14 ഒരു നല്ല ദിനമാണ് .പാരതന്ത്ര്യത്തിന്റെ പിടിയില്‍ നിന്നും
ഭാരത്തെ മോചിപ്പിക്കാന്‍ വെള്ളക്കാര്‍ തീരുമാനിച്ച സുദിനം. Schoolil
 പഠിക്കുമ്പോഴും ഓഗസ്റ്റ്‌ 14 എന്നും നല്ല ഓര്‍മ്മകള് മാത്രമേ
 തരാറുള്ളൂ.. മടുപ്പിക്കുന്ന  ക്ലാസ്സുകല്കിടയില്‍  വരാനിരിക്കുന്ന  അവധിയെ
ഓര്‍ത്തു  സുഖിക്കുന്ന  ദിവസം.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;ഇവിടെ   ജോലിക്ക്  കയരിയിട്ട്ടും   ആ  പ്രക്രിതതിനൊരു  മാറ്റമുണ്ടായില്ല.
പക്ഷെ ഞാന്‍   പറയും  ഓഗസ്റ്റ്‌  14 ഒരു കാര്യത്തിന് നല്ലതല്ല , ആഗ്ര
യാത്രയ്ക് …&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;മടുപ്പിക്കുന്ന  ജോലിക്കിടെ  വീണുകിട്ടിയ  3 ദിവസം  നമ്മള്‍  യാത്ര
പോകാന്‍  തീരുമാനിച്ചു .ടെസ്ടിനറേന്‍  ഫിക്സ്  ചെയ്തു . ‘താജ്മഹല്‍’.
പ്രണയത്തിന്റെ  പര്യായമായി  ലോകത്തില്‍  നിലകൊള്ളുന്ന  7 ആം
അത്ഭുദം.ഇന്നേ  വരെ  ഒരു  പ്രണയം പോലും  ജീവിതത്തില്‍
സംഭവിച്ചിട്ടില്ലാത്ത  നമുക്ക്  മറ്റൊന്നിനെ  കുറിച്ച്  ആലോചിക്കേണ്ടി
വന്നില്ല.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;അങ്ങനെ  ആഗ്ര  യാത്രക്ക്  നമ്മള്‍  പുറപ്പെട്ടു.ടാജ്മാഹലിനെ  കുറിച്ചുള്ള
ചിന്തകള്‍  മനസ്സില്‍  ഒരു  വസന്തം  തീര്‍ത്തു .ഇന്ന്നുവരെ
കണ്ടിട്ടില്ലാത്ത  സ്വപ്ന  കാമുകിയെ  മനസ്സില്‍  പ്രതിഷ്ടിച്ചു, സരെകാലെ
ഖാന്‍  ബസ്‌ ടെര്മിനുസ് ലക്ഷ്യമാക്കി  മെട്രോ കയറി . പ്രണയത്തെ  കുറിചുള്ള
ചിന്തകള്‍  നമ്മുടെ  വിശപ്പിനെ  പോലും  അടക്കിയെന്നു  തോന്നുന്നു .ആരും
ബ്രേക്ഫാസ്റ്റ്  പോലും  കഴിച്ചില്ല .&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;മെട്രോ  സ്റ്റേഷനില്‍  നിന്നും  ഒരു  ഓട്ടോ  പിടിച്ചു  ബസ്‌ സ്റ്റാന്‍ഡില്‍
എത്തി . സമയം  രാവിലെ  10 മണി .അവിടെ  കാണാന്‍  തീരെ  ചന്ദമില്ലാത്ത,
 വൃത്തിയില്ലാത്ത  ബസുകള്‍  ആഗ്ര  ബോര്‍ഡും  വച്ചിരിക്കുന്നു .അയ്യേ
നമ്മള്‍  ഈ  ബുസിലോന്നും  പോകില്ല .5 അക്ക  ശമ്പളം    മേടിക്കുന്ന  നമ്മള്‍
 ഒരു  a/c ബസിലെങ്കിലും  പോകണ്ടേ ?&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;അങ്ങനെ  a/c ബസുകള്‍  തേടി  ഏകദേശം ഒരു  കിലോമീട്ര്‍  അപ്പുറം  ഉള്ള
പുതിയ  ബസ്‌  ടെര്മിനുസ്   ഇലേക്ക്  നടന്നു .പോകുന്ന  വഴികളില്‍  ഒരു  മഹാ
യുഗ  പരിവര്‍ത്തനത്തിന്  സാക്ഷിയാകേണ്ടി  വന്ന  ചരിത്ര  സ്മാരകം  പോലെ
പഴയ  ബസ്ടാന്റ്റ്   നമ്മെ  നോക്കി  പല്ലിളിച്ചു . കേരളത്തിന്റെ  വിദൂര
ഗ്രാമങ്ങളില്‍  പോലും  ഇത്രയും     വൃത്തി  കേട്ട  ഒരു  ബസ്ടാന്ടു
ഉണ്ടാവില്ല .അവിടവിടെ  വെള്ളം  കെട്ടി  കിടക്കുന്നു .ആ  ചെളിയില്‍
പന്നികള്‍  കാമകേളികള്‍ ആടുന്നു    .&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;പുതിയ  സ്റ്റാന്‍ഡില്‍  ചെന്നപ്പോള്‍ അവര്‍ പറഞ്ഞു അടുത്ത  a/c bus 3
മണിക്കൂര്‍  ശേഷമേ  ഉള്ളൂ  എന്ന് .പിന്നെ  അവിടെ  കണ്ട  അതേ പോലൊരു  upsrtc
ബസില്‍  കയറി , കാലുകള്‍  മര്യാദയ്ക്ക്  വെക്കാന്‍  പോലും  അതിനു  leg
space ഇല്ലായിരുന്നു . ഇങ്ങനെ    5 മണിക്കൂര്‍  നേരം  ആ  ബസില്‍
 ഇരിക്കുന്നതിനെ  കുറിച്ച  ഓര്‍ത്തപ്പോഴേ  മനസ്സിനുള്ളിലെ
പ്രണയചിന്തകള്‍ക്ക്  മങ്ങലേറ്റു . വിശപ്പിന്റ്റെ വിളിയും
തുടങ്ങി .പിന്നെ  അടുത്തുള്ള  കടയില്‍  കയറി  ബിസ്കെറ്റും  കേക്കും
വാങ്ങി .MRP യിന്‍മേല്‍  വില  പെശിയതിനു തെറിയും  മേടിച്ചു .ഡല്‍ഹിയില്‍
എത്യിയ  ശേഷം  കിട്ടിയ  ശീലമാനത്‌ .എന്തിനും  വില  പേശും   …&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;ഒരു  10 മിനിറ്റു  കാത്തു  നിന്നപ്പോള്‍  bus സീറ്റ്‌  എല്ലാം
നിറഞ്ഞു .യാത്ര  തുടങ്ങി . ഗുഡ് ഗാവില്‍  തരിശു  പാടങ്ങള്‍ മാത്രം  കണ്ട
 നമ്മള്‍ക്ക്  യാത്രയില്‍  കൃഷി  സ്ഥലങ്ങള്‍  കാണാന്‍  പറ്റി.പാതയോരം
ചേര്‍ന്ന്  നീണ്ട  വയലുകള്‍ .ചോളം  കൃഷിയാണ്  മുഖ്യമെന്നു  തോന്നുന്നു
.ബസിനുള്ളിലെ  ചൂടിനു  ശമനമേകി മഴയുമെത്തി. ഒരു   homely feel
അനുഭവപ്പെട്ടു .നാട്ടില്‍  ഇപ്പൊ  കര്‍ക്കിടകം  തകര്‍ത്തു
പെയ്യുകയായിരിക്കും .അമ്മ  വിളിച്ചപ്പോള്‍  പറഞ്ഞിരുന്നു  , തോട്ടില്‍
വെള്ളം  നിറഞ്ഞു   മുറിച്ചു  കടക്കാന്‍  പട്ടതയിട്ടുണ്ട് .ഇപ്പൊ  അവിടെ
 കുളിക്കാന്‍  കണ്ണനെ  അമ്മ  വിടാറില്ല . schoolil പോകാന്‍  cycle
എടുക്കാന്‍  കഴിയാരില്ലെന്ന് കണ്ണനും  പറഞ്ഞു . കണ്ണന്‍  എന്റെ  അനിയനാണ്
കേട്ടോ .&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;വഴിയില്‍  ഏതോ  ഒരു  ധാബയ്കരുകില്‍ bus നിര്‍ത്തി . സമയം  1.30 ആയിരുന്നു .
പുറത്തിറങ്ങി  ,ഒന്ന്  കാല്  നിവര്‍ത്തി , ധാബയുടെ അവസ്ഥ  കണ്ടു
കഴിക്കാനും  തോന്നിയില . പിന്നെ  കേക്ക്  തിന്നതിനാല്‍  വലിയ  വിശപ്പും
തോന്നിയിരുന്നില്ല .അവിടെ  cut fruits വില്‍ക്കുന്നുണ്ടായിരുന്നു .
പ്ലേടിനു 10 മാത്രം . അതിനാല്‍  ഓരോപ്ലെട് മേടിച്ചു .ഫ്യൂ .. ഒരു  പീസ്
എടുത്തു  വായിലിട്ടപ്പോ  പുറത്തോട്ടു തന്നെ  തുപ്പി . ഫ്രുട്സില്‍ എന്തോ
വൃത്തികെട്ട  മസാല  ഇട്ടിരിക്കുന്നു . പിന്നെ  രണ്ടു  പീസ്  കൂടി  എടുത്തു
 വായിലിട്ടു . ഇപ്പൊ  അത്ര  വലിയ  കുഴപ്പമില്ല . മറ്റെ സിനിമയില്  ദിലീപ്
 പറഞ്ഞ പോലെ പിന്നെ അത് ശീലമായി …അവസാനം  മുഴുവനും  തിന്നു . ഫ്രൂട്സ്
എന്ന്  പറയാന്‍  അതില്‍  ഒന്നുമുണ്ടായിരുന്നില്ല . കുറച്ചു  കക്കിരി
കഷ്ണം  മാത്രം .ഒരു  ചാറ്റല്‍  മഴയുടെ  അകമ്പടിയോടെ  bus അവിടെ  നിന്നും
 പുറപ്പെട്ടു .നീണ്ട  ഇടവേളകളില്‍  ഒരു  ഉറക്കം . എഴുന്നേല്‍ക്കുമ്പോള്‍
പുറത്തെ  കാഴ്ചകള്‍  നോക്കും . കാതില്‍ pink floyd ന്‍റെ സംഗീതം ,
സിരകളില്‍  മത്തു  പകരുന്നു .പിന്നെ  വീണ്ടും  മയക്കം .&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;എഴുന്നേറ്റപ്പോള്‍  വണ്ടി  അഗ്രയിലെതിയിരുന്നു . പഴയ  നഗരം , ഇടുങ്ങിയ
വഴികളില്‍  വണ്ടികള്‍  നിറഞ്ഞിരിക്കുന്നു  , പഴകിയ  കെട്ടിടങ്ങള്‍ , ദൂരെ
യമുനാ നദിക്കക്കരെ  ടാജ്മാഹല്‍  കാണാം , മനസ്സില്‍  കുളിരുകോരി .. വീണ്ടും
 പ്രണയം …&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;ഛെ .. വണ്ടി  നിന്നു. മുന്നില്‍  നീണ്ട  ബ്ലോക്ക്‌ .ബസില്‍  നിന്നും
 ഇറങ്ങി  നടന്നു . ബസ്‌  കാരന്‍  പറഞ്ഞു , സീധാ ജാവോ , ദായേം  മത് ജാവോ ,
ബായേം  മത്  ജാവോ. ‘ദായേം , ബായേം ‘ മെട്രോയില്‍  കേറുന്നത്  കൊണ്ട്  ഈ
 വാക്കുകള്‍  എനിക്ക്  സുപരിചിതമായിരുന്നു.സത്യത്തില്‍  ഗുഡ്ഗാവില്‍
 ജീവിക്കാന്‍ അധികം ഹിന്ദി അറിയേണ്ട ആവശ്യമില്ല. ‘പച്ചാസ്’ ഏത് ഒരാളും
അറിഞ്ഞിരിക്കേണ്ട വാക്ക്. കാരണം ഓട്ടോ വാലകള്‍ 100  ഉം 150 ഉം ഒക്കെ
 പറയുമ്പോള്‍ തലയാട്ടിക്കൊണ്ട് പച്ചാസ് പച്ചാസ് എന്ന് പറഞ്ഞാല്‍ മതി.
എല്ലാവരും സമ്മതിക്കും.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;ബസ്സിറങ്ങി നേരെ  മുന്നോട്ടു  നടന്നു .സൈഡില്‍  ആഗ്ര  ഫോര്‍ട്ട്‌  കാണാം ,
നൂറ്റാണ്ടുകളുടെ   അനുഭവ പാരമ്പര്യമുള്ള  ചരിത്ര  സ്മാരകം .ബാബര്‍  തൊട്ടു
വന്ന  മുഗളന്മാരുടെ  തലസ്ഥാനം , ഒടുവില്‍ , തന്‍റെ പ്രണയിനിക്ക്  നല്‍കിയ
അമൂല്യ  സൌധം  നോക്ക്കി  മരിക്കാന്‍ ഷാജഹാന്  തന്‍റെ  പുത്രന്‍റെ
ഔദാര്യമായി  കിട്ടിയ  കാരാകാരം… അങ്ങനെ  ഒരു  സാമ്രാജ്യത്തിന്റെ   പല
രാജതന്ത്രങ്ങളും  രൂപം  കൊണ്ട  ചുവന്ന  കോട്ട , രാജസ്ഥ്നിലെ കല്ലുകളില്‍
വിരിഞ്ഞ  കാവ്യം . ദൂരെ  നിന്നു  കാണാന്‍  ആഗ്ര  ഫോര്‍ട്ടും  മനോഹരം .&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;നേരെ  നടന്നു . സന്ജരികളുടെ  തിരക്ക്  ഗേറ്റ്  ഇല്‍ നിന്നു  തന്നെ
 അനുഭവപ്പെടും . മതിലിനകത്തു  മോട്ടോര്‍  വണ്ടികള്‍ക്ക്
പ്രവേശനമില്ല .അകത്തുള്ളത്  കുതിര  വണ്ടികളും  ഒട്ടക  വണ്ടികളും . പിന്നെ
 ഡല്‍ഹി  യിലെ  പോലെ  സൈക്കിള്‍  റിക്ഷകളും . ഈ  സൈക്കിള്‍  റിക്ഷകള്‍
ഇല്ലാത്തതു  സൌത്ത്  ഇന്ത്യയില്‍  മാത്രമേ  ഉള്ളൂ  എന്ന്  തോന്നുന്നു .
ഞാനേതായാലും  ഈ  റിക്ഷകള്‍ക്ക്  എതിരാണ് .പാവങ്ങള്‍  എത്ര
അധ്വാനിക്കണം ..&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;പിന്നെ  ബാറ്റെരിയില്‍  ഓടുന്ന  BHEL ബസുകളും  ഉണ്ട്.  .സീറോ
പോല്ലുഷന്‍ !. നമ്മള്‍  അതില്‍  കയറി .ഒരു 10 പേര്‍ക്ക് ഇരിക്കാനുള്ള
സീറ്റ് ഉണ്ട് . 5 രൂപ  കൊടുത്താല്‍  അങ്ങോളം  എത്തിക്കും . സീറ്റ്‌
 കിട്ടിയില്ല .നേരെ  നിന്നാല്‍  തല  മുകളില്‍  മുട്ടും , അത്രയ്ക്
ചെറുതാണ് , മിനി  ബസ്‌ .&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;മുന്നില്‍  നീണ്ടു  നില്‍ക്കുന്ന  Q കണ്ടപ്പോള്‍  ആദ്യം  കാര്യമായി
ഒന്നും  തോന്നിയില്ല . നേരെ  കേറി  Q വിനു  പുറകില്‍  സ്ഥാനം  പിടിച്ചു .
പിന്നീടാണ്‌ അറിയുന്നത്   അത്  ടിക്കറ്റ്‌  എടുത്ത  ശേഷമുള്ള  ‘Q’
ആണെന്ന് . ടിക്കറ്റ്‌  എടുക്കാന്‍  മുന്നോട്ടു  നടന്നു . Q വിന്റെ  അറ്റം
കാണുന്നില്ല . അത്രയ്ക്ക്  വലുത് . പക്ഷെ  ടിക്കറ്റ്‌  എടുക്കാന്‍  ഉള്ള  Q
ചെറുതാണ് . നേരെ  പിന്നില്‍ ചെന്ന് നിന്നു . 10 മിനിറ്റു
 കഴിഞ്ഞിട്ടും നിന്ന സ്ഥാനത്  നിന്നു  നീങ്ങിയില്ല . അപ്പോള്‍ ആരോ
പറയുന്നത് കേട്ടു തിരക്ക്  കാരണം  ടിക്കറ്റ്‌  സെയില്‍  നിര്‍ത്തി എന്ന് .
കുറെ  കഴിഞ്ഞപ്പോള്‍  സെയില്‍  തുടങ്ങി . മുന്നില്‍  കുറെ  പേര്‍  Q
തെറ്റിച്ചു  ഇടയ്ക്  കേരുന്നു . അവന്റെയൊക്കെ  തന്തയ്ക്കു  വിളിക്കാന്‍
തോന്നി . കുറച്ചുകൂടി  കഴിഞ്ഞപ്പോള്‍   രംഗം  കൂടുതല്‍  വഷളായി . മുന്നില്‍
 പോലീസ് ലാത്തി  ചാര്‍ജ്   വരെ  നടത്തി . കുറെ  എണ്ണത്തിനെ തൂകി  എറിഞ്ഞു .
ഞാന്‍   സൌമ്യനായി  Q വില്‍  ത്തനെ നിന്നു . ഒരു  മുക്കാല്‍  മണിക്കൂറിനു
ശേഷം  Q വിന്‍റെ മുന്നിലേക്ക്‌  ഒന്നെത്തി  പെട്ടു. അവിടെ  നില്‍കാന്‍
പോയിട്ട്  ഒരു  കാലുകുത്താന്‍  പോലും  സ്ഥലം  കിട്ടിയില്ല .കുറെ  പേര്‍
 പിന്നെയും  Q തെറ്റിക്കുന്നു . മുന്നില്‍  ആകെ അലങ്കോലം . ഒരു
 ഭീമാകാരന്‍  പോലീസ്  കാരന്‍  വന്നു  എന്നെ  കോളറിനു  പിടിച്ചു
 പുറത്താക്കി . ഒരു  മണിക്കൂറോളം  Q നിന്നത്  വേസ്റ്റ് , ടിക്കറ്റ്‌  ഉം
 കിട്ട്യില്ല .മനസ്സില്‍  ഞാന്‍   അവന്‍റെ തന്തയ്ക്  വിളിച്ചു .പൊല #####
മോന്‍ .അവന്റെ  അമ്മേ കെട്ടിക്കാന്‍ … പിന്നെ  കൂടെയുണ്ടായിരുന്ന  ഒരു
 വിരുതന്‍  ലേഡീസ്  Q വില്‍  കയറി  ടിക്കറ്റ്‌  എടുത്തു .3 എണ്ണം
 എക്സ്ട്രാ . 3 ഉം  ബ്ലാക്കില്‍  വിറ്റു. മലയാളികള്‍  എവിടെ  ചെന്നാലും
സ്വഭാവം  കാണിക്കുമല്ലോ  !!ടിക്കറ്റ്‌  കയ്യില്‍  കിട്ടി . ഇനി  അകത്
കേറണം. അതിനുള്ള  ‘Q’ 2 കിലോമീടെര്‍  ഉണ്ട് .independence day
പ്രാമാനിച്ചുള്ള    ടൈറ്റ്  ചെക്കിംഗ്  കാരണമാണ്  ഇത്രയും  താമസം . മൂന്നു
ദിവസം  അടുപ്പിച്ചു  കിട്ടിയ  അവധി  ആഘോഷിക്കാന്‍  എല്ലാ  മയി
കുനപ്പന്മാരും  അഗ്രയിലോട്ടാണ്  കെട്ടിയെടുതതെന്നു തോന്നി . നമ്മള്‍
എല്ലാരും  വിശന്നു  പണ്ടാരമടങ്ങി തുടങ്ങിയിരുന്നു . രാവിലെ  ആകെ  കൂടി
കഴിച്ച  ആ  കേക്കും  ബിസ്കെടും  ആണ്  5 മണി  വരെ  ഉള്ള  ഇന്നത്തെ
ഭക്ഷണം .അനുപം  ആണെങ്കില്‍  നോമ്പും  ആണ് .&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;മനസ്സില്‍  പ്രണയാഗ്നി കെട്ടു തുടങ്ങിയിരുന്നു . വിശപ്പിന്‍റെ തീ  ആളി
കത്താനും….  നീതിക്കും  നീതി  ബോധത്തിനും  ഒരു  വിലയുമില്ലെന്നു
മനസ്സിലാക്കിയതിനാല്‍  Q വിന്‍റെ  ഇടയ്ക്ക്  കയറി . അകത്തുകടന്നു .&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;ഇടയ്കിടെ   മഴ  പെയ്യുന്നുണ്ടായിരുന്നു . നിഷാന്തിനു  പനിയടിച്ചു . ഞാന്‍
കയ്യിലുണ്ടായിരുന്ന  ടവല്‍  തലയില്‍  കെട്ടി . 2 കുട
എടുത്തിരുന്നു .അതാണെങ്കില്‍ ഗേറ്റില്‍  cloak  roomil വച്ചു.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;ടാജ്മാഹല്‍  സത്യമായും  ഒരു  ‘സംഭവമാണ് ‘. അതിന്‍റെ ശില്പ  ചാരുതയെ  ആരും
 നമിച്ചു  പോകും .പ്രണയത്തിനു  ലഭിച്ച  അവമതിക്കാന്‍  പറ്റാത്ത
സമ്മാനം .വെന്നക്കല്ലില്‍ തീര്‍ത്ത  മഹാകാവ്യം .ഷാജഹാന്‍  തന്നെ  പറഞ്ഞത്
പോലെ ,&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;‘’പാപങ്ങള്‍  ഇവിടെ  മോക്ഷം  തേടട്ടെ ,ഇവിടെയെത്തുന്നവന്റെ പാപങ്ങള്‍
 യമുനാ  കഴുകി ക്കളയട്ടെ.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;ഈ  കുടീരം  വേദനയുടെ  നെടുവീര്പുകള്‍  ഉയര്‍ത്തട്ടെ,&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;സൂര്യ  ചന്ദ്രന്മാര്‍  കണ്ണീര്‍  പൊഴിക്കട്ടെ&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;ഈ  മണിമാളിക  രചിതാവിന്റെ കീര്‍ത്തി  ഉയര്‍ത്താന്‍ ,എന്നും  ഇവിടെ
 നിലകൊള്ളട്ടെ ’’.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;p&gt;നീല  മേഘങ്ങള്‍  കണ്ണീര്‍  പൊഴിച്ച്  കൊണ്ടിരുന്നു .ആ  മണി
മന്ദിരത്തിന്റെ  മുന്നില്‍  നിന്നുകൊണ്ട്  ഒന്ന്  രണ്ടു  ഫോട്ടോകള്‍
എടുത്തു .സഞ്ചാരികളുടെ  ഒരു  മഹാ  പ്രവാഹം  ആ  വെണ്ണകള്‍  കൃതിയെ  നമിച്ചു
കൊണ്ടിരുന്നു . ഈ  പ്രക്രിയ  അവിടെ  അനുസ്യൂതം
&lt;strong&gt;തുടര്‍ന്നുകൊണ്ടിരുന്നു&lt;/strong&gt; .&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:justify;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear:both;text-align:center;"&gt;&lt;p&gt;&lt;a href="https://bigfatpage.files.wordpress.com/2011/09/11.jpg"&gt;&lt;img alt="image0" src="https://bigfatpage.files.wordpress.com/2011/09/11.jpg?w=300" style="width: 320px; height: 240px" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class="separator" style="clear:both;text-align:center;"&gt;&lt;p&gt;&lt;a href="https://bigfatpage.files.wordpress.com/2011/09/140820111821.jpg"&gt;&lt;img alt="image1" src="https://bigfatpage.files.wordpress.com/2011/09/140820111821.jpg?w=225" style="width: 240px; height: 320px" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class="separator" style="clear:both;text-align:center;"&gt;&lt;p&gt;&lt;a href="https://bigfatpage.files.wordpress.com/2011/09/140820111761.jpg"&gt;&lt;img alt="image2" src="https://bigfatpage.files.wordpress.com/2011/09/140820111761.jpg?w=300" style="width: 320px; height: 240px" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class="separator" style="clear:both;text-align:center;"&gt;&lt;p&gt;&lt;a href="https://bigfatpage.files.wordpress.com/2011/09/140820111851.jpg"&gt;&lt;img alt="image3" src="https://bigfatpage.files.wordpress.com/2011/09/140820111851.jpg?w=300" style="width: 320px; height: 240px" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content><category term="Blogger archive"></category><category term="life"></category><category term="travel"></category></entry><entry><title>Lost in Transition</title><link href="https://ashwinvis.github.io/lost-in-transition.html" rel="alternate"></link><published>2011-08-02T10:01:00+02:00</published><updated>2011-08-02T10:01:00+02:00</updated><author><name>azuwish</name></author><id>tag:ashwinvis.github.io,2011-08-02:/lost-in-transition.html</id><summary type="html"></summary><content type="html">&lt;div dir="ltr" style="text-align:left;"&gt;&lt;div class="gmail_quote"&gt;&lt;div dir="ltr"&gt;&lt;div class="gmail_quote"&gt;&lt;div class="im"&gt;&lt;div
style="border-bottom:medium none;border-left:medium none;border-right:medium none;border-top:medium none;"&gt;&lt;div
style="border-bottom:medium none;border-left:medium none;border-right:medium none;border-top:medium none;"&gt;&lt;p&gt;I dreamt of the blue skies. And in pursuit of another beautiful dream, I
flew over the cotton-like clouds… my first flight. A warm evening in
June. Haze covered the Delhi skies, as the flight descends to the land
of promises. What was to follow, were days filled with awe, and silly
incidents.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="separator"
style="border-bottom:medium none;border-left:medium none;border-right:medium none;border-top:medium none;clear:both;text-align:center;"&gt;&lt;p&gt;&lt;a href="https://bigfatpage.files.wordpress.com/2011/08/untitled.jpg"&gt;&lt;img alt="image0" src="https://4.bp.blogspot.com/-JcsN3-1iboo/TjfKh76p8KI/AAAAAAAAAN0/PtSkRmAmiuw/s320/untitled.bmp" style="width: 320px; height: 208px" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div dir="ltr"
style="border-bottom:medium none;border-left:medium none;border-right:medium none;border-top:medium none;"&gt;&lt;div class="im"&gt;&lt;div style="text-align:center;"&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div
style="border-bottom:medium none;border-left:medium none;border-right:medium none;border-top:medium none;"&gt;&lt;div
style="border-bottom:medium none;border-left:medium none;border-right:medium none;border-top:medium none;"&gt;&lt;p&gt;&lt;a href="https://bigfatpage.files.wordpress.com/2011/08/114257295.jpg"&gt;&lt;img alt="image1" src="https://1.bp.blogspot.com/-dOWCvFx9nIs/TjfN1GjgEEI/AAAAAAAAAOE/Qeg_lC1054A/s200/114257295.jpg" style="width: 200px; height: 133px" /&gt;&lt;/a&gt;And then in an old Ambassador cab, I was on the way to
Gurgaon. Gurgaon, the place where the desert was turned into a fertile
land, for concrete monsters to grow and reach for the sky. Endless
stretches of residential colonies, with high tension electric lines hung
as garlands. Many a family, from different roots, must have found home
in these blocks.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div
style="border-bottom:medium none;border-left:medium none;border-right:medium none;border-top:medium none;"&gt;&lt;/div&gt;&lt;div&gt;&lt;div
style="border-bottom:medium none;border-left:medium none;border-right:medium none;border-top:medium none;"&gt;&lt;div&gt;&lt;p&gt;The next morning, there were seven of us, and we set out in a “&lt;a href="https://goo.gl/quKA8"&gt;share
auto&lt;/a&gt;”. The way that little vehicle transports a
truck-load of people, was insane yet comfortable. I doubt if I will see
it anywhere else. Bargaining for a hired auto is a pain in the neck.
“Kitna denge?” asked the auto-driver. Trying to play hard my friend
said, “Pachaas!” The obviously unsatisfied driver blurted, “Pachaas mein
nahi chalega. Kahaan se aaye ho?!” Innocently he replied, “Ghar se.”&lt;/p&gt;
&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="im"&gt;&lt;p&gt;The cars that roamed the streets were tattooed with dents. Back home,
people attended to their cars, more often than they were worried of
their own health. Any small scratch was a huge eyesore. Down the road,
BMWs and Audis flooded the traffic junctions; while outside in the
boiling heat we saw hungry young children. They were hanging on to their
dear lives by selling some 5 rupees worth photos of Gods.
Anyhow, we went on with our journey in the Metro, the lifeline of the
NCR. Its clean, cold stainless steel frames, are definitely a relief in
the madness that makes the city what it is. The historical monuments
which dotted the Delhi landscape were a grim reminder how old this city
really is. And that picture is different from the Delhi of malls,
condos, and spendthrift lifestlye.&lt;/p&gt;
&lt;div style="text-align:left;"&gt;&lt;p&gt;Of all the places I have been, an unforgettable memory was that of
Chandni Chowk. However shabby and old the place looks, somewhere in its
dark corners is where the real Delhi, the city of equality, still
survives.&lt;/p&gt;
&lt;/div&gt;&lt;div style="text-align:center;"&gt;&lt;p&gt;&lt;img alt="Chandni%20Chowk(1).jpg" src="https://www.grotal.com/CityImages/Chandni%20Chowk(1).jpg" style="width: 200px; height: 133px" /&gt;&lt;img alt="tour-india-insights-chandni-chowk-delhi.jpg" src="https://www.filmapia.com/sites/default/files/filmapia/pub/place/tour-india-insights-chandni-chowk-delhi.jpg" style="width: 200px; height: 132px" /&gt;&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;Courtesy: Vishnu K.V.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content><category term="Blogger archive"></category><category term="life"></category><category term="travel"></category></entry><entry><title>Things to do before I turn 25</title><link href="https://ashwinvis.github.io/things-to-do-before-i-turn-25.html" rel="alternate"></link><published>2011-04-22T13:12:00+02:00</published><updated>2011-04-22T13:12:00+02:00</updated><author><name>azuwish</name></author><id>tag:ashwinvis.github.io,2011-04-22:/things-to-do-before-i-turn-25.html</id><summary type="html"></summary><content type="html">&lt;ol&gt;
&lt;li&gt;Start reading books again.&lt;/li&gt;
&lt;li&gt;See the world, what lies beyond South India. Live for sometime on the
other side.&lt;/li&gt;
&lt;li&gt;I always think inside my mind continuously. If you think I am silent,
you assumed wrong. I am talking to myself. I really hope to change
it.&lt;/li&gt;
&lt;li&gt;I turn into a wild party animal when I am alone. Where is the heck is
that beast when I need it at real parties?&lt;/li&gt;
&lt;li&gt;Grab a guitar, preferably nylon strings. Learn it during spare time.&lt;/li&gt;
&lt;li&gt;Get a smartphone, just so that I can read e-books for free. Which in
a way aids Resolution #1&lt;/li&gt;
&lt;li&gt;Stop controlling my life, and let go for a change. Say yes to
everything (yea, as in “Yes Man” the movie)&lt;/li&gt;
&lt;li&gt;And that brings us to…. stop watching so many movies! We all
realise at the end of the year, there was just 2 movies worth
remembering. Why bother?&lt;/li&gt;
&lt;li&gt;Sail to an island. Climb a mountain. Jump of a cliff.. I am  done
with roadtrips. I need the X-factor (read, excitement).&lt;/li&gt;
&lt;li&gt;When I was at school, I never judged people (Silly, innocent me).
Then, I realized people do that all the time. Find more friends who
don’t judge me. Then I could be back on my don’t-give-a-f attitude.&lt;/li&gt;
&lt;li&gt;The problem with Cable TVs is that I keep channel surfing, even after
midnight; in the lame hope, that there is something better than
“sleeping” on the next channel. Should learn to turn it off.&lt;/li&gt;
&lt;li&gt;It took me forever to realize what an amazing people my family had
been. All these years, I was unhappy about a not-so-happening
childhood, when actually they were trying to give me a normal
childhood, away from their worries. I promise to give back.&lt;/li&gt;
&lt;li&gt;Meet someone special, who could think on their own, and also who
don’t -giva-a-f to go places on their own.&lt;/li&gt;
&lt;li&gt;Inspire someone, probably a younger someone. Help them out find their
destiny.&lt;/li&gt;
&lt;li&gt;And give and share unconditionally… as if I got millions to spend.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="https://bigfatpage.files.wordpress.com/2011/04/your-bucket-list.png"&gt;&lt;img alt="image0" src="https://bigfatpage.files.wordpress.com/2011/04/your-bucket-list1.png?w=300" style="width: 320px; height: 239px" /&gt;&lt;/a&gt;&lt;/p&gt;
</content><category term="Blogger archive"></category><category term="life"></category><category term="resolution"></category></entry><entry><title>Sheer pleasure of Going Places</title><link href="https://ashwinvis.github.io/sheer-pleasure-of-going-places.html" rel="alternate"></link><published>2011-03-02T04:06:00+01:00</published><updated>2011-03-02T04:06:00+01:00</updated><author><name>azuwish</name></author><id>tag:ashwinvis.github.io,2011-03-02:/sheer-pleasure-of-going-places.html</id><summary type="html"></summary><content type="html">&lt;p&gt;Travelling with a rout3 map in hand is one thing.&lt;/p&gt;
&lt;p&gt;
But have you ever thought of chasing an unknown route, and you have no&lt;br /&gt;
idea where you will end up.&lt;br /&gt;
I used to do it since I was 12, with a new cycle, and all my&lt;br /&gt;
neighbourhood back at Aluva laid out to conquer. Just two summer&lt;br /&gt;
holidays later (i.e. when i turned 14) I had seen it all, I knew every&lt;br /&gt;
grass and gutter. I no longer felt the novelty of getting&lt;br /&gt;
lost… And so, I stopped doing it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Seven long years have past. Days had become hectic for me (or so i&lt;br /&gt;
thought; but I was wrong). Of all these years of being in an alien&lt;br /&gt;
city, never did a wild thought occur to start over and wander&lt;br /&gt;
aimlessly. Gng places had been restricted to hangouts with friends&lt;br /&gt;
(not that it’s a bad thing…my mind had narrowed, if you see my&lt;br /&gt;
point).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Until today.&lt;br /&gt;
Woke up at 6. An early breakfast. And a walk through unknown streets,&lt;br /&gt;
and lonely grounds. Away from traffic and madness of the city. Listen&lt;br /&gt;
to the birds sing. Feel the warmth of the golden sun, on a cold&lt;br /&gt;
morning. And smile :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;Small steps to start with. But good enough to start over.&lt;/p&gt;
&lt;p&gt;So long computers, movies and society! World is calling.&lt;/p&gt;
&lt;p&gt;–&lt;/p&gt;
&lt;p&gt;
Ashwin&amp;gt;&amp;gt;&amp;gt;&lt;br /&gt;
V&lt;br /&gt;
V&lt;br /&gt;
V&lt;br /&gt;
&amp;gt;&amp;gt;&lt;a href="https://bigfatpage.blogspot.com"&gt;bigfatpage.blogspot.com&lt;/a&gt;&amp;lt;&amp;lt;&lt;br /&gt;
&lt;/p&gt;
</content><category term="Blogger archive"></category><category term="Uncategorized"></category></entry><entry><title>Age 21: Where are you now?</title><link href="https://ashwinvis.github.io/age-21-where-are-you-now.html" rel="alternate"></link><published>2011-02-07T12:29:00+01:00</published><updated>2011-02-07T12:29:00+01:00</updated><author><name>azuwish</name></author><id>tag:ashwinvis.github.io,2011-02-07:/age-21-where-are-you-now.html</id><summary type="html"></summary><content type="html">&lt;div dir="ltr" style="text-align:left;"&gt;&lt;p&gt;Plan, one step at a time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;It is a mistake to look too far ahead. Only one link in the chain of
destiny can be handled at a time.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;It is always wise to look ahead, but difficult to look further than you
can see. // (Sir Winston Churchill)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div
style="font-family:'Courier New', Courier, monospace;font-style:italic;"&gt;&lt;/div&gt;&lt;p&gt;
21, an age at which we legally turn adults, willing to take our own
choices (yeah, by all means).&lt;br /&gt;
We stand at crossroads, yet few of us realise the same. The very
ground that we stand now, defines us in the days, months and years to
come…. Yet, few are shaken by the gravity of that decision.&lt;br /&gt;
&lt;br /&gt;
That one decision:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;that  job, you plan to blindly chase in the 1-2 years to follow&lt;/li&gt;
&lt;li&gt;that family business, which you plan to take care of&lt;/li&gt;
&lt;li&gt;that university, which you always dreamt of being a part of&lt;/li&gt;
&lt;li&gt;or even that soul mate, for whom you gave your heart, and made
promises&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Everything matters&lt;/strong&gt;. Search to the bottom of your soul, what you
yearn.&lt;/p&gt;
&lt;p&gt;Think about how “you think” life will be like after that one step. Work
to earn it. Follow it with all you’ve got.&lt;/p&gt;
&lt;p&gt;It all comes down to one small fundamental principle of happiness:&lt;/p&gt;
&lt;/div&gt;

 NO REGRETS&lt;p&gt;And for all fellow beings planning to “go with the flow” and later on
“settle”.
Trust me, it may seem the easy way, but it is the most dangerous path.&lt;/p&gt;
&lt;p&gt;You are talking about settling for 40 years ahead, when already you
have grown vary of living the same life for just 20 years!
&lt;em&gt;Vita longa&lt;/em&gt; (Life is long), explore it in all its glory.&lt;/p&gt;
&lt;p&gt;Farewell!&lt;/p&gt;
</content><category term="Blogger archive"></category><category term="life"></category></entry><entry><title>Music and the State of the Mind</title><link href="https://ashwinvis.github.io/music-and-the-state-of-the-mind.html" rel="alternate"></link><published>2010-11-05T08:45:00+01:00</published><updated>2010-11-05T08:45:00+01:00</updated><author><name>azuwish</name></author><id>tag:ashwinvis.github.io,2010-11-05:/music-and-the-state-of-the-mind.html</id><summary type="html"></summary><content type="html">&lt;p&gt;
&lt;em&gt;Have you ever felt… there is a connection between your emotions and
your level of enjoyment while you are listening to a track. Say it
“striking a vibe”, “feeling the love” whatever, … you immediately
connect to the artist and his lyrics.&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;Here’s a little guide on the kind of music to get you started:&lt;/em&gt;&lt;br /&gt;
*
*&lt;br /&gt;
&lt;em&gt;PS: This is an individual opinion. If you don’t like it, feel free to
throw it off the shelf..&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Homecoming/ nostalgia&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="https://t3.gstatic.com/images?q=tbn:XRh_xR_ASL50sM:b"&gt;&lt;img alt="image0" src="https://t3.gstatic.com/images?q=tbn:XRh_xR_ASL50sM:b" style="width: 265px; height: 400px" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
Country songs are the answer. Especially the old ones.. Shania Twain,
Dolly Parton, Tom Petty, Kenny Rogers, John Denver. All of them talk
of the good times we had, those small pleasures we cherish.&lt;br /&gt;
Even a good Indian would love a “Yun hi chala” on his car stereo, if
it’s roadtrips you have on your min; I’d recommend mixing it up with&lt;br /&gt;
&lt;/p&gt;
&lt;div style="text-align:right;"&gt;&lt;/div&gt;&lt;div style="text-align:right;"&gt;&lt;div class="separator" style="clear:both;text-align:center;"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style="text-align:right;"&gt;&lt;/div&gt;&lt;div style="text-align:right;"&gt;&lt;/div&gt;&lt;p&gt;
&lt;br /&gt;
2. Get high&lt;br /&gt;
&lt;a href="https://t0.gstatic.com/images?q=tbn:ANd9GcR4xPbn5-tdp3Jc1ns8h1mcz8SvkgaK4oVQEjtTrc19BRlUXZU&amp;amp;t=1&amp;amp;usg=__1rj8j4A29oK4mWNY1bRsID8NeVU="&gt;&lt;img alt="image1" src="https://t0.gstatic.com/images?q=tbn:ANd9GcR4xPbn5-tdp3Jc1ns8h1mcz8SvkgaK4oVQEjtTrc19BRlUXZU&amp;amp;t=1&amp;amp;usg=__1rj8j4A29oK4mWNY1bRsID8NeVU=" style="width: 275px; height: 183px" /&gt;&lt;/a&gt;Psych it up with psychedelic, grunge and what not! Good old
Pink Floyd, Led Zepp to the new age bands like Nirvana, Nine Inch
Nails. All serves well.&lt;br /&gt;
I must say- I am totally against booze, drugs, smoke and shit, that
can kill you eventually!&lt;br /&gt;
But listening to music, is a different level. It’s close to travelling
to another universe in your subconscious. Must try&lt;br /&gt;
&lt;/p&gt;
&lt;div style="text-align:right;"&gt;&lt;/div&gt;&lt;div style="text-align:right;"&gt;&lt;/div&gt;&lt;div style="text-align:right;"&gt;&lt;/div&gt;&lt;ol start="3"&gt;
&lt;li&gt;Chillax n Relax&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="separator" style="clear:both;text-align:center;"&gt;&lt;p&gt;&lt;a href="https://t2.gstatic.com/images?q=tbn:ANd9GcSptdHVhgJSSn3VS9proZkGYxo57zipk1NvfjS2ko0jwgbQfOM&amp;amp;t=1&amp;amp;usg=__6VnwRk9DhaR9KPRRLENDcPgEXk8="&gt;&lt;img alt="image2" src="https://t2.gstatic.com/images?q=tbn:ANd9GcSptdHVhgJSSn3VS9proZkGYxo57zipk1NvfjS2ko0jwgbQfOM&amp;amp;t=1&amp;amp;usg=__6VnwRk9DhaR9KPRRLENDcPgEXk8=" style="width: 279px; height: 181px" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;
Holding a hot cuppa in a rainy day, lazing away your day on the
hammock, a walk on the beach… it is all what we do to wind down from
a busy life.&lt;br /&gt;
&lt;br /&gt;
Your ears deserve to take a break from the noises of city life for a
while. Give it the respect it deserves. Listening to slow songs like
Norah Jones, and trip-hop artists like Massive Attack is what I’m
talking about..!&lt;br /&gt;
&lt;/p&gt;
&lt;div style="text-align:right;"&gt;&lt;/div&gt;&lt;p&gt;
4. Distress/ hate/ anger&lt;br /&gt;
Sharing your anger could actually help cool down. Scream it out, don’t
hold it back. I prefer Metalcore, and angry Rap. Eminem, Avenged
Sevenfold, Guns N Roses: it works for me.&lt;br /&gt;
&lt;/p&gt;
&lt;div style="text-align:right;"&gt;&lt;div class="separator" style="clear:both;text-align:center;"&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
For the really crazy guys out there, you love death metal don’t you?&lt;br /&gt;
&lt;br /&gt;
5. Party time!&lt;br /&gt;
&lt;a href="https://t2.gstatic.com/images?q=tbn:ANd9GcRcJyn7eGL5cpvlZUXJZZ8e-tRzaXyXu5OFy3bvF4gz38K-N2w&amp;amp;t=1&amp;amp;usg=__NNDY4z72dsQX_lpoEewKUWgShXM="&gt;&lt;img alt="image3" src="https://t2.gstatic.com/images?q=tbn:ANd9GcRcJyn7eGL5cpvlZUXJZZ8e-tRzaXyXu5OFy3bvF4gz38K-N2w&amp;amp;t=1&amp;amp;usg=__NNDY4z72dsQX_lpoEewKUWgShXM=" style="width: 284px; height: 177px" /&gt;&lt;/a&gt;Go for pop, “dappan”, hip hop, bollywood songs. Anything
goes with a party; only on one condition&lt;br /&gt;
&lt;strong&gt;It should have a good beat to dance to ;)&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;br /&gt;
6. Workaholic(Perspiration/ inspiration)&lt;br /&gt;
&lt;a href="https://t1.gstatic.com/images?q=tbn:ANd9GcQFRYCbVV53W9uolSJWRfSKBjrv7X-ryJ_KoTslu7PoWMDHm9U&amp;amp;t=1&amp;amp;usg=__6589LmRi9dYUxQ7Ots8Bi7usmUo="&gt;&lt;img alt="image4" src="https://t1.gstatic.com/images?q=tbn:ANd9GcQFRYCbVV53W9uolSJWRfSKBjrv7X-ryJ_KoTslu7PoWMDHm9U&amp;amp;t=1&amp;amp;usg=__6589LmRi9dYUxQ7Ots8Bi7usmUo=" style="width: 194px; height: 259px" /&gt;&lt;/a&gt;Trance, trance and trance alone… since it’s electronic
music, you don’t have to listen to the lyrics, thats the plus side.
Time just flies by…&lt;br /&gt;
Tiesto, Armin van buuren, and countless other DJs.. all rock!&lt;br /&gt;
&lt;/p&gt;
&lt;div style="text-align:right;"&gt;&lt;/div&gt;&lt;p&gt;For inspiration, listen to soundtracks of your fav movies. For instance,
Rocky, Gladiator etc etc&lt;/p&gt;
</content><category term="Blogger archive"></category><category term="emotion"></category><category term="list"></category><category term="mood"></category><category term="music"></category></entry><entry><title>“About Me? I dunno, I’m a moron”</title><link href="https://ashwinvis.github.io/about-me-i-dunno-im-a-moron.html" rel="alternate"></link><published>2010-06-02T15:10:00+02:00</published><updated>2010-06-02T15:10:00+02:00</updated><author><name>azuwish</name></author><id>tag:ashwinvis.github.io,2010-06-02:/about-me-i-dunno-im-a-moron.html</id><summary type="html"></summary><content type="html">&lt;p&gt;Still no idea what i’m talking? These one liners may sound familiar to
ya..&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Better u get to know me and say..&lt;/li&gt;
&lt;li&gt;try me&lt;/li&gt;
&lt;li&gt;u &lt;strong&gt;tell&lt;/strong&gt; &lt;strong&gt;me&lt;/strong&gt; that&lt;/li&gt;
&lt;li&gt;am still discovering myself..&lt;/li&gt;
&lt;li&gt;???&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;p&gt;These are a few of those umpteen ONELINER “about me”s you see everyday.
Frankly i’m tired of reading these self insulting statements. So why
bother when you can just LEAVE the space EMPTY!&lt;/p&gt;
&lt;/div&gt;&lt;div&gt;&lt;p&gt;Ever wondered how often you hear her gossiping , and still won’t write a
word describing themselves. Protecting one’s privacy is just a lame
excuse.&lt;/p&gt;
&lt;/div&gt;&lt;div&gt;&lt;p&gt;(PS: i’m not being a chauvinist, i just considered “gossiping” to be
 feminine territory)&lt;/p&gt;
&lt;/div&gt;&lt;div&gt;&lt;p&gt; Networking is all about throwing a window open to the world. If you
want to network , you must tell ppl who you are;.. and yeah, if you
don’t want to do that, well you are in the wrong page.&lt;/p&gt;
&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;
&lt;li&gt;An angry messed up netizen&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;p&gt;&lt;a href="https://bigfatpage.files.wordpress.com/2010/06/its-all-about-me.jpg"&gt;&lt;img alt="image0" src="https://bigfatpage.files.wordpress.com/2010/06/its-all-about-me1.jpg?w=300" style="width: 400px; height: 260px" /&gt;&lt;/a&gt;&lt;/p&gt;
</content><category term="Blogger archive"></category><category term="Uncategorized"></category></entry><entry><title>Musings in a train journey - Pt.1</title><link href="https://ashwinvis.github.io/musings-in-a-train-journey-pt-1.html" rel="alternate"></link><published>2010-04-13T06:02:00+02:00</published><updated>2010-04-13T06:02:00+02:00</updated><author><name>azuwish</name></author><id>tag:ashwinvis.github.io,2010-04-13:/musings-in-a-train-journey-pt-1.html</id><summary type="html"></summary><content type="html">&lt;p&gt;Nothing could be more sore than sitting devoid of company in a train.
For long i held this opinion. It was a hot saturday afternoon and I was
stuck in the Chennai mail homebound. As I was early to reach the
station, I managed to grab a seat in the general coach. A girl entered
the train with her mother. Soon her father called her on the phone
asking where they were. She replied, “Just come into coupe next to which
a mammen is standing, with a newspaper on his head.” The guy to right
suddenly asked, “What if that mammen moves past?” The girl prayed
otherwise.&lt;/p&gt;
&lt;p&gt;For a few passing minutes, i stared at a guy dressed like a pimp, who
stood by the aisle. French beard, violet t-shirt with huge prints,
egg-white wrist watch… “Interesting,” I thought. It wasn’t long
before, the way he spoke made me realise he was that average college
boy. Father came and the train bade goodbye to hot, simmering station.&lt;/p&gt;
&lt;p&gt;I spent the 1st dragging hour staring at the amusements my phone. All i
could think of was my bum  gettin numb. Heaven sent a guy, asking me to
get up and stuff his bags. Relief at last… I got rid of my gadget as i
hit kollam. Transforming into a rubberneck, i saw the multitude of
passengers who sat nearby… This was quite a queer lot.&lt;/p&gt;
&lt;p&gt;
On the windowside opposite was a blind schoolteacher, who held his bag
close to him. And next to me sat a man of sixties, who attempted to
make small talk with the blind gentleman with little success. The
weirdest was a family of three- a husband , a wife and a young girl,
who were determined to battle their way till Chennai in the general
coupe. To the right sat a pair of artists who were completely
strangers when they entered the train. Getting to know each other,
they couldn’t stop themselves from bragging about ‘the ailings of the
entertainers’. Reality shows and egos of the ‘superstars’ hit bigtime
between their gossips.&lt;br /&gt;
(…)&lt;br /&gt;
&lt;em&gt;to be concluded&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</content><category term="Blogger archive"></category><category term="Uncategorized"></category></entry><entry><title>Time is Life</title><link href="https://ashwinvis.github.io/time-is-life.html" rel="alternate"></link><published>2010-02-12T13:04:00+01:00</published><updated>2010-02-12T13:04:00+01:00</updated><author><name>azuwish</name></author><id>tag:ashwinvis.github.io,2010-02-12:/time-is-life.html</id><summary type="html"></summary><content type="html">&lt;p&gt;The past few weeks of my life were the most dramatic, glorious ones.
Things start getting too good for you, they happen  so fast… that, it
is next to impossible to squeeze enough time out. Those were yes, the
golden moments…&lt;/p&gt;
&lt;p&gt;Childhood was great… you had a hardcore gang of 5-6 buddies, and your
life mostly revolved around the innocent jokes you played. Now, you are
20, and your friend circle has expanded exponentially… you can’t miss
out catching up with anyone, nor upset with negligence.&lt;/p&gt;
&lt;p&gt;Sometimes I wonder if you ever get wary of keeping it alive, and
connected. Ever wondered what it would be like to just I S O L A T E?
Surely it is crazy, but is socializing any less insane?&lt;/p&gt;
&lt;p&gt;Today I’m running away… just to spend the holiday lazing around (-_-)&lt;/p&gt;
</content><category term="Blogger archive"></category><category term="friends"></category><category term="life"></category></entry></feed>